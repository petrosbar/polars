var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"SQCCQCHCCCEECCCEHIFGTPPTTFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFFFIFKFFKFFFKFFINNNNNNNNNNMMNNNNNNNNNNNNNNNNNMNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNCNNNNNNNNNNNMMMMHNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFMNMONNNHNKKNNNNNNNNNNNNKMKKNMFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCCFIKKNNNNNMNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPKKFFPNNNMMMMMMNMCNNNNNNMMNNNNNNNNNNNNNNOONNNNNNMMNNNNNNNMCMMCNNNNNNNNCMMCMMMMNNNNNNNNNNNMMOONNNNNOONNNMMMOOMNNNMNMMCMMMMMCMMNNMMMNNNNNNNNNNNNMNNNNNNNNNNNNNNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFOOOOOOOOMMCHHHHHHHHHPGPPRIKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPPIFPPIFPPPPIFPPPPIFPPPFFIPPFPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFPRIIIIIKKKKRGFPKPPPIPFPPPFPPPPPIFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHHNNHNNNNNNNNNNNNNNNNNNNNNNNNNNONNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNFFFKGPFPPPGHMHHCCGPPPPGFNNNNNHNNHNNNNNNNHNCCPPPPPFPPPPPGIGPPPPPPNNNNNNNCNNNNNNNNNNNNQNNNNNNNNNNNNNNNHNNNNNNHQQQQHHNNNNNNNNNNNNNNOOOOJJJPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHPPGPPPPPPIPGPPKFFPPPPPGFKPPKPPPRIKPKKFIGFFGKKPFKKPKKGPPJPPPPFFPPPPIIPPKPIFPFKPPPPPPIFGFIPPFFPFPPPFPPPFFGKFGFPPFFKKKKKKKKKKKKKKFIKKKKKKKKKKKKFKKKKPGGPPPPPPGPPPPPPPPPPKGFFFFFPPPPPJJFKKPPPGPPPPPIKPFPPFIKFPPPPIFPKPPPPPPGPPPFPPPPFIKFIFPPPPPPPGPPPGKFPPPPPPJJFFPIFIFIPIGPPPPPPPPPFPPPPPPPIFPPPPIFPPPPPPPKKKPRPGKPPPKPIPFFPGPFGGFFIPPPPFPPRRRPPPSJPPPIIIIIPPFPKGKKKPIPPIFPPPPIFPPPPIFPPPPIFPPPPIFPPGPKKKKKPGFFFFFFFFPPKPPPKPPRPPPRPPFFGKFPGGPGFPFFFPPPGPIPIIPPPPPFKFFFPPPPPIPPPPKPPPPPPFFKIPKFKKFFFKPGPFPPKPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPSPPPPKKPPPPRPPPPPGPKPFGPPPPPPPPPFPPPPPPPGIFKKKPPIPFPPPGFPPRPRPFFGGFFFFFIPRIIIIIPKKGKKKKKKKIKKKRKPGFPPKGGPPPPPPPGFKPKPPPPGPPPPPPPFPPFFFFKFPPKIPPFRPFFFFPPIGPPPKKFFPKKKKKKKKKPPPPPPPPPPPPKFPPPPFFFPPPFPGPKPPPPPPPFPIIPGKKPFPPPPPPFPPPFFPPFPPPPPPPKPKPFPPPPPPIKFGIPPPKPPRRPFPPPPPIFPPPPIFPPPPIFPPPPIFKPPPFPGPPGPPFPPPPRRPPKKPFPFPPGGPPPRRPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNHNNNNNNNNHNMNNNMNNNCNHNHNNONNNNONNNHNMMNNMMMNNHNMMNNHMMHNMNNNMNNNMNNHNMNNHNOCNMNNMCNMMNNNNNMNNNNNMNNNNMMNNMHNNNHNNNHONNNNNNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOMNHMMNNHMMMNNNMCNNNNNONHHHOOMNMMOCMMHNHNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCNOOOONNHNNOHHNHNNNNNNNNNNNHNOONONNOONHNHNNHHHHNNNNNNNNHHNNNNHHNNNONNNHNHHNHNHNHHNNONNOCOHCHOHHHHHNNNOMNONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNHOQOHNNNOMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHCNMNOHHOHOONNONNHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNMCNNNNNNNNNOONNNNNNNNNOOONNCNNNMMMNNNNNNMMMMNNNNNNNNNNNNNNNMNNNNHNNNCNOCNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOOHNOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNMNNNNMNNONNNMMNNNNMNNCMNNNMMOCNCNNNMNNNNNMNMNNNNNNMNNNMMNNNNNNNNMNNNNNNNHMHMNNNNONMNNHHNMNNMNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHMNNOMONOONOHHNNHNOONONNHOOMNNHHNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONHHOCHNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNMNNNHNHHNNNNNNHNNNHNNHNNNNNNNHMNHMNNNOHNNNNNNNNNNNMNNNNNNNNNNNNNNNNNONNNOOHNNNNMNNONNNMMMHMNNNNNNNNONHMNNNNOONNOOONNNNNNNNNNNNNNNNNNNNNNMNNMNOOOOOOHHNNNNHNNNNNNNNNNHNNHNNNNNNNHHHNNNNNNNOHNNNNNHNNNNNNMNNOONNHNOOOOMONMOHNNNNNNOOONNOMNNOMOOCNNNNOMMNNMNNMOONMNNOOOOONONNNNNMNOOOONNCMNNMNONNNHHNMNNNMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNHNNNNNNNNNNNNNNNNNNNNHNMMHCNNOMNNOOOONOOOOMNNONNNNNNNONNOOONMMNOONNMNNOMNNOONNNQQQQNOOONNHONNNOOONNHNNNMNNNNNOOOONNNNNNNNNMMNNOOOOHNNMNMNMNNNHHNHNNNNNNHNNNNHOMMNNNNONMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNOOOOMNNOOOOOONNNNOMNNNNNMMMNNNNNNNNOOOOCOCMNNOMONNNOOOCMNNNNNNNNNNNMMNNNNMNNNNNMNNOONNNNOOOOCMNNNNNOOOMNMNNNNNCMNNNNNNMNNNNNHNHNNONNONNNNNNMNNNHNNNNNNOOOONONCHNHNHNHNHNNNMNMNNNONHNNNNNNNNNNNNNMMMMMMMMNHNNOHOOONNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOONMMMMNNNNNNNNONNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMCMNNNNNNNNNNNNNNMMNOOCNONNNNNOMONMNNNNNNNMNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOHNNOOONNNNNNMMNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMMMMMMMMMMMMMMMMMMNNNNNNNOCMOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOKKHHHHHHHHMMMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHKKNNNNNNNNNNNNNNNNMFNNNNNNNNNNNNNNNFKKKFKKKNNNNNONNMOMNMNNNNMMOMNMNNMNMNNMMNNNNNNNNNNNNNNNNNMNMCNNNNONNKPPPPPGKNNNNNMNNNNNNNNNNNNNNNCNNNNNNNNFRKKNNNNNNNNNHNNONMNNONNMNNNNNPPFGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNPPFGPPPOPGPPRIKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPPIFPPIFPPPPIFPPPPIFPPPFFIPPFPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFPRIIIIIKKKKRGFPKPPPIPFPPPFPPPPPIFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRMNNMMNHMCNNNNHMOMNNNMNNNMMNMNHHHOMMMNNMNNNNNMMMMMFFFKGPFPPPGHMHHCCGPPPPGFHHHHHHKKKMMMFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMMFNNNNNNNNNNNNNNNNNNOHHPPPPPPPPPPPPPGPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNHHHGPPHHHHHHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNHNNNNNNNNNPPPGHHKKMNNNNNNNNNNNNNNNNNNNKMMKHCCCMMHHHHHHHHKFFOOOOOOOOMMKFKMNNNNNNNNNNNNNNNNNHNNNNNNNHNHNHNNNNNNHNHNHNHNHNNNNNFOOOOOKKNNPKPKGRPFFIKNNNNNNNNNNNNNCNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNMNNNMNNNNNNNCNNNNNNNNMNNNNNNMMNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNMNNNNMCNNNMNNNMNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNMNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNKKKRHMMNCMMNMMNMMNMMNKKMNMNPPGNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNN","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitand","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast","cast","cast","cast","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","explode_and_offsets","extend","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_name","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_flags","get_inner","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","inner_dtype","insert","intersection","intersects","into","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","remove","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","std","std_reduce","std_reduce","std_reduce","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","sum_reduce","symmetric_difference","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","width","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","One","Reinterpret","SlicedArray","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_time_unit","cast_time_unit","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_shape","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","leaf_dtype","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","month_end","month_end","month_start","month_start","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","update","uses_lexical_ordering","value","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","lazy","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","CommentPrefix","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeMethods","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Exclude","Excluded","Explode","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","IDX_DTYPE","INTEGER_RE","IO","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","MeltArgs","Microsecond","Microseconds","Midpoint","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Mode","Modulus","Monday","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","PathIterator","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsMonthEnd","PolarsMonthStart","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesReshape","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","Snappy","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","SubPlan","Sum","Sum","SumHorizontal","Sunday","Tail","TakeChunked","TemporalExpr","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","Xor","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_finish_left_join","_full_join_from_series","_join_suffix_name","_left_join_from_series","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cat","cat","cause","cbrt","ceil","ceil","center","century","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","check_sorted","check_sorted","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","display","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","eager","eager","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","explain","explode","explode","explode","explode_and_offsets","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full_join","full_join","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_leaf_array","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_validity","has_validity","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","id_vars","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_reader_with_file_handle","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_paths","join","join","join","join","join_asof","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","melt","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","month_end","month_start","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","path","path","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_time_zone","reserve","reshape","reshape_array","reshape_list","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","try_unwrap","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unwrap","unwrap_or_clone","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","value_vars","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_extension","with_fields","with_float_precision","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BinaryExpr","Boolean","BooleanFunction","Categorical","CategoricalFunction","Cbrt","Ceil","Clip","Coalesce","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Diff","DropNans","DropNulls","EndsWith","Explode","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","MinHorizontal","Mode","Negate","Not","NullCount","Pow","PowFunction","Random","Range","Rank","RepeatBy","Replace","Replace","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","RoundSF","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","Titlecase","ToDecimal","ToInteger","ToPhysical","Unique","UpperBound","Uppercase","ValueCounts","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","replace_chunks","replace_with_chunk","reverse","reverse","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","unstable","var","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array"],"q":[[0,"polars"],[17,"polars::chunked_array"],[867,"polars::chunked_array::arithmetic"],[895,"polars::chunked_array::builder"],[1152,"polars::chunked_array::builder::list"],[1169,"polars::chunked_array::collect"],[1183,"polars::chunked_array::float"],[1185,"polars::chunked_array::from_iterator_par"],[1189,"polars::chunked_array::iterator"],[1259,"polars::chunked_array::iterator::par"],[1261,"polars::chunked_array::object"],[1332,"polars::chunked_array::object::builder"],[1355,"polars::chunked_array::object::registry"],[1383,"polars::chunked_array::ops"],[1581,"polars::chunked_array::ops::arity"],[1616,"polars::chunked_array::ops::float_sorted_arg_max"],[1618,"polars::chunked_array::ops::gather"],[1621,"polars::chunked_array::ops::search_sorted"],[1650,"polars::chunked_array::ops::sort"],[1657,"polars::chunked_array::ops::sort::arg_bottom_k"],[1658,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1665,"polars::chunked_array::ops::sort::options"],[1678,"polars::chunked_array::temporal"],[1685,"polars::chunked_array::temporal::conversion"],[1688,"polars::datatypes"],[3058,"polars::datatypes::categorical"],[3075,"polars::datatypes::categorical::revmap"],[3081,"polars::datatypes::categorical::string_cache"],[3100,"polars::docs"],[3102,"polars::error"],[3186,"polars::error::PolarsError"],[3190,"polars::error::constants"],[3193,"polars::frame"],[3446,"polars::frame::explode"],[3475,"polars::frame::group_by"],[3710,"polars::frame::group_by::GroupByMethod"],[3711,"polars::frame::group_by::GroupsProxy"],[3713,"polars::frame::group_by::aggregations"],[3726,"polars::frame::group_by::expr"],[3729,"polars::frame::row"],[3836,"polars::functions"],[3838,"polars::prelude"],[8744,"polars::prelude::AggExpr"],[8751,"polars::prelude::BooleanFunction"],[8754,"polars::prelude::DslPlan"],[8805,"polars::prelude::Expr"],[8839,"polars::prelude::FunctionExpr"],[8860,"polars::prelude::GroupByMethod"],[8861,"polars::prelude::GroupsProxy"],[8863,"polars::prelude::LiteralValue"],[8866,"polars::prelude::PolarsError"],[8870,"polars::prelude::StringFunction"],[8884,"polars::prelude::aggregations"],[8897,"polars::prelude::arity"],[8932,"polars::prelude::array"],[8951,"polars::prelude::binary"],[8967,"polars::prelude::cat"],[8968,"polars::prelude::chunkedarray"],[9035,"polars::prelude::chunkedarray::string"],[9073,"polars::prelude::chunkedarray::string::infer"],[9103,"polars::prelude::cloud"],[9150,"polars::prelude::cloud::options"],[9158,"polars::prelude::datatypes"],[9423,"polars::prelude::datatypes::categorical"],[9440,"polars::prelude::datatypes::categorical::revmap"],[9446,"polars::prelude::datatypes::categorical::string_cache"],[9450,"polars::prelude::datetime"],[9453,"polars::prelude::default_arrays"],[9459,"polars::prelude::dt"],[9511,"polars::prelude::expr"],[9514,"polars::prelude::fixed_size_list"],[9534,"polars::prelude::float_sorted_arg_max"],[9536,"polars::prelude::function_expr"],[9659,"polars::prelude::function_expr::BooleanFunction"],[9662,"polars::prelude::function_expr::FunctionExpr"],[9683,"polars::prelude::function_expr::StringFunction"],[9697,"polars::prelude::function_expr::cat"],[9699,"polars::prelude::function_expr::pow"],[9703,"polars::prelude::function_expr::rolling"],[9732,"polars::prelude::function_expr::rolling_by"],[9761,"polars::prelude::gather"],[9764,"polars::prelude::interpolate"],[9768,"polars::prelude::interpolate_by"],[9769,"polars::prelude::mode"],[9770,"polars::prelude::nan_propagating_aggregate"],[9774,"polars::prelude::null"],[9804,"polars::prelude::schema_inference"],[9828,"polars::prelude::search_sorted"],[9834,"polars::prelude::series"],[9856,"polars::prelude::slice"],[9859,"polars::prelude::sort"],[9866,"polars::prelude::sort::arg_bottom_k"],[9867,"polars::prelude::sort::arg_sort_multiple"],[9874,"polars::prelude::sort::options"],[9887,"polars::prelude::strings"],[9941,"polars::prelude::udf"],[9947,"polars::prelude::utf8"],[9951,"polars::series"],[10352,"polars::series::arithmetic"],[10373,"polars::series::arithmetic::checked"],[10379,"polars::series::ops"],[10405,"polars::series::unstable"],[10429,"dyn_clone::sealed"],[10430,"polars_core::datatypes"],[10431,"polars_core::chunked_array"],[10432,"num_traits"],[10433,"num_traits::cast"],[10434,"polars_core::series"],[10435,"polars_error"],[10436,"core::result"],[10437,"polars_core::series::arithmetic::borrowed"],[10438,"polars_core::frame::group_by::proxy"],[10439,"polars_core::chunked_array::object"],[10440,"core::option"],[10441,"polars_arrow::array"],[10442,"alloc::boxed"],[10443,"core::iter::traits::iterator"],[10444,"polars_core::chunked_array::list::iterator"],[10445,"core::ops::function"],[10446,"core::marker"],[10447,"alloc::borrow"],[10448,"polars_core::series::unstable"],[10449,"polars_core::datatypes::dtype"],[10450,"alloc::string"],[10451,"polars_core::chunked_array::ops::sort::options"],[10452,"polars_core::series::arithmetic::borrowed::checked"],[10453,"core::slice::iter"],[10454,"core::iter::adapters::map"],[10455,"alloc::vec"],[10456,"core::iter::traits::double_ended"],[10457,"polars_arrow::offset"],[10458,"core::iter::traits::collect"],[10459,"core::fmt"],[10460,"polars_utils::iter::fallible"],[10461,"polars_arrow::bitmap::immutable"],[10462,"core::borrow"],[10463,"polars_core::chunked_array::from_iterator"],[10464,"core::convert"],[10465,"rayon::iter"],[10466,"polars_arrow::pushable"],[10467,"polars_arrow::trusted_len"],[10468,"polars_core::datatypes::any_value"],[10469,"polars_core::series::series_trait"],[10470,"polars_core::chunked_array::logical"],[10471,"polars_core::datatypes::time_unit"],[10472,"core::iter::traits::exact_size"],[10473,"polars_core::chunked_array::iterator"],[10474,"bitflags::iter"],[10475,"core::ops::range"],[10476,"polars_arrow::legacy::kernels::rolling::no_nulls"],[10477,"polars_core::datatypes::field"],[10478,"polars_core::chunked_array::ops::rolling_window"],[10479,"polars_ops::chunked_array::scatter"],[10480,"polars_utils::index"],[10481,"ahash::random_state"],[10482,"polars_utils::hashing"],[10483,"ndarray"],[10484,"ndarray::dimension::dim"],[10485,"ndarray::data_repr"],[10486,"either"],[10487,"core::any"],[10488,"polars_core::chunked_array::arithmetic::numeric"],[10489,"polars_core::chunked_array::builder::list::anonymous"],[10490,"polars_core::chunked_array::builder::list::boolean"],[10491,"polars_core::chunked_array::builder::list::primitive"],[10492,"polars_core::chunked_array::builder::list"],[10493,"polars_core::chunked_array::builder"],[10494,"polars_core::chunked_array::builder::list::binary"],[10495,"polars_core::chunked_array::builder::list::null"],[10496,"polars_core::chunked_array::builder::string"],[10497,"polars_arrow::array::binview"],[10498,"polars_core::chunked_array::builder::boolean"],[10499,"polars_core::chunked_array::builder::null"],[10500,"polars_core::chunked_array::builder::primitive"],[10501,"core::clone"],[10502,"polars_core::series::implementations::null"],[10503,"polars_core::chunked_array::collect"],[10504,"polars_core::chunked_array::float"],[10505,"polars_core::chunked_array::from_iterator_par"],[10506,"polars_arrow::array::boolean"],[10507,"polars_arrow::array::fixed_size_list"],[10508,"polars_arrow::datatypes"],[10509,"polars_arrow::bitmap::utils::iterator"],[10510,"polars_arrow::bitmap::utils::zip_validity"],[10511,"alloc::sync"],[10512,"polars_core::chunked_array::object::builder"],[10513,"polars_core::chunked_array::object::registry"],[10514,"polars_core::chunked_array::ops"],[10515,"core::hash"],[10516,"polars_arrow::legacy::array::slice"],[10517,"polars_core::chunked_array::ops::arity"],[10518,"polars_arrow::array::static_array"],[10519,"core::error"],[10520,"polars_arrow::array::primitive"],[10521,"polars_core::chunked_array::ops::search_sorted"],[10522,"polars_core::utils"],[10523,"polars_row::row"],[10524,"chrono::naive::datetime"],[10525,"chrono_tz::timezones"],[10526,"chrono::naive::time"],[10527,"polars_core::chunked_array::logical::struct_"],[10528,"polars_core::chunked_array::logical::categorical"],[10529,"polars_core::chunked_array::logical::categorical::builder"],[10530,"polars_arrow::array::static_array_collect"],[10531,"bytemuck::zeroable"],[10532,"polars_core::chunked_array::logical::categorical::revmap"],[10533,"polars_core::chunked_array::logical::categorical::merge"],[10534,"polars_arrow::types"],[10535,"polars_arrow::datatypes::physical_type"],[10536,"chrono::time_delta"],[10537,"chrono::naive::date"],[10538,"smartstring::config"],[10539,"smartstring"],[10540,"core::cmp"],[10541,"polars_time::windows::duration"],[10542,"polars_core::frame"],[10543,"polars_core::chunked_array::logical::categorical::string_cache"],[10544,"polars_error::warning"],[10545,"planus::errors"],[10546,"std::io::error"],[10547,"simdutf8::basic"],[10548,"regex::error"],[10549,"polars_parquet::parquet::error"],[10550,"alloc::collections"],[10551,"polars_core::schema"],[10552,"polars_core::series::from"],[10553,"hashbrown::set"],[10554,"polars_arrow::datatypes::schema"],[10555,"polars_core::frame::row"],[10556,"polars_core::frame::group_by"],[10557,"polars_time::group_by::dynamic"],[10558,"polars_lazy::frame"],[10559,"polars_core::frame::explode"],[10560,"polars_core::chunked_array::ndarray"],[10561,"polars_arrow::record_batch"],[10562,"polars_arrow::array::struct_"],[10563,"polars_utils::idx_vec"],[10564,"rayon::iter::plumbing"],[10565,"polars_plan::logical_plan::aexpr"],[10566,"polars_core::frame::group_by::into_groups"],[10567,"core::iter::adapters::copied"],[10568,"core::iter::adapters::zip"],[10569,"polars_utils::float"],[10570,"polars_arrow::types::native"],[10571,"polars_core::frame::group_by::aggregations::agg_list"],[10572,"polars_core::frame::group_by::aggregations"],[10573,"polars_core::frame::group_by::expr"],[10574,"polars_core::frame::row::av_buffer"],[10575,"polars_utils::arena"],[10576,"polars_plan::logical_plan::alp"],[10577,"polars_ops::frame::join::hash_join"],[10578,"polars_ops::frame::join::args"],[10579,"polars_ops::chunked_array::gather::chunked"],[10580,"polars_ops::frame"],[10581,"polars_io::csv::read::reader"],[10582,"polars_io::predicates"],[10583,"polars_io::mmap"],[10584,"polars_plan::dsl::expr"],[10585,"core::alloc"],[10586,"polars_plan::logical_plan::anonymous_scan"],[10587,"polars_lazy::scan::ndjson"],[10588,"polars_lazy::scan::anonymous_scan"],[10589,"polars_plan::dsl::expr_dyn_fn"],[10590,"polars_plan::logical_plan::visitor"],[10591,"polars_plan::dsl::function_expr"],[10592,"polars_ops::series::ops::arg_min_max"],[10593,"polars_plan::dsl::array"],[10594,"polars_plan::dsl::list"],[10595,"polars_plan::dsl::function_expr::schema"],[10596,"polars_io::ipc::ipc_stream"],[10597,"std::io"],[10598,"polars_ops::chunked_array::binary"],[10599,"polars_time::chunkedarray::string"],[10600,"std::os::fd::owned"],[10601,"polars_ops::chunked_array::list"],[10602,"std::os::fd::raw"],[10603,"polars_ops::series::ops"],[10604,"polars_ops::chunked_array::strings"],[10605,"core::mem::maybe_uninit"],[10606,"polars_ops::chunked_array::strings::namespace"],[10607,"polars_io::csv::read::read_impl::batched"],[10608,"polars_io::csv::write::writer"],[10609,"polars_io::ipc::write"],[10610,"polars_io::parquet::read::reader"],[10611,"polars_io::parquet::read::read_impl"],[10612,"polars_io::parquet::write::writer"],[10613,"polars_io::parquet::write::batched_writer"],[10614,"polars_plan::dsl::binary"],[10615,"polars_plan::dsl::udf"],[10616,"polars_lazy::frame::exitable"],[10617,"hashbrown::map"],[10618,"polars_plan::dsl::cat"],[10619,"polars_ops::series::ops::round"],[10620,"polars_time::series"],[10621,"polars_time::chunkedarray::rolling_window"],[10622,"polars_time::windows::bounds"],[10623,"polars_lazy::scan::csv"],[10624,"polars_lazy::scan::ipc"],[10625,"polars_time::windows::group_by"],[10626,"polars_lazy::scan::parquet"],[10627,"polars_time::windows::window"],[10628,"polars_io::csv::read::options"],[10629,"polars_io::csv::write::options"],[10630,"polars_io::ipc::ipc_file"],[10631,"polars_io::json"],[10632,"polars_io::parquet::read::options"],[10633,"polars_io::parquet::write::options"],[10634,"polars_ops::frame::join::asof"],[10635,"polars_ops::series::ops::interpolation::interpolate"],[10636,"polars_ops::series::ops::is_between"],[10637,"polars_ops::series::ops::rank"],[10638,"polars_plan::logical_plan"],[10639,"polars_plan::dsl::arity"],[10640,"polars_plan::dsl::function_expr::boolean"],[10641,"polars_plan::dsl::function_expr::cat"],[10642,"polars_plan::dsl::function_expr::pow"],[10643,"polars_plan::dsl::function_expr::strings"],[10644,"polars_plan::dsl::functions::temporal"],[10645,"polars_plan::dsl::options"],[10646,"polars_plan::frame::opt_state"],[10647,"polars_plan::logical_plan::lit"],[10648,"polars_plan::logical_plan::options"],[10649,"polars_parquet::parquet::metadata::file_metadata"],[10650,"polars_arrow::legacy::kernels::rolling"],[10651,"polars_arrow::legacy::kernels::time"],[10652,"polars_lazy::scan::file_list_reader"],[10653,"polars_io::cloud::options"],[10654,"polars_parquet::parquet::metadata::column_order"],[10655,"polars_ops::chunked_array::binary::namespace"],[10656,"std::path"],[10657,"polars_io::shared"],[10658,"polars_ops::frame::join::cross_join"],[10659,"polars_lazy::dsl::eval"],[10660,"polars_time::chunkedarray::date"],[10661,"polars_time::chunkedarray::datetime"],[10662,"polars_time::chunkedarray::duration"],[10663,"core::default"],[10664,"polars_parquet::parquet::metadata::row_metadata"],[10665,"polars_core::series::ops"],[10666,"polars_plan::dsl::dt"],[10667,"polars_arrow::scalar"],[10668,"polars_lazy::dsl::list"],[10669,"crossterm::command"],[10670,"polars_plan::dsl::struct_"],[10671,"polars_io::ndjson::core"],[10672,"std::fs"],[10673,"polars_plan::logical_plan::apply"],[10674,"polars_plan::dsl::function_expr::struct_"],[10675,"polars_plan::dsl::function_expr::list"],[10676,"polars_plan::dsl::function_expr::range"],[10677,"polars_plan::dsl::function_expr::binary"],[10678,"polars_plan::dsl::function_expr::datetime"],[10679,"polars_plan::dsl::function_expr::array"],[10680,"alloc::ffi::c_str"],[10681,"core::ffi::c_str"],[10682,"std::ffi::os_str"],[10683,"polars_parquet::arrow::read::statistics"],[10684,"polars_arrow::array::growable::structure"],[10685,"polars_arrow::array::struct_::mutable"],[10686,"polars_arrow::legacy::array::default_arrays"],[10687,"polars_arrow::buffer::immutable"],[10688,"polars_arrow::array::list"],[10689,"polars_core::named_from"],[10690,"polars_ops::frame::join"],[10691,"polars_ops::series::ops::reshape"],[10692,"polars_arrow::legacy::array"],[10693,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[10694,"polars_time::chunkedarray::time"],[10695,"parquet_format_safe::parquet_format"],[10696,"polars_ops::series::ops::various"],[10697,"polars_arrow::array::struct_::iterator"],[10698,"polars_ops::frame::join::asof::groups"],[10699,"polars_ops::chunked_array::list::namespace"],[10700,"polars_plan::dsl::name"],[10701,"polars_io::options"],[10702,"polars_core::chunked_array::ops::aggregate"],[10703,"polars_core::chunked_array::ops::aggregate::quantile"],[10704,"polars_time::month_end"],[10705,"polars_time::month_start"],[10706,"polars_arrow::legacy::index"],[10707,"polars_ops::chunked_array::strings::split"],[10708,"core::pin"],[10709,"core::io::borrowed_buf"],[10710,"parquet_format_safe::thrift::varint::decode"],[10711,"polars_time::chunkedarray::rolling_window::dispatch"],[10712,"polars_time::round"],[10713,"polars_parquet::parquet::metadata::schema_descriptor"],[10714,"polars_core::chunked_array::ops::aggregate::var"],[10715,"polars_plan::dsl::string"],[10716,"polars_ops::series::ops::to_dummies"],[10717,"polars_time::truncate"],[10718,"std::sync::rwlock"],[10719,"polars_io::csv::read::schema_inference"],[10720,"polars_time::upsample"],[10721,"polars_core::hashing::vector_hasher"],[10722,"core::num::nonzero"],[10723,"alloc::collections::btree::map"],[10724,"polars_ops::chunked_array::array::namespace"],[10725,"polars_ops::chunked_array::array"],[10726,"polars_time::chunkedarray::string::patterns"],[10727,"polars_time::chunkedarray::string::infer"],[10728,"polars_arrow::legacy::array::fixed_size_list"],[10729,"polars_plan::dsl::function_expr::rolling"],[10730,"polars_plan::dsl::function_expr::rolling_by"],[10731,"polars_arrow::legacy::array::null"],[10732,"polars_arrow::bitmap::mutable"],[10733,"polars_arrow::array::utf8"],[10734,"polars_arrow::array::binary"],[10735,"polars_core::series::iterator"],[10736,"polars_core"],[10737,"polars_core::chunked_array::iterator::par"],[10738,"polars_core::chunked_array::ops::float_sorted_arg_max"],[10739,"polars_core::chunked_array::ops::gather"],[10740,"polars_core::chunked_array::ops::sort"],[10741,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[10742,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[10743,"polars_core::chunked_array::temporal"],[10744,"polars_core::chunked_array::temporal::conversion"],[10745,"polars_core::chunked_array::temporal::time"],[10746,"polars_core::chunked_array::logical::date"],[10747,"polars_core::chunked_array::logical::datetime"],[10748,"polars_core::chunked_array::logical::decimal"],[10749,"polars_core::chunked_array::logical::duration"],[10750,"polars_core::datatypes::aliases"],[10751,"polars_utils::aliases"],[10752,"polars_core::chunked_array::logical::time"],[10753,"polars_error::constants"],[10754,"polars_core::functions"],[10755,"polars_io::utils"],[10756,"polars_io::parquet::metadata"],[10757,"polars_arrow::legacy::prelude"],[10758,"polars_ops::series::ops::rolling"],[10759,"polars_parquet::parquet::write"],[10760,"polars_ops::frame::join::general"],[10761,"polars_ops::series::ops::abs"],[10762,"polars_plan::dsl::functions::selectors"],[10763,"polars_plan::dsl::functions::horizontal"],[10764,"polars_plan::dsl::functions::arity"],[10765,"polars_plan::dsl"],[10766,"polars_plan::dsl::functions::range"],[10767,"polars_plan::dsl::functions::index"],[10768,"polars_ops::chunked_array"],[10769,"polars_plan::dsl::functions::coerce"],[10770,"polars_plan::dsl::functions::syntactic_sugar"],[10771,"polars_time::base_utc_offset"],[10772,"polars_time"],[10773,"polars_ops::series::ops::clip"],[10774,"polars_io"],[10775,"polars_ops::series::ops::horizontal"],[10776,"polars_lazy::dsl::functions"],[10777,"polars_plan::dsl::functions::concat"],[10778,"polars_ops::series::ops::index"],[10779,"polars_io::csv::read::parser"],[10780,"polars_ops::series::ops::cum_agg"],[10781,"polars_ops::series::ops::diff"],[10782,"polars_time::dst_offset"],[10783,"polars_ops::series::ops::floor_divide"],[10784,"polars_ops::chunked_array::strings::concat"],[10785,"polars_ops::chunked_array::datetime::replace_time_zone"],[10786,"polars_time::date_range"],[10787,"polars_ops::series::ops::interpolation"],[10788,"polars_ops::series::ops::interpolation::interpolate_by"],[10789,"polars_io::csv::read::utils"],[10790,"polars_ops::series::ops::is_first_distinct"],[10791,"polars_ops::series::ops::is_in"],[10792,"polars_ops::series::ops::is_last_distinct"],[10793,"polars_io::parquet::read::utils"],[10794,"polars_ops::series::ops::negate"],[10795,"polars_ops::series::ops::not"],[10796,"polars_ops::series::ops::int_range"],[10797,"polars_plan::dsl::functions::repeat"],[10798,"polars_ops::chunked_array::repeat_by"],[10799,"polars_ops::series::ops::replace"],[10800,"polars_io::csv::read"],[10801,"polars_ops::chunked_array::strings::strip"],[10802,"polars_time::chunkedarray"],[10803,"polars_io::cloud"],[10804,"polars_ops::chunked_array::mode"],[10805,"polars_ops::chunked_array::nan_propagating_aggregate"],[10806,"polars_arrow::legacy::array::utf8"]],"if":"``````{{}b}`````````{{}d}```````````{{{f{c}}h}b{}}0{{{f{{l{j}}}}}d}{{{l{c}}{l{c}}}{}n}{{{l{A`}}{l{A`}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}}{{{f{{l{c}}}}e}{}n{AdAf}}{{{f{{l{A`}}}}{f{Ah}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}}{{{l{c}}e}{}n{AdAf}}{{{l{Aj}}{l{Aj}}}}{{{l{Ab}}{l{Ab}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{Ab}}}}{f{{An{Al}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{j}}}}{f{Bh}}}B`}{{{f{{l{Bj}}}}{f{Bh}}}B`}{{{f{{l{A`}}}}{f{Bh}}}B`}{{{f{{l{Ab}}}}{f{Bh}}}B`}{{{f{{l{Aj}}}}{f{Bh}}}B`}{{{f{{l{c}}}}{f{Bh}}}B`n}{{{f{{l{{Bl{c}}}}}}{f{Bh}}}B`Bn}{{{f{{l{Aj}}}}}d}{{}C`}{{{f{{l{Aj}}}}}{{Cb{d}}}}{{{f{{l{Bj}}}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}{{{f{{l{j}}}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}{{{f{{l{Bj}}}}{f{Ah}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}{{{f{{l{j}}}}{f{Ah}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}64{{{f{Cn{l{c}}}}{f{{l{c}}}}}b{{Dd{}{{D`{Db}}}}}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Dh{{Cb{{f{c}}}}}{{Df{{Cb{c}}}}}}Dj}}{{{f{{l{Ab}}}}c}{{l{Ab}}}{{Dh{{Cb{{f{{An{Al}}}}}}}{{Df{{Cb{{Dl{{An{Al}}}}}}}}}}Dj}}{{{f{{l{j}}}}c}{{l{j}}}{{Dh{{Cb{B`}}}{{Df{{Cb{B`}}}}}}Dj}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Dh{{Cb{d}}}{{Df{{Cb{d}}}}}}Dj}}{{{f{{l{c}}}}e}{{l{c}}}n{{Dh{Cb}{{Df{Cb}}}}Dj}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Dh{{Cb{{f{Ah}}}}}{{Df{{Cb{{Dl{Ah}}}}}}}}Dj}}{{{f{{l{j}}}}c}{{l{j}}}{{E`{Dn}{{Df{B`}}}}}}{{{f{{l{Bj}}}}e}{{l{g}}}{}{{E`{{Cb{Dn}}}{{Df{{Cb{c}}}}}}Dj}Dd}{{{f{{l{j}}}}e}{{l{g}}}{}{{E`{{Cb{Dn}}}{{Df{{Cb{c}}}}}}Dj}Dd}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{E`{Dn}{{Df{B`}}}}}}{{{f{{l{Eb}}}}c}B`{{Dh{{f{B`}}}{{Df{B`}}}}}}{{{f{{l{Ed}}}}c}B`{{Dh{{f{B`}}}{{Df{B`}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dd{}{{E`{Cb}{{Df{{Cb{e}}}}}}}Dd}{{{l{c}}e}{{l{c}}}n{{Dh{}{{Df{}}}}Dj}}{{{f{{l{Aj}}}}{f{Dh}}}{{l{Aj}}}}{{{f{{l{c}}}}{f{Dh}}}{{l{c}}}n}{{{f{{l{Ab}}}}{f{Dh}}}{{l{Ab}}}}{{{f{{l{A`}}}}{f{Dh}}}{{l{A`}}}}{{{f{{l{c}}}}{f{Dh}}}{{l{e}}}nDd}{{{f{{l{Ab}}}}{f{Dh}}}{{l{c}}}Dd}{{{f{{l{Aj}}}}{f{Dh}}}{{l{c}}}Dd}{{{f{{l{A`}}}}{f{Dh}}}{{l{c}}}Dd}{{{f{{l{A`}}}}c}{{l{A`}}}{{E`{{f{Ah}}}{{Df{{f{Ah}}}}}}}}{{{f{Cn{l{c}}}}e}bn{{Dh{}{{Df{}}}}Dj}}{{{f{{l{Ab}}}}c}{{l{Ab}}}{{E`{{f{{An{Al}}}}}{{Df{{f{{An{Al}}}}}}}}}}{{{f{{l{c}}}}Efg}{{l{i}}}Dd{}{{E`{}{{Df{e}}}}}Dd}{{{f{{l{A`}}}}c}{{l{A`}}}{{E`{{f{Ah}}{f{CnEh}}}}}}{{{f{{l{Bj}}}}{f{Dh}}}{{Bd{{l{Bj}}Bb}}}}{{{f{{l{j}}}}{f{Dh}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{{Bl{c}}}}}}g{f{Cn{An{e}}}}}bBn{}{{Dh{{Cb{{f{c}}}}{f{e}}}{{Df{e}}}}}}{{{f{{l{Aj}}}}e{f{Cn{An{c}}}}}b{}{{Dh{{Cb{d}}{f{c}}}{{Df{c}}}}}}{{{f{{l{A`}}}}e{f{Cn{An{c}}}}}b{}{{Dh{{Cb{{f{Ah}}}}{f{c}}}{{Df{c}}}}}}{{{f{{l{c}}}}g{f{Cn{An{e}}}}}bn{}{{Dh{Cb{f{e}}}{{Df{e}}}}}}{{{f{{l{Ab}}}}e{f{Cn{An{c}}}}}b{}{{Dh{{Cb{{f{{An{Al}}}}}}{f{c}}}{{Df{c}}}}}}{{{f{{l{j}}}}e{f{Cn{An{c}}}}}b{}{{Dh{{Cb{B`}}{f{c}}}{{Df{c}}}}}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Dh{{f{Ah}}}{{Df{{Dl{Ah}}}}}}Dj}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Dh{{f{c}}}{{Df{c}}}}Dj}}{{{f{{l{Ab}}}}c}{{l{Ab}}}{{Dh{{f{{An{Al}}}}}{{Df{{Dl{{An{Al}}}}}}}}Dj}}{{{f{{l{j}}}}c}{{l{j}}}{{Dh{B`}{{Df{B`}}}}Dj}}{{{f{{l{c}}}}e}{{l{c}}}n{{Dh{}{{Df{}}}}Dj}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Dh{d}{{Df{d}}}}Dj}}{{{f{{l{c}}}}g}{{l{i}}}Dd{}{{E`{}{{Df{e}}}}}Dd}{{{f{{l{Aj}}}}Ej}{{l{El}}}}{{{f{{l{A`}}}}Ej}{{l{El}}}}{{{f{{l{Ab}}}}Ej}{{l{El}}}}{{{f{{l{En}}}}Ej}{{l{El}}}}{{{f{{l{c}}}}Ej}{{l{El}}}n}{{{f{{l{A`}}}}{f{{An{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Aj}}}}{f{{An{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Ab}}}}{f{{An{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{En}}}}{f{{An{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{c}}}}{f{{An{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}n}{{{f{{l{Aj}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{El}}Bb}}}n}{{{f{{l{A`}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Ab}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{El}}Bb}}}Bn}`{{{f{{l{Bj}}}}}{{f{{l{Bj}}}}}}{{{f{{l{A`}}}}}{{l{Ab}}}}{{{f{{l{Ab}}}}}{{f{{l{Ab}}}}}}{{{f{{l{j}}}}}{{f{{l{j}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dd}{{{f{{l{c}}}}}{{f{Ef}}}Dd}{{{f{{l{A`}}}}}{{f{{l{A`}}}}}}0{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}DdDd{{E`{{Cb{Dn}}CbCb}{{Df{{Cb{B`}}}}}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}}{{{l{Aj}}{l{Aj}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fb}{{C`C`}C`}{{{f{CnC`}}C`}b}34210{{{f{C`}}}Al}035421{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00``{{{f{{l{En}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{j}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{A`}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{Aj}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{Ab}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{Bj}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{Ef}}}{{Bd{B`Bb}}}n}{{{f{{l{c}}}}e}{{l{g}}}n{{Dh{}{{Df{}}}}Dj}n}7264531{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Fd}{{{f{{l{c}}}}e}{{Bd{B`Bb}}}FdAf}{{{f{{l{c}}}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{Fh}}}}}}}Dd}{{{f{{l{c}}}}}{{f{{Fn{{Ch{Cf}}}}}}}Dd}{{{f{Cn{l{c}}}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}Dd}{{{f{{l{c}}}}}{{l{c}}}Dd}0{{{f{C`}}}C`}{{{f{c}}{f{Cne}}}b{}{}}0``{C`C`}{{{f{{l{c}}}}}{{Bd{{f{An}}Bb}}}n}{{{f{C`}}C`}d}{{{f{{l{c}}}}}{{`{G`}}}n}{{}{{l{c}}}Dd}{{}C`}{Fh{{f{c}}}{}}00{Fh{{f{Cnc}}}{}}00{{C`C`}C`}{{{f{{l{c}}}}e}{}n{AdAf}}{{{l{c}}e}{}n{AdAf}}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cn{l{c}}}}}bDd}{Fhb}00{{{f{{l{c}}}}}{{f{Ef}}}Dd};{{{f{C`}}{f{C`}}}d}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Aj}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Aj}}}}{{{f{{l{A`}}}}{f{Ah}}}{{l{Aj}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{Aj}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Aj}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{l{Aj}}}}{{{f{{l{c}}}}e}{{l{Aj}}}nAf}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Aj}}}n}620738415{{{f{{l{Bj}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{{l{A`}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{{l{j}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{Cn{l{c}}}}{f{{l{c}}}}}bn}{{{f{CnC`}}c}b{{Gh{}{{Cd{C`}}}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{Aj}}}}d}{{Bd{{l{Aj}}Bb}}}}{{{f{{l{j}}}}{f{{l{Aj}}}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{Bd{{l{Aj}}Bb}}}}{{{f{{l{{Bl{c}}}}}}{f{{l{Aj}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{Bj}}}}{f{{l{Aj}}}}}{{Bd{{l{Bj}}Bb}}}}{{{f{{l{Ab}}}}{f{{l{Aj}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{En}}}}{f{{l{Aj}}}}}{{Bd{{l{En}}Bb}}}}{{{f{{l{A`}}}}{f{{l{Aj}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{c}}}}{f{{l{Aj}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{c}}}}}{{Cb{Fh}}}Dd}`{{{f{{l{c}}}}{f{CnGj}}}{{Bd{bGl}}}n}{{{f{{l{Bj}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{Ab}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{A`}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{Aj}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{{Bl{c}}}}}}{f{CnGj}}}{{Bd{bGl}}}Bn}{{{f{{l{j}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C`}}{f{CnGj}}}{{Bd{bGl}}}}0000{{{f{{l{c}}}}e}bDd{{E`{Cb}}}}{{{f{{l{j}}}}c}b{{E`{{Cb{Dn}}}}}}{{{f{{l{Bj}}}}c}b{{E`{{Cb{Dn}}}}}}{cc{}}{c{{l{e}}}Cf{{Dd{}{{Gn{c}}}}}}11{Al{{Cb{C`}}}}{AlC`}00{{{f{Ah}}c}{{l{e}}}Gh{{Dd{}{{Gn{}}}}Dd}}{{{f{{l{c}}}}e}{{l{c}}}{{Dd{}{{Gn{}}}}Dd}Gh}{{{f{Ah}}{Fn{{Ch{Cf}}}}}{{l{c}}}Dd}{{{f{Ah}}{Fn{{Ch{Cf}}}}Ef}{{l{c}}}Dd}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}0{c{{l{e}}}{{Gh{}{{Cd{Cb}}}}}n}{c{{l{e}}}{{Gh{}{{Cd{{Gf{Fn{Cb{Hb}}}}}}}}}n}{e{{l{j}}}{{Hd{B`}}}{{Gh{}{{Cd{c}}}}}}{e{{l{A`}}}{{Hf{Ah}}}{{Gh{}{{Cd{c}}}}}}{c{{l{Aj}}}{{Gh{}{{Cd{{Cb{d}}}}}}}}{e{{l{A`}}}{{Hh{Ah}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{e{{l{{Bl{c}}}}}Bn{{Gh{}{{Cd{{Cb{c}}}}}}}}{c{{l{Aj}}}{{Gh{}{{Cd{d}}}}}}{c{{l{j}}}{{Gh{}{{Cd{{Cb{B`}}}}}}}}{c{{l{j}}}{{Gh{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}{e{{l{Ab}}}{{Hh{{An{Al}}}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{e{{l{Ab}}}{{Hf{{An{Al}}}}}{{Gh{}{{Cd{c}}}}}}{cC`{{Gh{}{{Cd{C`}}}}}}{{{f{Ah}}c}{{l{Aj}}}{{Cj{}{{Cd{{Cb{d}}}}}}}}{{{f{Ah}}c}{{l{e}}}{{Cj{}{{Cd{Cb}}}}}n}{{{f{Ah}}e}{{l{A`}}}{{Hh{Ah}}}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{{f{Ah}}e}{{l{Ab}}}{{Hh{{An{Al}}}}}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{{f{Ah}}e}{{l{{Bl{c}}}}}Bn{{Cj{}{{Cd{{Cb{c}}}}}}}}9{e{{l{En}}}{{Hh{{An{Al}}}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{c{{l{e}}}{{Gh{}{{Cd{Cb}}}}}n}{e{{l{A`}}}{{Hf{Ah}}}{{Gh{}{{Cd{c}}}}}}{e{{l{En}}}{{Hf{{An{Al}}}}}{{Gh{}{{Cd{c}}}}}}{e{{l{j}}}{{Hd{B`}}}{{Gh{}{{Cd{c}}}}}}?{c{{l{Aj}}}{{Gh{}{{Cd{{Cb{d}}}}}}}}<{e{{l{A`}}}{{Hh{Ah}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{e{{l{{Bl{c}}}}}Bn{{Gh{}{{Cd{{Cb{c}}}}}}}}?{{{f{Ah}}c}{{l{Aj}}}{{Cj{}{{Cd{d}}}}}}{{{f{Ah}}e}{{l{{Bl{c}}}}}Bn{{Cj{}{{Cd{c}}}}}}{{{f{Ah}}c}{{l{e}}}{{Cj{}{{Cd{}}}}}n}{{{f{Ah}}e}{{l{Ab}}}{{Hh{{An{Al}}}}}{{Cj{}{{Cd{c}}}}}}{{{f{Ah}}e}{{l{A`}}}{{Hh{Ah}}}{{Cj{}{{Cd{c}}}}}}`{{{f{Ah}}}{{Cb{C`}}}}{c{{l{j}}}{{Hj{}{{Cd{{Cb{B`}}}}}}}}{c{{l{Aj}}}{{Hj{}{{Cd{{Cb{d}}}}}}}}{e{{l{A`}}}{{Hf{Ah}}HlHnI`}{{Hj{}{{Cd{c}}}}}}{e{{l{Ab}}}{{Hf{{An{Al}}}}HlHnI`}{{Hj{}{{Cd{c}}}}}}{e{{l{Ab}}}{{Hh{{An{Al}}}}HlHn}{{Hj{}{{Cd{{Cb{c}}}}}}}}{c{{l{e}}}{{Hj{}{{Cd{Cb}}}}}n}{e{{l{A`}}}{{Hh{Ah}}HlHn}{{Hj{}{{Cd{{Cb{c}}}}}}}}{c{{l{Aj}}}{{Hj{}{{Cd{d}}}}}}{{c{f{Ah}}Ef}{{l{j}}}{{Hj{}{{Cd{{Cb{B`}}}}}}}}{{{f{Ah}}{f{An}}}{{l{c}}}n}{{{f{Ah}}{f{{An{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Ah}}{f{{An{c}}}}}{{l{A`}}}{{Hh{Ah}}}}{{{f{Ah}}{f{{An{c}}}}}{{l{Ab}}}{{Hh{{An{Al}}}}}}{{{f{Ah}}{f{{An{d}}}}}{{l{Aj}}}}{{{f{Ah}}{f{{An{{Cb{c}}}}}}}{{l{Ab}}}{{Hh{{An{Al}}}}}}{{{f{Ah}}{f{{An{{Cb{d}}}}}}}{{l{Aj}}}}{{{f{Ah}}{f{{An{Cb}}}}}{{l{c}}}n}{{{f{Ah}}{f{{An{{Cb{c}}}}}}}{{l{A`}}}{{Hh{Ah}}}}{{{f{Ah}}{f{{An{{Cb{c}}}}}}}{{l{{Bl{c}}}}}Bn}{c{{l{e}}}{{Ib{}{{Cd{Cb}}}}}n}{c{{l{Aj}}}{{Ib{}{{Cd{{Cb{d}}}}}}}}{{{f{Ah}}Fn}{{l{c}}}n}{{{f{Ah}}Fn{Cb{Hb}}}{{l{c}}}n}{{{f{Ah}}{f{Ah}}Fh}{{l{A`}}}}{{{f{Ah}}dFh}{{l{Aj}}}}{{{f{Ah}}cFh}{{l{{Bl{c}}}}}Bn}{{{f{Ah}}Fh}{{l{c}}}n}{{{f{Ah}}{f{B`}}Fh}{{l{j}}}}{{{f{Ah}}{f{{An{Al}}}}Fh}{{l{En}}}}{{{f{Ah}}{f{{An{Al}}}}Fh}{{l{Ab}}}}{{{f{Ah}}{f{B`}}Fh}{{l{Bj}}}}{{{f{Ah}}Fh}{{l{{Bl{c}}}}}Bn}{{{f{Ah}}Fh}{{l{Bj}}}}6{{{f{Ah}}Fh}{{l{En}}}}{{{f{Ah}}Fh}{{l{A`}}}}{{{f{Ah}}Fh}{{l{j}}}}{{{f{Ah}}Fh}{{l{Aj}}}}{{{f{Ah}}Fh}{{l{Ab}}}}{{{f{{l{c}}}}Fh}{{l{c}}}Dd}{{{f{Ah}}Fh{f{Ef}}Fh}{{l{Bj}}}}{{{f{Ah}}Fh{f{Ef}}}{{l{j}}}}{{{f{{l{c}}}}Fh}CbDd}{{{f{{l{Aj}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{{Bl{c}}}}}}Fh}{{Bd{IdBb}}}Bn}{{{f{{l{j}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{Ab}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{Bj}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{A`}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{En}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{c}}}}Fh}{{Bd{IdBb}}}n}{{{f{{l{A`}}}}Fh}Id}{{{f{{l{c}}}}Fh}Idn}{{{f{{l{Ab}}}}Fh}Id}{{{f{{l{Bj}}}}Fh}Id}{{{f{{l{Aj}}}}Fh}Id}{{{f{{l{{Bl{c}}}}}}Fh}IdBn}{{{f{{l{En}}}}Fh}Id}{{{f{{l{j}}}}Fh}Id}{{{f{{l{Bj}}}}Fh}{{Cb{B`}}}}{{{f{{l{j}}}}Fh}{{Cb{B`}}}}{{{f{{l{c}}}}}C`Dd}{{{f{{l{Bj}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{{Bl{c}}}}}}Fh}{{Cb{{f{If}}}}}Bn}0{{{f{C`}}}Ih}{{{f{{l{c}}}}Fh}CbDd}{{{f{{l{Bj}}}}}Fh}{{{f{{l{En}}}}}Fh}{{{f{{l{A`}}}}}Fh}{{{f{{l{j}}}}}Fh}{{{f{{l{Bj}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Aj}}}}dd}{{Bd{BhBb}}}}{{{f{{l{j}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Ab}}}}dd}{{Bd{BhBb}}}}{{{f{{l{{Bl{c}}}}}}dd}{{Bd{BhBb}}}Bn}{{{f{{l{En}}}}dd}{{Bd{BhBb}}}}{{{f{{l{c}}}}dd}{{Bd{BhBb}}}n}{{{f{{l{A`}}}}dd}{{Bd{BhBb}}}}{{{f{{l{c}}}}FhdFh}BhFb}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Aj}}}n}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Aj}}}}{{{f{{l{c}}}}e}{{l{Aj}}}nAf}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Aj}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Aj}}}}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{l{Aj}}}}{{{f{{l{A`}}}}{f{Ah}}}{{l{Aj}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{Aj}}}}350847612{{{f{{l{c}}}}}dDd}{{{f{{l{c}}}}{Cb{Fh}}}{{l{c}}}Dd}{{}Fh}00{{FhIj{Cb{Il}}}{{l{c}}}n}{{{f{{l{j}}}}}Ef}{{{f{{l{Bj}}}}}Ef}{{{f{CnC`}}C`}b}{{C`C`}C`}{{{f{C`}}C`}d}{ce{}{}}00{{{l{In}}}{{Jb{J`In}}}}{{{l{Jd}}Jf{Cb{Eh}}}{{Jb{JhJd}}}}{{{l{Jj}}{Cb{Fh}}Fh}{{Bd{{Jb{JlJj}}Bb}}}}{{{l{Jj}}{Cb{Fh}}Fh}{{Jb{JlJj}}}}{{{l{Jd}}Jf}{{Jb{JnJd}}}}{{{f{{l{c}}}}}{}n}{{{f{{l{Aj}}}}}}{{{f{{l{En}}}}}}{{{f{{l{Bj}}}}}}{{{f{{l{j}}}}}}{{{f{{l{A`}}}}}}{{{f{{l{{Bl{c}}}}}}}{}Bn}{{{f{{l{Ab}}}}}}{C`}{{{f{{l{c}}}}}{{`{HlHnK`G`Ib}}}n}{{{l{c}}}B`Dd}{{{l{Jj}}}B`}{{{l{Jd}}}{{Jb{KbJd}}}}{{{f{C`}}}d}{{{f{{l{c}}}}}dDd}1{{{f{{l{c}}}}}{{l{Aj}}}Kd}000{{{f{{l{c}}}}}{{l{Aj}}}Dd}02{{{f{{l{c}}}}}IhDd}{{{f{{l{c}}}}}{{`{Kf}}}Dd}{{{f{C`}}}{{Kh{C`}}}}{{{f{C`}}}{{Kj{C`}}}}{{{f{{l{j}}}}}{{`{{Cj{}{{Cd{Gb}}}}}}}}{{{f{{l{c}}}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{{Cb{{f{Hb}}}}}}}}}}}Dd}`{{{f{{l{c}}}}}CbDd}{{{f{{l{c}}}}}{{Cb{Fh}}}Dd}{{{f{{l{c}}}}}{{Kl{c}}}Dd}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}}{}n}{{{f{{l{c}}}}}{}n}10{{{f{{l{c}}}}}FhDd}{{{f{{l{c}}}}e}{{l{c}}}n{AdKn}}00{{{f{{l{c}}}}Fh}{{l{c}}}Dd}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Aj}}}}{{{f{{l{A`}}}}{f{Ah}}}{{l{Aj}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Aj}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{Aj}}}}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{l{Aj}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Aj}}}n}{{{f{{l{c}}}}e}{{l{Aj}}}nAf}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Aj}}}}675348021{{{f{{l{Aj}}}}}{{Cb{d}}}}{{{f{{l{c}}}}}Cbn}{{{f{{l{Ab}}}}}L`}{{{f{{l{c}}}}}L`n}{{{f{{l{Aj}}}}}L`}{{{f{{l{A`}}}}}L`}{{{f{{l{Aj}}}}}{{Cb{Lb}}}}{{{f{{l{c}}}}}{{Cb{Lb}}}n}{{{f{{l{Eb}}}}}{{Cb{Ij}}}}{{{f{{l{c}}}}}{{Cb{Lb}}}Fb}{{{f{{l{Ed}}}}}{{Cb{Lb}}}}{{{f{{l{Ed}}}}}L`}{{{f{{l{c}}}}}L`Fb}{{{f{{l{Eb}}}}}L`}<={{{f{{l{c}}}}}{{Cb{Gf}}}n};<:9{{{f{Ah}}{f{{An{Al}}}}FhFh}{{l{Aj}}}}{{{f{Ah}}{f{An}}}{{l{c}}}n}{{{l{c}}{l{c}}}{}n}{{{l{c}}e}{}n{AdAf}}{{{f{{l{c}}}}e}{}n{AdAf}}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}}{{Bd{FhBb}}}n}{{{f{{l{Ab}}}}}{{Bd{FhBb}}}}{{{f{{l{A`}}}}}{{Bd{FhBb}}}}{{{f{{l{c}}}}}{{f{Ah}}}Dd}{{{f{Ah}}c}{{l{A`}}}{{Hh{{An{{Dl{Ah}}}}}}}}{{{f{Ah}}c}{{l{Ld}}}{{Hh{{An{{Cb{Lf}}}}}}}}{{{f{Ah}}c}{{l{Lh}}}{{Hh{{An{{Cb{Lj}}}}}}}}{{{f{Ah}}c}{{l{A`}}}{{Hh{{An{{Cb{{Dl{Ah}}}}}}}}}}{{{f{Ah}}c}{{l{Ll}}}{{Hh{{An{Il}}}}}}{{{f{Ah}}{Ln{Il}}}{{l{Ll}}}}{{{f{Ah}}{f{{An{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Ah}}c}{{l{Ed}}}{{Hh{{An{{Cb{Lb}}}}}}}}{{{f{Ah}}c}{{l{M`}}}{{Hh{{An{{Cb{Al}}}}}}}}{{{f{Ah}}e}{{l{{Bl{c}}}}}Bn{{Hh{{An{{Cb{c}}}}}}}}{{{f{Ah}}c}{{l{Eb}}}{{Hh{{An{Ij}}}}}}{{{f{Ah}}c}{{l{M`}}}{{Hh{{An{Al}}}}}}{{{f{Ah}}c}{{l{In}}}{{Hh{{An{Mb}}}}}}{{{f{Ah}}c}{{l{A`}}}{{Hh{{An{{f{Ah}}}}}}}}{{{f{Ah}}c}{{l{Ed}}}{{Hh{{An{Lb}}}}}}{{{f{Ah}}c}{{l{In}}}{{Hh{{An{{Cb{Mb}}}}}}}}{{{f{Ah}}{Ln{Gb}}}{{l{Jd}}}}{{{f{Ah}}c}{{l{Ab}}}{{Hh{{An{{Cb{{Dl{{An{Al}}}}}}}}}}}}{{{f{Ah}}c}{{l{Ll}}}{{Hh{{An{{Cb{Il}}}}}}}}{{{f{Ah}}c}{{l{Ab}}}{{Hh{{An{{Cb{{f{{An{Al}}}}}}}}}}}}{{{f{Ah}}c}{{l{Ab}}}{{Hh{{An{{Fn{Al}}}}}}}}{{{f{Ah}}c}{{l{Ab}}}{{Hh{{An{{Dl{{An{Al}}}}}}}}}}{{{f{Ah}}c}{{l{El}}}{{Hh{{An{Md}}}}}}{{{f{Ah}}c}{{l{Ab}}}{{Hh{{An{{f{{An{Al}}}}}}}}}}{{{f{Ah}}c}{{l{A`}}}{{Hh{{An{{Cb{{f{Ah}}}}}}}}}}{{{f{Ah}}c}{{l{Lh}}}{{Hh{{An{Lj}}}}}}{{{f{Ah}}c}{{l{Jd}}}{{Hh{{An{{Cb{Gb}}}}}}}}{{{f{Ah}}{Ln{Md}}}{{l{El}}}}{{{f{Ah}}c}{{l{Aj}}}{{Hh{{An{{Cb{d}}}}}}}}{{{f{Ah}}c}{{l{El}}}{{Hh{{An{{Cb{Md}}}}}}}}{{{f{Ah}}c}{{l{A`}}}{{Hh{{An{Eh}}}}}}{{{f{Ah}}c}{{l{A`}}}{{Hh{{An{{Cb{Eh}}}}}}}}{{{f{Ah}}{Ln{Mb}}}{{l{In}}}}{{{f{Ah}}c}{{l{Jd}}}{{Hh{{An{Gb}}}}}}{{{f{Ah}}c}{{l{Mf}}}{{Hh{{An{Mh}}}}}}{{{f{Ah}}c}{{l{Aj}}}{{Hh{{An{d}}}}}}{{{f{Ah}}c}{{l{Mf}}}{{Hh{{An{{Cb{Mh}}}}}}}}{{{f{Ah}}c}{{l{Eb}}}{{Hh{{An{{Cb{Ij}}}}}}}}{{{f{Ah}}c}{{l{Ab}}}{{Hh{{An{{Cb{{Fn{Al}}}}}}}}}}{{{f{Ah}}c}{{l{Ld}}}{{Hh{{An{Lf}}}}}}{{{f{Ah}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{{Bl{c}}}}}}FhFh}{{l{{Bl{c}}}}}Bn}{{{f{{l{Bj}}}}FhFh}{{l{Bj}}}}{{{f{{l{Ab}}}}FhFh}{{l{Ab}}}}{{{f{{l{En}}}}FhFh}{{l{En}}}}{{{f{{l{Aj}}}}FhFh}{{l{Aj}}}}{{{f{{l{c}}}}FhFh}{{l{c}}}n}{{{f{{l{A`}}}}FhFh}{{l{A`}}}}{{{f{{l{j}}}}FhFh}{{l{j}}}}{{{f{Ah}}{Fn{c}}}{{l{{Bl{c}}}}}Bn}{{{f{Ah}}{Fn{c}}Hb}{{l{{Bl{c}}}}}Bn}{{{f{Ah}}Fn}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Kd}{{{f{{l{Aj}}}}}}{{{l{Aj}}}}{C`C`}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Aj}}}n}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Aj}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{c}}}}e}{{l{Aj}}}nAf}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{l{Aj}}}}{{{f{{l{A`}}}}{f{Ah}}}{{l{Aj}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Aj}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{Aj}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Aj}}}}42{{{f{{l{Bj}}}}{f{{l{Bj}}}}}}619724{{{f{{l{c}}}}}FhDd}`{{{f{{l{A`}}}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{{l{j}}}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{{l{Bj}}}}}{{Bd{{Gd{Gb}}Bb}}}}`{{{f{{l{A`}}}}}{{`{{Mj{}{{Cd{{Cb{{f{Ah}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Mj{}{{Cd{{Cb{B`}}}}}}}}}}{{{f{Cn{l{j}}}}}{{`{Ml}}}}{{{f{{l{A`}}}}}{{`{Ml}}}}{{{f{{l{c}}}}}L`n}{{{f{Cn{l{c}}}}}bDd}{{{f{{l{c}}}}LbMn}{{Bd{{Cb{Lb}}Bb}}}Fb}{{{f{{l{Eb}}}}LbMn}{{Bd{{Cb{Ij}}Bb}}}}{{{f{{l{Ed}}}}LbMn}{{Bd{{Cb{Lb}}Bb}}}}{{{f{{l{Ed}}}}LbMn}{{Bd{L`Bb}}}}{{{f{{l{Eb}}}}LbMn}{{Bd{L`Bb}}}}{{{f{{l{c}}}}LbMn}{{Bd{L`Bb}}}Fb}{{{f{Ah}}FhLb}{{Bd{{l{Aj}}Bb}}}}{{{f{Ah}}FhLbLb}{{Bd{{l{c}}Bb}}}n}{{{f{Ah}}Fh}{{l{c}}}n}{{{f{Ah}}FhLbLb}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Dd}{{{f{{l{c}}}}}{{f{N`}}}Dd}{{{f{{l{In}}}}}B`}{{{f{{l{Jd}}}}}B`}{{{f{{l{Eb}}}}}B`}{{{f{{l{Ed}}}}}B`}{{{f{{l{Ld}}}}}B`}{{{f{{l{El}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{M`}}}}}B`}{{{f{{l{Mf}}}}}B`}{{{f{{l{Ll}}}}}B`}{{{f{{l{Lh}}}}}B`}0534287619:{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{c}}}}e}{}n{AdAf}}{{{l{c}}{l{c}}}{}n}{{{l{c}}e}{}n{AdAf}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{CnC`}}C`}b}{{{f{Cn{l{c}}}}{f{Ah}}}bDd}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{Ab}}}}}{{l{Ab}}}}{{{f{{l{{Bl{c}}}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{En}}}}}{{l{En}}}}{{{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{c}}}}{f{Dh}}Nb}{{Bd{B`Bb}}}n}{{{f{{l{c}}}}Fhe}{{Bd{{l{c}}Bb}}}Kd{{E`{{f{Cn{l{c}}}}}{{Df{Cb}}}}}}{{{f{{l{c}}}}Lbdd{Cb{Il}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{{l{c}}}}Fhdd{Cb{Il}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{{l{A`}}}}{f{{An{Md}}}}c}{{Bd{B`Bb}}}{{Gh{}{{Cd{{Cb{{f{Ah}}}}}}}}}}{{{f{{l{Aj}}}}{f{{An{Md}}}}c}{{Bd{B`Bb}}}{{Gh{}{{Cd{{Cb{d}}}}}}}}{{{l{c}}{f{{An{Md}}}}e}{{Bd{B`Bb}}}Nd{{Gh{}{{Cd{Cb}}}}}}{{{f{{l{Ab}}}}c{Cb{{f{{An{Al}}}}}}}{{Bd{{l{Ab}}Bb}}}{{Gh{}{{Cd{Md}}}}}}{{{f{{l{Aj}}}}c{Cb{d}}}{{Bd{{l{Aj}}Bb}}}{{Gh{}{{Cd{Md}}}}}}{{{f{{l{c}}}}eCb}{{Bd{{l{c}}Bb}}}n{{Gh{}{{Cd{Md}}}}}}{{{f{{l{A`}}}}c{Cb{{f{Ah}}}}}{{Bd{{l{A`}}Bb}}}{{Gh{}{{Cd{Md}}}}}}{{{f{{l{A`}}}}ce}{{Bd{{l{A`}}Bb}}}{{Gh{}{{Cd{Md}}}}}{{Dh{{Cb{{f{Ah}}}}}{{Df{{Cb{Eh}}}}}}}}{{{f{{l{Ab}}}}ce}{{Bd{{l{Ab}}Bb}}}{{Gh{}{{Cd{Md}}}}}{{Dh{{Cb{{f{{An{Al}}}}}}}{{Df{{Cb{{Fn{Al}}}}}}}}}}{{{f{{l{c}}}}eg}{{Bd{{l{c}}Bb}}}n{{Gh{}{{Cd{Md}}}}}{{Dh{Cb}{{Df{Cb}}}}}}{{{f{{l{Aj}}}}ce}{{Bd{{l{Aj}}Bb}}}{{Gh{}{{Cd{Md}}}}}{{Dh{{Cb{d}}}{{Df{{Cb{d}}}}}}}}{{{f{{l{A`}}}}{f{{l{Aj}}}}{Cb{{f{Ah}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{Ab}}}}{f{{l{Aj}}}}{Cb{{f{{An{Al}}}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{c}}}}{f{{l{Aj}}}}Cb}{{Bd{{l{c}}Bb}}}n}{{{f{{l{Aj}}}}{f{{l{Aj}}}}{Cb{d}}}{{Bd{{l{Aj}}Bb}}}}{{{f{CnC`}}C`d}b}{{{f{Cn{l{j}}}}}b}{{{f{Cn{l{j}}}}Ef}b}{{{f{Cn{l{c}}}}Md}bDd}{{{f{Cn{l{c}}}}Ih}bDd}{{{f{CnC`}}Ih}b}{{{f{{l{{Bl{c}}}}}}Gb}{{l{{Bl{c}}}}}Bn}{{{f{{l{En}}}}Gb}{{l{En}}}}{{{f{{l{j}}}}Gb}{{l{j}}}}{{{f{{l{A`}}}}Gb}{{l{A`}}}}{{{f{{l{Aj}}}}Gb}{{l{Aj}}}}{{{f{{l{c}}}}Gb}{{l{c}}}n}{{{f{{l{Bj}}}}Gb}{{l{Bj}}}}{{{f{{l{Ab}}}}Gb}{{l{Ab}}}}{{{f{{l{Ab}}}}Gb{Cb{{f{{An{Al}}}}}}}{{l{Ab}}}}{{{f{{l{{Bl{c}}}}}}Gb{Cb{{Bl{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{c}}}}GbCb}{{l{c}}}n}{{{f{{l{j}}}}Gb{Cb{{f{B`}}}}}{{l{j}}}}{{{f{{l{A`}}}}Gb{Cb{{f{Ah}}}}}{{l{A`}}}}{{{f{{l{Bj}}}}Gb{Cb{{f{B`}}}}}{{l{Bj}}}}{{{f{{l{En}}}}Gb{Cb{{f{{An{Al}}}}}}}{{l{En}}}}{{{f{{l{Aj}}}}Gb{Cb{d}}}{{l{Aj}}}}{{{f{Cn{l{c}}}}}bDd}{{{f{{l{c}}}}GbFh}{{l{c}}}Dd}{{{f{{l{A`}}}}d}{{l{A`}}}}{{{f{{l{Ab}}}}d}{{l{Ab}}}}{{{f{{l{En}}}}d}{{l{En}}}}{{{f{{l{Aj}}}}d}{{l{Aj}}}}{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{Aj}}}}Ej}{{l{Aj}}}}{{{f{{l{A`}}}}Ej}{{l{A`}}}}{{{f{{l{En}}}}Ej}{{l{En}}}}{{{f{{l{c}}}}Ej}{{l{c}}}n}{{{f{{l{Ab}}}}Ej}{{l{Ab}}}}{{{f{{l{c}}}}Al}{{Cb{Lb}}}n}{{{f{{l{Ed}}}}Al}L`}{{{f{{l{c}}}}Al}L`Fb}{{{f{{l{Eb}}}}Al}L`}{{{f{{l{c}}}}e}{}n{AdAf}}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}{l{c}}}{}n}{{{l{c}}e}{}n{AdAf}}{{C`C`}C`}{{{f{CnC`}}C`}b}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}}Cbn}{{{f{{l{Aj}}}}}{{Cb{Md}}}}{{{f{{l{c}}}}}L`n}{{{f{{l{Ab}}}}}L`}{{{f{{l{A`}}}}}L`}{{{f{{l{Aj}}}}}L`}8{{{f{{l{c}}}}{Cb{Fh}}}{{l{c}}}Dd}{{{f{{l{c}}}}{f{{l{El}}}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{{l{c}}}}{f{e}}}{{Bd{{l{c}}Bb}}}Dd{{Hh{{An{Md}}}}Nf}}{{{f{{l{c}}}}{f{{An{Nh}}}}Ih}{{l{c}}}Dd}{{{f{{l{c}}}}{f{{An{Nh}}}}}{{l{c}}}Dd}{{{f{{l{A`}}}}{f{c}}}{{l{A`}}}{{Hh{{An{Md}}}}Nf}}{{{f{{l{c}}}}{f{{l{El}}}}}{{l{c}}}{{Dd{}{{Nj{Db}}}}Dd}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dd{}{{Nj{Db}}}}Dd}{{Hh{{An{Md}}}}Nf}}{{{f{{l{A`}}}}{f{{l{El}}}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{c}}}{{l{Ab}}}{{Hh{{An{Md}}}}Nf}}{{{f{{l{Ab}}}}{f{{l{El}}}}}{{l{Ab}}}}`{{{f{{l{c}}}}dNl}{{Fn{{Fn{Nn}}}}}Dd}{{{f{{l{c}}}}}{{l{c}}}Kd}{{{f{{l{A`}}}}Fh}{{Bd{B`Bb}}}}{{{f{Cn{l{Bj}}}}Ef}b}{{{f{Cn{l{j}}}}Ef}b}{{{f{{l{c}}}}}{{Bd{{Of{{O`{f}}{Od{{Ob{Fh}}}}}}Bb}}}n}{{{f{{l{j}}}}}{{Bd{{Of{Oh{Od{{Ob{Fh}}}}}}Bb}}}}{{{f{c}}}e{}{}}0{{{f{{l{Ab}}}}}{{l{A`}}}}{{{f{{l{c}}}}}{{Fn{Cb}}}n}{{{f{{l{c}}}}}{{Oj{Fn{Fn{Cb}}}}}n}{{{f{CnC`}}C`}b}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{c}}}}}{}n}{{{l{c}}}{}n}10{{{f{{l{j}}}}c}{{Bd{{l{j}}Bb}}}{{E`{Dn}{{Df{{Bd{B`Bb}}}}}}}}{{{f{{l{j}}}}e}{{Bd{{l{g}}Bb}}}{}{{E`{{Cb{Dn}}}{{Df{{Bd{{Cb{c}}Bb}}}}}}Dj}Dd}{{{f{{l{Bj}}}}e}{{Bd{{l{g}}Bb}}}{}{{E`{{Cb{Dn}}}{{Df{{Bd{{Cb{c}}Bb}}}}}}Dj}Dd}{{{f{{l{Bj}}}}c}{{Bd{{l{Bj}}Bb}}}{{E`{Dn}{{Df{{Bd{B`Bb}}}}}}}}{{{f{{l{Bj}}}}c}{{Bd{{l{j}}Bb}}}{{E`{Dn}{{Df{{Bd{B`Bb}}}}}}}}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{Cb}{{Df{{Bd{{Cb{e}}g}}}}}}Dj}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{}{{Df{{Bd{eg}}}}}}}Dd}{c{{Bd{e}}}{}{}}00{{{f{Ah}}g}{{Bd{{l{i}}e}}}Cf{}{{Gh{}{{Cd{{Bd{ce}}}}}}}{{Dd{}{{Gn{c}}}}Dd}}111{{{f{{l{j}}}}{f{{l{c}}}}e}{{Bd{{l{j}}Bb}}}Dd{{E`{{Cb{Dn}}Cb}{{Df{{Bd{{Cb{B`}}Bb}}}}}}}}{{{f{c}}}Ol{}}00{{C`C`}C`}{{{f{{l{Aj}}}}}{{Bd{{l{Aj}}Bb}}}}{{{f{{l{A`}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{Ab}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{c}}}}{f{B`}}}{{Bd{{f{{l{c}}}}Bb}}}Dd}{{{f{Cn{l{c}}}}}bDd}{{{f{{l{c}}}}Fh}{}Dd}{{{f{{l{c}}}}Al}{{Cb{Lb}}}n}{{{f{{l{c}}}}Al}L`Fb}{{{f{{l{Eb}}}}Al}L`}{{{f{{l{Ed}}}}Al}L`}{{{f{{l{In}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ld}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ll}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Lh}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Mf}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{En}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}Bn}{{{f{{l{Aj}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ab}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{A`}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{M`}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ed}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ll}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ab}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{A`}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ed}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{M`}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{En}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{In}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Lh}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Mf}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Aj}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}Bn}{{{f{{l{Ld}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{ce{}{}}00{{{f{{l{Bj}}}}}Fh}{{{f{Ah}}c}{{l{e}}}Cf{{Dd{}{{Gn{c}}}}Dd}}{{{f{{l{c}}}}{Fn{{Ch{Cf}}}}}{{l{c}}}Dd}{{{l{c}}{f{Ah}}}{{l{c}}}Dd}{{{f{{An{On}}}}e}c{}{{A@`{{f{{l{El}}}}}{{Df{c}}}}}}{{{f{{l{c}}}}Ih}{{l{c}}}Dd}{{{l{c}}}{}n}{{{f{{l{c}}}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}{l{c}}}{}n}23012323013223012332103223013223{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Dd{{E`{{Cb{Dn}}Cb}{{Df{{Cb{B`}}}}}}}}{{{f{{l{Bj}}}}{f{{l{c}}}}e}{{l{Bj}}}Dd{{E`{{Cb{Dn}}Cb}{{Df{{Cb{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{Aj}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Dd}````{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}e{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}g{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{CnA@j}}{f{Cf}}}b}{{{f{CnA@j}}}b}{{{f{CnA@l}}}b}{{{f{CnA@n}}c}b{{Cj{}{{Cd{{Cb{d}}}}}}Ib}}{{{f{Cn{AA`{c}}}}e}bn{{Cj{}{{Cd{Cb}}}}Ib}}{{{f{Cn{AA`{c}}}}e}bn{{Cj{}{{Cd{}}}}Ib}}{{{f{CnAAb}}}b}{{{f{CnAAd}}}b}65{{{f{CnAAf}}}b}{{{f{CnAAh}}}b}{{{f{CnA@n}}}b}{{{f{CnAAj}}}b}{{{f{Cn{AA`{c}}}}}bn}{{{f{Cn{AAl{c}}}}}b{AAnNf}}{{{f{CnAB`}}}b}{{{f{CnABb}}}b}{{{f{Cn{ABd{c}}}}}bn}{{{f{CnA@j}}{Cb{{f{Cf}}}}}b}{{{f{CnA@j}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{CnAAb}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{Cn{AA`{c}}}}{Cb{{f{An}}}}}bn}{{{f{Cn{AAl{c}}}}{Cb{e}}}b{AAnNf}{{Hh{c}}}}{{{f{CnAAd}}{Cb{c}}}b{}}{{{f{CnAAb}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnA@j}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnA@l}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAf}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAh}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnA@n}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAj}}{f{B`}}}{{Bd{bBb}}}}{{{f{Cn{AA`{c}}}}{f{B`}}}{{Bd{bBb}}}n}{{{f{Cn{AA`{c}}}}{f{An}}}bn}{{{f{CnAAf}}c}b{{Cj{}{{Cd{{Cb{{f{Ah}}}}}}}}Ib}}{{{f{CnAAh}}c}b{{Cj{}{{Cd{{Cb{{f{{An{Al}}}}}}}}}}Ib}}{{{f{CnAAd}}c}b{}}{{{f{Cn{AAl{c}}}}e}b{AAnNf}{{Hh{c}}}}{{{f{CnAB`}}d}b}{{{f{Cn{ABd{c}}}}}bn}{{{f{CnAAf}}c}b{{Cj{}{{Cd{{f{Ah}}}}}}}}{{{f{CnAAh}}c}b{{Cj{}{{Cd{{f{{An{Al}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Cnc}}}{{f{Cne}}}{}{}}0000000000`{{{f{{AAl{c}}}}}{{AAl{c}}}{AAnNf}}{{{f{AB`}}}AB`}{{{f{ABb}}}ABb}{{{f{{ABd{c}}}}}{{ABd{c}}}{ABfn}}{{{f{c}}{f{Cne}}}b{}{}}000{{}A@j}{{}A@l}{Fh{{f{c}}}{}}0000000000{Fh{{f{Cnc}}}{}}0000000000{Fhb}0000000000{{{f{AAf}}}d}{{{f{AAh}}}d}{{{f{A@n}}}d}{{{f{{AA`{c}}}}}dn}{{{f{AAb}}}d}{{{f{AAf}}}{{f{N`}}}}{{{f{AAh}}}{{f{N`}}}}{{{f{A@n}}}{{f{N`}}}}{{{f{{AA`{c}}}}}{{f{N`}}}n}{{{f{AAb}}}{{f{N`}}}}{AAd{{l{c}}}Dd}{{{f{CnA@j}}}{{l{j}}}}{{{f{CnA@l}}}{{l{j}}}}{{{f{CnAAj}}}{{l{j}}}}{{{f{CnAAb}}}{{l{j}}}}{{{AAl{Ah}}}{{l{A`}}}}{{{AAl{{An{Al}}}}}{{l{Ab}}}}{AB`{{l{Aj}}}}{ABbABh}{{{ABd{c}}}{{l{c}}}n}`{cc{}}0000000000{{{f{Ah}}e}ABj{}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{{f{Ah}}e}ABj{}{{Cj{}{{Cd{c}}}}}}{{{f{Ah}}{f{{An{c}}}}}ABj{}}{{{f{Ah}}{f{{An{{Cb{c}}}}}}}ABj{}}{{{f{Ef}}FhFh{f{Ah}}}{{Bd{{Ch{AAb}}Bb}}}}{{}Fh}0000000000{{{f{CnAAf}}}{{Ch{Cf}}}}{{{f{CnAAh}}}{{Ch{Cf}}}}{{{f{CnA@n}}}{{Ch{Cf}}}}{{{f{Cn{AA`{c}}}}}{{Ch{Cf}}}n}{{{f{CnAAb}}}{{Ch{Cf}}}}{ce{}{}}0000000000`{{{f{Ah}}Fh{Cb{Ef}}}A@j}{{{f{Ah}}Fh{Cb{Ef}}}A@l}{{{f{Ah}}FhFh}AAf}{{{f{Ah}}FhFh}AAh}{{{f{Ah}}FhFh}A@n}{{{f{Ah}}Fh}AAj}{{{f{Ah}}FhFhEf}{{AA`{c}}}n}{{{f{Ah}}Fh}{{AAl{c}}}{AAnNf}}{{{f{Ah}}Fh}AB`}{{{f{Ah}}Fh}ABb}{{{f{Ah}}Fh}{{ABd{c}}}n}{{{f{Ah}}FhFhEfEf}{{AA`{c}}}n}{{{f{CnAAd}}}b}{{{f{CnAB`}}}b}{{{f{CnABb}}}b}{{{f{Cn{ABd{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Bd{e}}}{}{}}000000000000000000000{{{f{c}}}Ol{}}0000000000{ce{}{}}0000000000````````{{{f{CnAAb}}}b}{{{f{CnAAb}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{CnAAb}}{f{B`}}}{{Bd{bBb}}}}`{{{f{AAb}}}d}{{{f{AAb}}}{{f{N`}}}}{{{f{CnAAb}}}{{l{j}}}}{{{f{Ef}}FhFh{f{Ah}}}{{Bd{{Ch{AAb}}Bb}}}}{{{f{CnAAb}}}{{Ch{Cf}}}}``{{ABl{f{Ah}}}{{l{c}}}Dd}{{ABn{f{{l{c}}}}}{{l{c}}}Dd}10{{ABn{f{Ah}}Ef}{{l{c}}}Dd}0{{ABl{f{Ah}}}{{Bd{{l{c}}e}}}Dd{}}{{ABn{f{{l{c}}}}}{{Bd{{l{c}}e}}}Dd{}}10{{ABn{f{Ah}}Ef}{{Bd{{l{c}}e}}}Dd{}}0`{AC`AC`}``{{ACb{f{Ah}}Ef}e{}{{ACd{c}}}}{{e{f{Ah}}Ef}ACd{}{{Hj{}{{Cd{c}}}}}}`````{{{f{c}}}{{f{e}}}{}{}}000{{{f{Cnc}}}{{f{Cne}}}{}{}}000{Fh{{f{c}}}{}}000{Fh{{f{Cnc}}}{}}000{Fhb}000{cc{}}000{{}Fh}000{ce{}{}}0000000{{{f{ACf}}}ACh}{{{f{ACj}}Ef}ACl}{{{f{CnACh}}}Cb}{{{f{CnACl}}}Cb}{{{f{CnACn}}}Cb}{{{f{Cn{AD`{c}}}}}CbCj}32{{{f{Cn{AD`{c}}}}}CbG`}`{{{f{ACh}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{ACl}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{{AD`{c}}}}}{{Gf{Fh{Cb{Fh}}}}}Cj}{c{{Bd{e}}}{}{}}0000000{{{f{c}}}Ol{}}000<<<<``````{{{f{c}}h}b{}}{e{{ADb{c}}}Bn{{Gh{}{{Cd{{f{c}}}}}}}}{e{{ADb{c}}}Bn{{Gh{}{{Cd{{Cb{{f{c}}}}}}}}}}{{ADde}g{}{{Gh{}{{Cd{c}}}}}{}}0{{{f{If}}}{{f{ADf}}}}{{{f{{ADb{c}}}}}{{f{ADf}}}Bn}{{{f{Cn{ADb{c}}}}}{{f{CnADf}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}`{{{f{{ADb{c}}}}}{{ADb{c}}}{ABfBn}}{{{f{c}}{f{Cne}}}b{}{}}{{{f{{ADb{c}}}}}{{f{ADd}}}Bn}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{{f{If}}}}{f{{f{If}}}}}d}{{{f{If}}{f{If}}}d}{{{f{{ADb{c}}}}{f{CnGj}}}{{Bd{bGl}}}{ADhBn}}{cc{}}{{FhADd}{{ADb{c}}}Bn}{{{f{{ADb{c}}}}Fh}{{Cb{{f{c}}}}}Bn}{{}ADd}{{{f{Hb}}{f{{ADb{c}}}}{f{{ADb{c}}}}}{{ADb{c}}}Bn}{{ADd{f{Hb}}}{{ADb{c}}}Bn}{{{f{Hb}}{f{{ADb{c}}}}}{{ADb{c}}}Bn}0{{}Fh}{ce{}{}}{{{f{{ADb{c}}}}}{}Bn}{{{f{{ADb{c}}}}Fh}dBn}0{{{f{c}}Fh}d{}}{{{f{{ADb{c}}}}}{{ADl{{f{c}}{Ff{c}}ADj}}}Bn}{{{f{{ADb{c}}}}}{{ADl{ADj}}}Bn}{{{f{{ADb{c}}}}}FhBn}0`{{{f{Cn{ADb{c}}}}{Cb{Hb}}}bBn}{{{f{Cn{ADb{c}}}}FhFh}bBn}{{{f{c}}FhFh}e{}{}}01{{{f{If}}}{{Ch{If}}}}{{{f{{ADb{c}}}}}{{Ch{Cf}}}Bn}{{{f{c}}}e{}{}}{g{{Bd{{ADb{c}}e}}}Bn{}{{Gh{}{{Cd{{Bd{{f{c}}e}}}}}}}}{g{{Bd{{ADb{c}}e}}}Bn{}{{Gh{}{{Cd{{Bd{{Cb{{f{c}}}}e}}}}}}}}{{ADdg}{{Bd{ie}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}{}}0{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}{{{f{If}}}{{f{Ah}}}}{{}{{f{Ah}}}}{{{f{{ADb{c}}}}}{{Cb{{f{Hb}}}}}Bn}{{{f{{ADb{c}}}}Fh}{{f{c}}}Bn}{{{f{{ADb{c}}}}Fh}{}Bn}1{{{f{{ADb{c}}}}}{{f{{ADn{{Fn{c}}}}}}}Bn}{{{f{{ADb{c}}}}}{}Bn}{{{f{{ADb{c}}}}}{{Ff{c}}}Bn}{ce{}{}}{{{ADb{c}}{Cb{Hb}}}{{ADb{c}}}Bn}{{{f{{ADb{c}}}}{Cb{Hb}}}{{Ch{Cf}}}Bn}1`{{{f{Cn{AE`{c}}}}}bBn}0{{{f{Cn{AE`{c}}}}{Cb{c}}}bBn}{{{f{Cn{AE`{c}}}}{f{ADf}}}bBn}{{{f{Cn{AE`{c}}}}c}bBn}{{{f{Cn{AE`{c}}}}{f{ADf}}}{{Bd{bBb}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{}{{AE`{c}}}Bn}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{AE`{c}}}{{l{{Bl{c}}}}}Bn}{cc{}}{{}Fh}{ce{}{}}{{{f{Ah}}Fh}{{AE`{c}}}Bn}{{{f{Cn{AE`{c}}}}}B`Bn}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4````{{{f{CnAEb}}}b}{{{f{CnAEb}}{Cb{{f{ADf}}}}}b}{{{f{CnAEb}}{f{ADf}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}`?>={{{f{AEd}}{f{CnGj}}}{{Bd{bGl}}}}<{{{f{Ah}}Fh}{{Ch{AEb}}}}{{}{{ADn{Dh}}}}{{}ADd}>={{}d}`{{{Ch{Dh}}{ADn{Dh}}ADd}b}{{{f{CnAEb}}}B`}==<{ce{}{}}````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AEh{}{{AEf{c}}}}}}g}{{AEh{}{{AEf{c}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{c}}}}}}Dj}}{{{f{AEj}}{f{Dh}}}AEj}{{{f{AEj}}{f{Dh}}}{{l{c}}}Dd}{{{f{{AEh{}{{AEf{c}}}}}}i{f{Cn{An{g}}}}}b{}{}{}{{Dh{{Cb{e}}{f{g}}}{{Df{g}}}}}}{{{f{{AEh{}{{AEf{c}}}}}}g}{{AEh{}{{AEf{c}}}}}{}{}{{Dh{e}{{Df{c}}}}Dj}}{{{f{AEl}}Ej}{{l{El}}}}{{{f{AEl}}{f{{An{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{AEn}}}{{Bd{{l{El}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00{{{f{AF`}}{f{Ef}}}{{Bd{B`Bb}}}}0{{{f{Ej}}}Ej}{{{f{F`}}}F`}{{{f{AFb}}}AFb}{{{f{c}}{f{Cne}}}b{}{}}00{{}Ej}{{}F`}{Fh{{f{c}}}{}}00{Fh{{f{Cnc}}}{}}00``{Fhb}00{{{f{Ej}}{f{Ej}}}d}{{{f{F`}}{f{F`}}}d}{{{f{AFb}}{f{AFb}}}d}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AFf}}}{{Bd{B`Bb}}}}{{{f{AFf}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}`{{{f{AFh}}c}{{Bd{AFhBb}}}{}}{{{f{AFj}}{f{{l{Aj}}}}}{{Bd{{l{c}}Bb}}}Dd}`{{{f{Ej}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{F`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AFb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{F`}}}Ej}{cc{}}{{{f{Ej}}}F`}11`{{{f{Ah}}cFh}AFl{}}{{{f{Ah}}Fh}AFn}`{{{f{AG`}}Fh}{{Bd{IdBb}}}}{{{f{AG`}}Fh}Id}??{{{f{Ej}}{f{Cnc}}}bAGb}{{{f{F`}}{f{Cnc}}}bAGb}{{{f{AFb}}{f{Cnc}}}bAGb}{{}Fh}00{ce{}{}}00{{{f{AGd}}}{{Bd{{l{Aj}}Bb}}}}{{{f{AGf}}}{{Bd{{l{Aj}}Bb}}}}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}0``{{{f{AGh}}}{{Cb{c}}}{}}{{{f{AGh}}}{{Cb{Lb}}}}{{{f{AGj}}}{{Cb{c}}}{}}2{{{f{AGh}}}{{Cb{{Gf{cc}}}}}{}}``{{{f{AEn}}}{{Bd{FhBb}}}}{{}Ej}{{}F`}{{{f{AGl}}FhFh}{{l{c}}}Dd}88``{{{f{AFf}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{AGj}}LbMn}{{Bd{{Cb{c}}Bb}}}{}}{{{f{AGn}}}B`}0{{{f{AH`}}}AH`}{{{f{AHb}}{f{Dh}}Nb}{{Bd{B`Bb}}}}{{{f{AHd}}c{Cb{e}}}{{Bd{AHdBb}}}{{Gh{}{{Cd{Md}}}}}{}}{{{f{AHd}}ci}{{Bd{AHdBb}}}{{Gh{}{{Cd{Md}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{g}}}}}}}}`{{{f{AHd}}{f{{l{Aj}}}}{Cb{c}}}{{Bd{AHdBb}}}{}}{{{f{AHf}}Gb}{{l{c}}}Dd}{{{f{AHh}}Gbc}{{l{e}}}{}Dd}{{{f{AHj}}FhFh}AHj}0`{{{f{AEl}}d}{{l{c}}}Dd}{{{f{AEl}}Ej}{{l{c}}}Dd}{{{f{AHl}}Al}{{Cb{Lb}}}}{{{f{AGh}}}{{Cb{c}}}{}}{{{f{AHn}}{f{c}}}{{Bd{AHnBb}}}Nf}{{{f{AI`}}{f{c}}}AI`Nf}{{{f{AIb}}}{{Fn{{f{{An{Al}}}}}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}Ol{}}00{{{f{AEn}}}{{Bd{AEnBb}}}}8{ce{}{}}00{{Ejd}Ej}{{F`d}F`}101010{{F`c}F`{{Gh{}{{Cd{d}}}}}}{EjEj}{F`F`}`{{{f{AId}}{f{{l{Aj}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Dd}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DdDd{{Dh{ff}{{Df{}}}}}{{Dh{f}{{Df{}}}}}{{Dh{f}{{Df{}}}}}Dd}{{{l{c}}{l{e}}gik}{{l{m}}}DdDd{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DdDd{{AIf{CbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}g}bDdDd{{E`{CbCb}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDd{}{{E`{}{{Df{g}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Ah}}}{{l{k}}}DdDd{CfAIh}{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Ah}}}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DdDdCf{{E`{}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDd{}{}{{E`{CbCb}{{Df{{Bd{{Cb{g}}i}}}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DdDdDd{{AIj{CbCbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDdCfAIl{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Ah}}}{{Bd{{l{m}}i}}}DdDdCfAIl{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DdDdAIl{{E`{ff}{{Df{{Bd{{Ch{Cf}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DdDdDd{}{}{{E`{CbCbCb}{{Df{{Bd{{Cb{i}}k}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{Cb}{{Df{{Bd{{Cb{e}}g}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{}{{Df{{Bd{eg}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{CfAIh}AIl{{E`{f}{{Df{{Bd{eg}}}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dd{{AIn{Cb}}}Dd}{{{f{{l{c}}}}e}{{l{g}}}DdAInDd}{{{f{{l{c}}}}g}{{l{i}}}DdCf{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}DdCf{{E`{}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dd{CfAIh}{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}0{{{f{{l{c}}}}}Fhn}0{{IhIh}Ih}{{{f{{l{El}}}}Md}{{Bd{bBb}}}}{{{f{{AJ`{Md}}}}Md}{{Bd{bBb}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAJbd}{{Fn{Md}}}Dd{{Cj{}{{Cd{Cb}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{AJb}}}AJb}{{{f{c}}{f{Cne}}}b{}{}}{{}AJb}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{AJb}}{f{AJb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AJb}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{AJb}}{f{Cnc}}}bAGb}{{}Fh}{ce{}{}}{{{f{{An{f}}}}cMde}{{Fn{Md}}}{{Cj{}{{Cd{Cb}}}}}{{Dh{fFhf}{{Df{d}}}}}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4`{{Fh{f{Cn{Fn{d}}}}}b}```{{{f{AHj}}FhFh}AHj}0{{Fh{f{{An{B`}}}}{f{CnF`}}}{{Bd{{AJd{{l{El}}}}Bb}}}}{{{f{{An{B`}}}}{f{{An{d}}}}d}{{Bd{AJfBb}}}}{{{f{Ah}}{f{{An{B`}}}}{f{{An{d}}}}d}{{Bd{{l{En}}Bb}}}}{{{f{Ah}}{f{{An{B`}}}}}{{Bd{{l{En}}Bb}}}}{{{f{B`}}}{{Bd{{Ch{Cf}}Bb}}}}{{{f{{An{B`}}}}}{{Bd{AJfBb}}}}{{{f{{An{B`}}}}}{{Bd{{l{En}}Bb}}}}0```````````77`{AJhGb}00{{{f{Ah}}}{{Bd{EhBb}}}}{{{f{Ah}}}{{Bd{AJjBb}}}}{{{f{AJl}}}Gb}333````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000{{{f{AJn}}c}AJn{{E`{{f{B`}}}{{Df{B`}}}}}}{{{f{AK`}}}d}{{{f{Id}}}{{`{{Cj{}{{Cd{Id}}}}}}}}{{{f{Id}}{f{Cn{Fn{Id}}}}}b}{{AK`d}AK`}{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{Id}}{f{Id}}}Id}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{l{A`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Ab}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Aj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AJn}}{f{Bh}}}B`}{{{f{CnAKb}}{Cb{{f{Ah}}}}}b}{{{f{CnAK`}}{f{AK`}}}{{Bd{bBb}}}}{{{f{CnAKb}}}b}{{{f{CnAKb}}{f{Ah}}}b}{{{f{AK`}}Ej}{{l{El}}}}{eAKd{}{{Gh{}{{Cd{c}}}}}}0{{ADde}AKf{}{{Gh{}{{Cd{c}}}}}}0{{{f{L`}}}Id}{{{f{Id}}}Id}{{{f{{Jb{J`In}}}}}{{`{Ib}}}}{{{f{{Jb{JhJd}}}}}{{`{Ib}}}}{{{f{Ef}}}{{f{Ef}}}}{{{f{N`}}}{{f{Ef}}}}{{{f{AKh}}}{{f{Ef}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{{f{{An{c}}}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{{Jb{KbJd}}}}}{{`{Ib}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Cnc}}}{{f{Cne}}}{}{}}000000000000000000000000000000000000000000{Ef{{Ch{Ef}}}}{{{ALd{Ah}}}ALf}{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{{f{ALj}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{JlJj}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{JnJd}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{KbJd}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{J`In}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{JhJd}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{AK`}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{AJn}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{Id}}{f{Ef}}}Id}{{{f{{Jb{JhJd}}}}Jf}{{Jb{JhJd}}}}{{{f{{Jb{JnJd}}}}Jf}{{Jb{JnJd}}}}`{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}00000000{{{f{{l{Eb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Ed}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AJn}}}{{f{{Fn{{Ch{Cf}}}}}}}}{{{f{{Jb{ce}}}}}{{Jb{ce}}}DdDd}{{{f{ALl}}}ALl}{{{f{ALf}}}ALf}{{{f{AK`}}}AK`}{{{f{AJn}}}AJn}{{{f{L`}}}L`}{{{f{ALn}}}ALn}{{{f{Id}}}Id}{{{f{AM`}}}AM`}{{{f{Ef}}}Ef}{{{f{N`}}}N`}{{{f{Jf}}}Jf}{{{f{M`}}}M`}{{{f{Lh}}}Lh}{{{f{El}}}El}{{{f{Ll}}}Ll}{{{f{Mf}}}Mf}{{{f{Ld}}}Ld}{{{f{In}}}In}{{{f{Jd}}}Jd}{{{f{Eb}}}Eb}{{{f{Ed}}}Ed}{{{f{J`}}}J`}{{{f{Kb}}}Kb}{{{f{A`}}}A`}{{{f{Ab}}}Ab}{{{f{En}}}En}{{{f{Aj}}}Aj}{{{f{Jl}}}Jl}{{{f{Jh}}}Jh}{{{f{Jn}}}Jn}{{{f{AMb}}}AMb}{{{f{ADd}}}ADd}{{{f{AMd}}}AMd}{{{f{c}}{f{Cne}}}b{}{}}000000000000000000000000000000000{{{f{CnN`}}Ef}b}{AMfe{}{{AKd{c}}AIh}}0{{AMfADd}e{}{{AKf{c}}AIh}}0{{{f{Ef}}}d}00{{{ALd{Ah}}}Ef}{{{f{N`}}}{{f{Ef}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{}AMh}{{}ALl}{{}ALf}{{}Id}{{}AM`}{{}Ef}{{}ADd}{Fh{{f{c}}}{}}0{{{f{{Jb{ce}}}}}fDdDd}11111111111111111111111111111111111111111{Fh{{f{Cnc}}}{}}00{{{f{Cn{Jb{ce}}}}}{{f{Cn}}}DdDd}1111111111111111111111111111111111111111{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{AKbc}AK`{{Gh{}{{Cd{{Cb{{f{Ah}}}}}}}}}}{Fhb}000000000000{{{f{CnAJn}}}b}111111111111111111111111111111{{{f{ALj}}}{{f{Ef}}}}{{{f{{Jb{KbJd}}}}}{{f{Ef}}}}{{{f{{Jb{JlJj}}}}}{{f{Ef}}}}{{{f{{Jb{JhJd}}}}}{{f{Ef}}}}{{{f{{Jb{J`In}}}}}{{f{Ef}}}}{{{f{{Jb{JnJd}}}}}{{f{Ef}}}}{{{f{AK`}}}{{f{Ef}}}}{{{f{AJn}}}{{f{Ef}}}}{{{f{L`}}}{{f{Ef}}}}{{{f{Id}}}Ef}`{{{f{ALl}}{f{ALl}}}d}{{{f{Id}}{f{Id}}}d}{{{f{AM`}}{f{AM`}}}d}{{{f{Ef}}{f{Ef}}}d}{{{f{Ef}}{f{ADd}}}d}{{{f{N`}}{f{N`}}}d}{{{f{Jf}}{f{Jf}}}d}{{{f{ADd}}{f{ADd}}}d}{{{f{AMd}}{f{AMd}}}d}{{{f{Id}}{f{Id}}d}d}{{{f{AK`}}{f{{l{A`}}}}}}{{{f{AK`}}{f{Ah}}}}{{{f{AK`}}{f{AK`}}}}{{{f{AJn}}{f{AJn}}}{{l{Aj}}}}1230{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{{Jb{ce}}}}}N`DdDd}{{{f{AJn}}{f{Ah}}}{{Bd{B`Bb}}}}{{{f{AJn}}}{{f{{An{B`}}}}}}{{{f{CnAJn}}}{{f{Cn{Fn{B`}}}}}}{{{f{ALf}}{f{Ah}}}{{Cb{Md}}}}{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{AKbAK`}{AMh{{ADn{ALf}}}}{{{f{ALl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{ALf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{ALn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Id}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{AM`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Ef}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{N`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Jf}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{ADd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AMd}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}0{{{l{Jd}}}{{Jb{KbJd}}}}1{{{l{In}}}{{Jb{J`In}}}}2222222222222{dId}{{{f{{An{Al}}}}}Id}{cIdAMj}{{{Cb{c}}}Id{{AMl{Id}}}}{{{f{Ah}}}Id}777{{{f{Id}}}Ef}{IdEf}{{{f{ADd}}}Ef}:{{{f{AMn}}}N`}{{{f{Id}}}N`}<{{{f{AMd}}}Jf}====================={AN`ADd}{ANbADd}?{{{f{ADd}}d}Ef}{{{l{El}}{ADn{ALf}}dALl}AK`}{{{f{Ah}}cJf}{{Jb{JnJd}}}{{Gh{}{{Cd{ANd}}}}}}{{{f{Ah}}cJf}{{Jb{JnJd}}}{{Gh{}{{Cd{{Cb{ANd}}}}}}}}{{{l{El}}ALl}AK`}{{{f{Ah}}c}{{Jb{J`In}}}{{Gh{}{{Cd{ANf}}}}}}{{{f{Ah}}c}{{Jb{J`In}}}{{Gh{}{{Cd{{Cb{ANf}}}}}}}}{{{f{Ah}}cJf}{{Jb{JhJd}}}{{Gh{}{{Cd{AJh}}}}}}{{{f{Ah}}cJf}{{Jb{JhJd}}}{{Gh{}{{Cd{{Cb{AJh}}}}}}}}{{{f{Ah}}c}{{Jb{KbJd}}}{{Gh{}{{Cd{AJl}}}}}}{{{f{Ah}}c}{{Jb{KbJd}}}{{Gh{}{{Cd{{Cb{AJl}}}}}}}}{{{ANj{ANh}}Ef}N`}{{{f{{l{A`}}}}{f{{ALd{Ah}}}}ALl}{{Bd{AK`Bb}}}}{{{Fn{c}}ADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{Fn{c}}ADd}{{AIh{}{{AKj{e}}{AKl{c}}{AKn{g}}}}}{AL`{ALb{e}}}ABf{{G`{}{{Cd{e}}}}IbHlHn}}{{FhcADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{FhADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{Ah}}dFhALl}AK`}{{{f{Ah}}Fh}AJn}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{ALf}}Md}{{f{Ah}}}}{{{f{{Jb{KbJd}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{JnJd}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{JhJd}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{J`In}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{JlJj}}}}Fh}{{Bd{IdBb}}}}{{{f{ALj}}Fh}{{Bd{IdBb}}}}{{{f{AK`}}Fh}{{Bd{IdBb}}}}{{{f{AJn}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{J`In}}}}Fh}Id}{{{f{{Jb{JlJj}}}}Fh}Id}{{{f{{Jb{JhJd}}}}Fh}Id}{{{f{{Jb{KbJd}}}}Fh}Id}{{{f{{Jb{JnJd}}}}Fh}Id}{{{f{ALj}}Fh}Id}{{{f{AK`}}Fh}Id}{{{f{AJn}}Fh}Id}{{{f{ALf}}}{{f{{ALd{Ah}}}}}}{{}Ef}000000000000000000000000{{{f{ALf}}Md}{{Cb{{f{Ah}}}}}}{{{f{AK`}}}{{f{{ADn{ALf}}}}}}{{{f{Ef}}}{{Cb{{Fn{Fh}}}}}}{{{f{Id}}}{{Cb{{f{Ah}}}}}}{{{f{ANl}}Fh}Id}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{AK`}}{f{{l{A`}}}}}}{{{f{AK`}}{f{Ah}}}}{{{f{AK`}}{f{AK`}}}}{{{f{AJn}}{f{AJn}}}{{l{Aj}}}}1230{{{f{Id}}{f{Cnc}}}bAGb}{{{f{AM`}}{f{Cnc}}}bAGb}{{{f{Ef}}{f{Cnc}}}bAGb}{{{f{N`}}{f{Cnc}}}bAGb}{{{f{Jf}}{f{Cnc}}}bAGb}{{{f{ADd}}{f{Cnc}}}bAGb}{{{f{AMd}}{f{Cnc}}}bAGb}{{{f{Id}}{f{Cnc}}d}bAGb}{{{f{{Jb{KbJd}}}}}{{l{Mf}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{}Fh}000000000000000000000000000000000000000000{{{f{Ef}}}{{Cb{{f{Ef}}}}}}{{{f{ADd}}}{{Cb{{f{ADd}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{{f{AJn}}}}{{{Jb{JnJd}}}B`}{{{Jb{KbJd}}}B`}{{{Jb{J`In}}}B`}{{{Jb{JlJj}}}B`}{{{Jb{JhJd}}}B`}{AK`B`}{AJnB`}{{L`{f{Ah}}}B`}{Id{{Bd{IdBb}}}}{{{f{Ef}}}d}00{{{f{Id}}}d}11{{{f{AK`}}}d}{{{f{AJn}}}d}1323{{{f{ALf}}}d}34440443434344443444434{{{f{ADd}}}d}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{ADl{cgADj}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{AJn}}}ACn}{{{f{AK`}}}ANn}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{Ef}}}{{f{Ef}}}}{{{f{ALf}}}Fh}{{{f{AK`}}}Fh}{{{f{AJn}}}Fh}{{{f{AK`}}{f{AK`}}}}{{{f{AK`}}{f{Ah}}}}{{{f{AK`}}{f{{l{A`}}}}}}{{{f{AJn}}{f{AJn}}}{{l{Aj}}}}2310{{{f{AK`}}{f{AK`}}}{{Bd{{Gf{AK`AK`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Ef}}{f{Ef}}}{{Bd{dBb}}}}{{{f{AK`}}}L`}{{{f{Ef}}{f{Ef}}}{{Bd{EfBb}}}}{{{f{CnAMh}}{f{{ADn{ALf}}}}}{{Bd{bBb}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}03{{{f{{Jb{KbJd}}}}}{{l{Mf}}}}1{{{f{{Jb{JhJd}}}}{Cb{{f{AJj}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{{Jb{J`In}}}}{Cb{{f{AJj}}}}}{{Bd{{Jb{J`In}}Bb}}}}01{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{AK`}}}{{Bd{FhBb}}}}{{{f{AK`}}}{{f{Ah}}}}{{{f{AJn}}}{{f{{ANj{ANh}}}}}}{{{f{N`}}}{{f{{ANj{ANh}}}}}}`{{{f{{Jb{KbJd}}}}}{{l{In}}}}:{{}c{}}0{{{f{Ah}}FhALl}AKb}{{{f{Ah}}c}{{Jb{JhJd}}}{{Hh{{An{AJh}}}}}}{{{f{Ah}}c}{{Jb{J`In}}}{{Hh{{An{ANf}}}}}}{{{f{Ah}}c}{{Jb{J`In}}}{{Hh{{An{{Cb{ANf}}}}}}}}{{{f{Ah}}c}{{Jb{JnJd}}}{{Hh{{An{{Cb{ANd}}}}}}}}{{{f{Ah}}c}{{Jb{KbJd}}}{{Hh{{An{AJl}}}}}}{{{f{Ah}}c}{{Jb{JhJd}}}{{Hh{{An{{Cb{AJh}}}}}}}}{{{f{Ah}}c}{{Jb{KbJd}}}{{Hh{{An{{Cb{AJl}}}}}}}}{{{f{Ah}}c}{{Jb{JnJd}}}{{Hh{{An{ANd}}}}}}{{{ADn{ALf}}}AMh}{{{f{Ah}}{f{{An{B`}}}}}{{Bd{AJnBb}}}}{{EfId}L`}{{{f{Ah}}Ef}N`}{{{f{CnANn}}}Cb}{{{f{AK`}}{f{Ah}}}}{{{f{AK`}}{f{AK`}}}}{{{f{AK`}}{f{{l{A`}}}}}}{{{f{AJn}}{f{AJn}}}{{l{Aj}}}}2310{{{f{AK`}}}Fh}{{{f{AJn}}}Fh}{{{f{Ah}}{f{{An{{f{Ah}}}}}}{f{Ah}}}{{Jb{J`In}}}}{{{f{Ah}}{f{{An{{f{Ah}}}}}}{f{Ah}}}{{Jb{KbJd}}}}{{{f{Id}}{f{Id}}}{{Cb{AO`}}}}{{{f{Jf}}{f{Jf}}}{{Cb{AO`}}}}{{{f{AK`}}}{{f{{l{El}}}}}}{{{f{{Jb{JlJj}}}}}{{Cb{Fh}}}}{{{f{CnAJn}}}b}{{{f{AJn}}}{{f{N`}}}}{{{f{CnAKb}}{f{Ah}}}{{Gf{Mdd}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{CnAJn}}{f{Ah}}}b}{{{f{{Jb{J`In}}}}{f{{l{A`}}}}AOb{Cb{{f{AJj}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{{Jb{JhJd}}}}{f{{l{A`}}}}AOb{Cb{{f{AJj}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{AJn}}}{{Bd{{l{En}}Bb}}}}{{{f{ALf}}{f{ALf}}}d}{{{f{{Jb{JlJj}}}}}Fh}{{{f{{Jb{KbJd}}}}}{{l{Mf}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{{f{CnN`}}{ANj{ANh}}}b}{{{f{Cn{Jb{JnJd}}}}Jf}b}{{{f{Cn{Jb{JhJd}}}}Jf}b}{{{f{Cn{Jb{JhJd}}}}Eh}{{Bd{bBb}}}}{{{f{ANn}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{AK`}}d}AK`}{{{f{AK`}}Ej}AK`}{{{f{{Jb{J`In}}}}{f{Ah}}}{{l{A`}}}}{{{f{{Jb{KbJd}}}}{f{Ah}}}{{l{A`}}}}{{{f{{Jb{JhJd}}}}{f{Ah}}}{{Bd{{l{A`}}Bb}}}}{{{f{Id}}{f{Ef}}}{{Cb{Id}}}}{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{Jb{JhJd}}}}}Jf}{{{f{{Jb{JnJd}}}}}Jf}{{{f{{Jb{JhJd}}}}}{{f{{Cb{Eh}}}}}}{{{f{AK`}}dd}{{Ch{Cf}}}}{{{f{Ef}}d}ADd}{{{f{N`}}d}AMn}{JfAMd}{{{f{Ef}}{f{Ah}}d}AMn}{Jf{{f{Ah}}}}{{{f{AK`}}{f{{ALd{Ah}}}}AOd}AK`}{{{f{AK`}}}{{Bd{AK`Bb}}}}{{{f{AK`}}}AK`}{{{f{ADd}}}{{f{ADd}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000{{{f{Ef}}}Ef}{{{f{ADd}}}AOf}{{{f{{Jb{KbJd}}}}{f{Ah}}}{{l{A`}}}}{{{f{{Jb{JhJd}}}}{f{Ah}}}{{Bd{{l{A`}}Bb}}}}{{{f{{Jb{J`In}}}}{f{Ah}}}{{l{A`}}}}{{{f{c}}}Eh{}}00{{{f{Id}}{f{Id}}}d}{{{f{AJn}}}Fh}{{{f{{Jb{JhJd}}}}{Cb{{f{AJj}}}}{f{{l{A`}}}}{f{Ah}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{{Jb{J`In}}}}{Cb{{f{AJj}}}}{f{{l{A`}}}}{f{Ah}}}{{Bd{{Jb{J`In}}Bb}}}}{g{{Bd{AKde}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{{ADdg}{{Bd{AKfe}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{AMf{{Bd{eg}}}{}{{AKd{c}}AIh}{}}0{{AMfADd}{{Bd{eg}}}{}{{AKf{c}}AIh}{}}0{{{f{Id}}}{{Bd{cBb}}}Kn}{c{{Bd{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{Id}}{f{Ef}}}{{Bd{IdBb}}}}{{{f{Ef}}d}{{Bd{ADdBb}}}}{{{f{c}}}Ol{}}000000000000000000000000000000000000000000{{{f{ADd}}}ADd}{{{f{AK`}}}{{Bd{AK`Bb}}}}{AJnAOh}{{{f{CnL`}}Id}b}{{{f{AK`}}}d}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}cABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{L`}}}{{f{Id}}}}{{{f{AK`}}}{{Bd{AOhBb}}}}2{{{f{Ef}}Id}d}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}gABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{ce{}{}}000000000000000000000000000000000000000000{Fhc{}}0{{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}{Cb{Hb}}}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{Ef}}}Id}```````````{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{f{AK`}}{f{AK`}}}{{Bd{{Gf{AK`AK`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{}AOj}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{{}b}{{{f{CnAOj}}}b}{Fhb}2{cc{}}6{{}Fh}{ce{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}{{}d}3``````````````````````{{{f{AOl}}}{{f{Ah}}}}>>>===`{{BbAOl}Bb}{BbBb}=={{{f{AOl}}}f}>===:::`{{{f{AOn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AOl}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{Bb}}{f{CnGj}}}{{Bd{bGl}}}}0<<{cAOl{{AMl{{Dl{Ah}}}}}}{B@`Bb}{B@bBb}{B@dBb}{cc{}}{B@fBb}{B@hBb}{B@jBb}{{}{{Fj{{f{Ah}}AOn}{{Df{b}}}}}}{{}Fh}00{ce{}{}}00{cBbAIl}````{{{Fj{{f{Ah}}AOn}{{Df{b}}}}}b}{cBbB@l}{{{f{c}}}Eh{}}0{c{{Bd{e}}}{}{}}00000{{{f{c}}}Ol{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{CnAOh}}{Fn{B`}}{f{B@n}}}{{Bd{bBb}}}}{{{f{AOh}}{f{Dh}}}{{Fn{B`}}}}0{{{f{AOh}}{f{{l{Aj}}}}}{{Bd{AOhBb}}}}{{{f{AOh}}{f{{An{{ANj{ANh}}}}}}}{{Bd{AOhBb}}}}0{{{f{AOh}}GbFh}AOh}{{{f{CnAOh}}}{{f{CnAOh}}}}{{{f{CnAOh}}{f{Ah}}e}{{Bd{{f{CnAOh}}Bb}}}BA`{{A@`{{f{B`}}}{{Df{c}}}}}}{{{f{CnAOh}}Fhe}{{Bd{{f{CnAOh}}Bb}}}BA`{{A@`{{f{B`}}}{{Df{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Cnc}}}{{f{Cne}}}{}{}}0000{{{f{AOh}}}AOh}{{{f{BAb}}}BAb}{{{f{BAd}}}BAd}2{{{f{c}}{f{Cne}}}b{}{}}00{{{f{AOh}}{f{Ah}}}{{Bd{{f{B`}}Bb}}}}{{{f{AOh}}e}{{Bd{{Fn{{f{B`}}}}Bb}}}{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}}{{}BAd}{{}AOh}{Fh{{f{c}}}{}}0000{Fh{{f{Cnc}}}{}}0000{Fhb}000{{{f{AOh}}{f{Ah}}}{{Bd{AOhBb}}}}1{{{f{CnAOh}}{f{Ah}}}{{Bd{B`Bb}}}}{{{f{AOh}}{f{{An{c}}}}}AOh{{Hh{Ah}}}}{{{f{AOh}}{f{{BAf{{f{Ah}}Nl}}}}}AOh}{{{f{AOh}}{Cb{{f{{An{c}}}}}}}{{Bd{AOhBb}}}{{Hh{Ah}}}}{{{f{AOh}}}{{Fn{Ef}}}}9{{{f{BAd}}{f{BAd}}}d}{{{f{AOh}}{f{AOh}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{AOh}}}Fh}`{{{f{AOh}}e}{{Bd{AOhBb}}}{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOh}}{Fn{B`}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{AOh}}}{{Bd{bBb}}}}{{{f{AOh}}}{{Fn{N`}}}}{{{f{AOh}}AFb}{{Bd{AOhBb}}}}{{{f{AOh}}{f{{l{Aj}}}}}{{Bd{AOhBb}}}}{{{f{BAb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AOh}}{f{CnGj}}}{{Bd{bGl}}}}0{cc{}}000{AJnAOh}{{{f{BAh}}}AOh}2{{{f{B@n}}}AOh}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}{cAOh{{Gh{}{{Cd{B`}}}}}}{{{f{{An{BAj}}}}}{{Bd{AOhBb}}}}{{{f{{An{BAj}}}}{f{B@n}}}{{Bd{AOhBb}}}}{{c{f{B@n}}}{{Bd{AOhBb}}}{{Cj{}{{Cd{{f{BAj}}}}}}}}{{{f{AOh}}Fh}{{Cb{{Fn{Id}}}}}}{{{f{AOh}}{f{Ah}}}{{Cb{Fh}}}}{{{f{AOh}}}{{Fn{{f{Ah}}}}}}{{{f{AOh}}}{{Fn{{ANj{ANh}}}}}}{{{f{AOh}}}{{f{{An{B`}}}}}}{{{f{CnAOh}}}{{f{Cn{Fn{B`}}}}}}{{{f{AOh}}Fh}{{Bd{BAjBb}}}}{{{f{AOh}}Fh{f{CnBAj}}}{{Bd{bBb}}}}{{{f{AOh}}Fh{f{CnBAj}}}b}{{{f{AOh}}}{{Cb{{Bd{EfBb}}}}}}`{{{f{AOh}}e}{{Bd{BAlBb}}}{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOh}}{Fn{B`}}{f{BAn}}}{{Bd{{Gf{B`{Fn{B`}}Bh}}Bb}}}}1{{{f{AOh}}{Fn{B`}}dd}{{Bd{BAlBb}}}}{{{f{BAd}}{f{Cnc}}}bAGb}{{{f{AOh}}{Cb{Fh}}}AOh}{{{f{AOh}}}Fh}{{{f{AOh}}{f{{An{B`}}}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{{An{B`}}}}}{{Bd{{f{CnAOh}}Bb}}}}{{{f{CnAOh}}{f{{An{B`}}}}}{{f{CnAOh}}}}{{{f{AOh}}Fh}f}{{{f{AOh}}{BB`{Fh}}}f}{{{f{AOh}}BBb}f}{{{f{AOh}}{f{Ah}}}f}{{{f{AOh}}{BBd{Fh}}}f}{{{f{AOh}}{BBf{Fh}}}f}{{{f{AOh}}{Ln{Fh}}}f}{{{f{AOh}}{BBh{Fh}}}f}{{}Fh}0000{{{f{CnAOh}}Fhc}{{Bd{{f{CnAOh}}Bb}}}BA`}{ce{}{}}000000{{AOh{f{Ah}}}AJn}{{{f{AOh}}}{{Bd{{l{Aj}}Bb}}}}{{{f{AOh}}}d}1{{{f{AOh}}}{{Ff{B`}}}}{{{f{AOh}}d}BBj}{{{f{AOh}}}BBl}{AOhBBn}{{{f{AOh}}}{{Bd{{Cb{B`}}Bb}}}}{{{f{AOh}}BAb}{{Bd{{Cb{B`}}Bb}}}}{{{f{AOh}}ce}{{Bd{AOhBb}}}{{BC`{{ANj{ANh}}}}}{{BC`{{ANj{ANh}}}}}}{{{f{AOh}}BCb}{{Bd{AOhBb}}}}3{{{f{AOh}}}Fh}{{{Fn{c}}}{{Bd{AOhBb}}}BA`}{{{Fn{B`}}}AOh}{{{Fn{B`}}}{{Bd{AOhBb}}}}{{{f{CnBBj}}}Cb}{{{f{CnBBl}}}Cb}{{{f{AOh}}}AOh}{{AOhe}{{Bd{cBb}}}{}{{Dh{AOh}{{Df{{Bd{cBb}}}}}}}}{{{f{CnAOh}}e}{{Bd{cBb}}}{}{{Dh{{f{CnAOh}}}{{Df{{Bd{cBb}}}}}}}}{{AOhgc}{{Bd{eBb}}}{}{}{{Dh{AOhc}{{Df{{Bd{eBb}}}}}}}}{{{f{CnAOh}}}{{Cb{B`}}}}{{{f{AOh}}{f{AOh}}}d}{{{f{CnAOh}}{f{Ah}}{f{Ah}}}{{Bd{{f{CnAOh}}Bb}}}}{{{f{CnAOh}}{f{Ah}}c}{{Bd{{f{CnAOh}}Bb}}}BA`}{{{f{CnAOh}}Fhc}{{Bd{{f{CnAOh}}Bb}}}BA`}18{{{f{AOh}}{Fn{B`}}{f{BCd}}}{{Bd{{Gf{B`{Fn{B`}}Bh}}Bb}}}}`{{{f{AOh}}{f{B`}}dd{Cb{Il}}}{{Bd{AOhBb}}}}0{{{f{AOh}}Fhdd{Cb{Il}}}{{Bd{AOhBb}}}}{{{f{AOh}}}B@n}{{{f{AOh}}{f{AOh}}}{{Bd{bBb}}}}{{{f{AOh}}e}{{Bd{AOhBb}}}{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOh}}Fh}{{Cb{{f{B`}}}}}}{{{f{AOh}}c}{{Bd{AOhBb}}}{{BCf{Fh}}}}2{{{f{AOh}}c}{{Bd{{Fn{B`}}Bb}}}{{BC`{{ANj{ANh}}}}}}{{{f{AOh}}e{f{{ADn{B@n}}}}}{{Bd{AOhBb}}}{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOh}}e{f{B@n}}}{{Bd{AOhBb}}}{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}}{{{f{CnAOh}}{f{{An{c}}}}}{{Bd{bBb}}}{{Hh{Ah}}}}{{{f{AOh}}}{{Gf{FhFh}}}}{{{f{AOh}}Gb}AOh}{{{f{AOh}}}d}{{{f{CnAOh}}}b}{{{f{BBj}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{BBl}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{AOh}}GbFh}AOh}0{{{f{AOh}}cF`}{{Bd{AOhBb}}}{{BC`{{ANj{ANh}}}}}}{{{f{CnAOh}}cF`}{{Bd{{f{CnAOh}}Bb}}}{{BC`{{ANj{ANh}}}}}}{{{f{CnAOh}}}{{`{{Cj{}{{Cd{AOh}}}}}}}}{{AOhFhd}{{Fn{AOh}}}}{{{f{AOh}}BAb}{{Bd{{Cb{B`}}Bb}}}}{{{f{AOh}}{Cb{Fh}}}AOh}{{{f{AOh}}{f{{l{El}}}}}{{Bd{AOhBb}}}}{{{f{AOh}}{f{{l{El}}}}}AOh}{{{f{AOh}}{f{{l{El}}}}d}AOh}{{{f{AOh}}}{{f{AOh}}}}{{{f{AOh}}BCh}{{Bd{{Of{Oh{Od{{Ob{Fh}}}}}}Bb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Eh{}}{{{f{AOh}}FhcF`}{{Bd{AOhBb}}}{{BC`{{ANj{ANh}}}}}}{{{f{CnAOh}}{Cb{{f{Ah}}}}{Cb{{Oj{Eh{Fn{Eh}}}}}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{Ah}}e}{{Bd{{f{CnAOh}}Bb}}}BA`{{A@`{{f{B`}}}{{Df{{Bd{cBb}}}}}}}}{{{f{CnAOh}}Fhe}{{Bd{{f{CnAOh}}Bb}}}BA`{{A@`{{f{B`}}}{{Df{{Bd{cBb}}}}}}}}{c{{Bd{e}}}{}{}}000{{{Gf{{BCj{{Ch{Cf}}}}{f{{An{AMn}}}}}}}{{Bd{AOhBb}}}}{BCl{{Bd{AOhBb}}}}2{{c{f{B@n}}}{{Bd{AOhBb}}}{{Cj{}{{Cd{{Bd{{f{BAj}}Bb}}}}}}}}{{{f{AOh}}{f{Ah}}}{{Bd{FhBb}}}}44444{{{f{c}}}Ol{}}0000{{{f{AOh}}{Cb{{f{{An{Eh}}}}}}BAd{Cb{{Gf{GbFh}}}}}{{Bd{AOhBb}}}}{{{f{AOh}}d{Cb{{f{{An{Eh}}}}}}BAd{Cb{{Gf{GbFh}}}}}{{Bd{AOhBb}}}}1{{{f{AOh}}c}{{Bd{AOhBb}}}{{BC`{Eh}}}}{{{f{AOh}}c{f{Ah}}AObAOb}{{Bd{AOhBb}}}{{BC`{Eh}}}}0{{{f{AOh}}{f{AOh}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{AOh}}}{{Bd{{f{CnAOh}}Bb}}}}{ce{}{}}0000{{{f{AOh}}}Fh}{{{f{CnAOh}}c}{{Bd{{f{CnAOh}}Bb}}}BA`}{{{f{CnAOh}}c{f{B@n}}}{{Bd{{f{CnAOh}}Bb}}}BA`}{{{f{CnAOh}}B`}{{f{CnAOh}}}}{{{f{AOh}}{f{Ah}}{Cb{Md}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{Ah}}{Cb{Md}}}{{f{CnAOh}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{BCb}}}BCb}{{{f{c}}{f{Cne}}}b{}{}}{{}BCb}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{BCb}}{f{BCb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCb}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{BCb}}{f{Cnc}}}bAGb}`{{}Fh}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BAl}}}{{Bd{AOhBb}}}}`{{{f{BCn}}}{{f{{An{{BD`{Md}}}}}}}}{{{f{BAl}}c}{{Bd{AOhBb}}}{{E`{AOh}{{Df{{Bd{AOhBb}}}}}}HlHn}}{{{f{Bh}}}{{l{j}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Cnc}}}{{f{Cne}}}{}{}}0000000{{{f{BCn}}}BCn}{{{f{Bh}}}Bh}{{{f{BAl}}}BAl}{{{f{BDb}}}BDb}{{{f{c}}{f{Cne}}}b{}{}}000:{{}BCn}{{}Bh}{Fh{{f{c}}}{}}000{{{f{BDd}}}f}1111{Fh{{f{Cnc}}}{}}0000000`{{BDfc}{}BDh}{Fhb}0000{{{f{CnBCn}}}b}111{{{f{BCn}}{f{BCn}}}d}{{{f{Bh}}{f{Bh}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BDj}}}Md}{{{f{BCn}}}{{f{{An{Md}}}}}}{{{f{BAl}}}{{Bd{AOhBb}}}}{{{f{CnBCn}}}{{f{Cn{Fn{Md}}}}}}{{{f{BCn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Bh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BDb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{Ah}}BDb}Eh}{cc{}}000{{{Fn{{Gf{{Fn{Md}}{Fn{{BD`{Md}}}}}}}}}BCn}{{{Fn{{Fn{{Gf{Md{BD`{Md}}}}}}}}}BCn}{{{Fn{{Gf{Md{BD`{Md}}}}}}}BCn}33{BCnBh}44{BDlBDb}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}{cBCn{{Gh{}{{Cd{{Gf{Md{BD`{Md}}}}}}}}}}{cBCn{{Hj{}{{Cd{{Gf{Md{BD`{Md}}}}}}}}}}{{{f{Bh}}Fh}BDj}{{{f{BAl}}}{{f{Bh}}}}{{{f{CnBAl}}}{{f{CnBh}}}}{{{f{Bh}}}{{l{El}}}}{{{f{BDn}}dd}{{Bd{BhBb}}}}{{{f{BAl}}}{{Bd{AOhBb}}}}{{{f{CnBh}}}{{f{CnBCn}}}}{{}Fh}0000000{ce{}{}}0000000{BhBCn}1{BCn}{{{f{BCn}}}}310{{{f{BDj}}}d}{{{f{Bh}}}d}{{{f{BCn}}}d}{{{f{BCn}}}{{BEb{{BE`{{Ff{Md}}}}{Ff{{BD`{Md}}}}}}}}{{{f{Bh}}}BEd}{{{f{BAl}}}{{Fn{B`}}}}{{{f{BAl}}{Cb{{Gf{GbFh}}}}}{{Fn{B`}}}}={{{f{BDj}}}Fh}{{{f{Bh}}}Fh}?????{{{Fn{Md}}{Fn{{BD`{Md}}}}d}BCn}{{{f{AOh}}{Fn{B`}}Bh{Cb{{Fn{Eh}}}}}BAl}{{{f{CnBEd}}}Cb}{{{f{CnBEd}}Fh}Cb}{{{f{BAl}}c}{{Bd{AOhBb}}}{{Dh{AOh}{{Df{{Bd{AOhBb}}}}}}HlHn}}{{{f{c}}}{}{}}{{{f{Bh}}}BDf}{{{f{BAl}}LbMn}{{Bd{AOhBb}}}}{{BAle}BAl{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}}{{{f{Bh}}GbFh}BDd}{{{f{CnBCn}}}b}{{{f{CnBh}}}b}{{{f{BAl}}Al}{{Bd{AOhBb}}}}{{{f{BAl}}}{{Bd{AOhBb}}}}{Bh{{Fn{Md}}}}0{BAlBh}{{{f{CnBAl}}}Bh}{{{f{c}}}e{}{}}000{{{f{c}}}Eh{}}{c{{Bd{e}}}{}{}}000000000000000{{{f{c}}}Ol{}}0000000{BhBh}{{{f{Bh}}}{{f{BCn}}}}{{{f{Bh}}}{{f{{Fn{{Ob{Md}}}}}}}};{ce{}{}}0000000`````{{{f{BCn}}c}B`{{Dh{{Gf{Md{f{{BD`{Md}}}}}}}{{Df{Cb}}}}HlHn}}{{{f{BCn}}c}B`{{Dh{{Gf{Md{f{{BD`{Md}}}}}}}{{Df{}}}}HlHn}}{{{f{{An{{Ob{Md}}}}}}c}B`{{Dh{{Ob{Md}}}{{Df{Cb}}}}HlHn}}{{{f{{An{{Ob{Md}}}}}}c}B`{{Dh{{Ob{Md}}}{{Df{}}}}HlHn}}{{{f{{An{c}}}}e{Cb{{ADn{ADf}}}}}{{AJ`{c}}}{BEfBEh}{{Cj{}{{Cd{{Gf{MdMd}}}}}}Ib}}{{{f{{An{c}}}}{f{Hb}}e{Cb{{ADn{ADf}}}}}{{AJ`{c}}}{BEfBEh}{{Cj{}{{Cd{{Gf{MdMd}}}}}}Ib}}{{{f{{l{c}}}}MdMd}{{l{c}}}Dd}{{{f{{Fn{{Ob{Md}}}}}}{f{{An{{Ch{Cf}}}}}}}d}{{{f{BEj}}{f{Bh}}}B`}{{BElBEl}BEl}0`{{{f{BEn}}{f{AOh}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BEn}}}{{Bd{{f{Ah}}Bb}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{CnBF`}}Id}{{Cb{b}}}}{{{f{CnBFb}}{f{Id}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00{{{f{BF`}}}BF`}{{{f{BFb}}}BFb}{{{f{BAj}}}BAj}{{{f{c}}{f{Cne}}}b{}{}}00{{{f{{An{c}}}}}Ef{{Hd{Ef}}}}{{}BAj}{Fh{{f{c}}}{}}00{Fh{{f{Cnc}}}{}}00{Fhb}00{{{f{BAj}}{f{BAj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BAj}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{Gf{{f{Ef}}Fh}}}BF`}{{{Gf{{f{Ef}}Fh}}}BFb}22{{eFh}B@n{{AMl{Ef}}}{{Cj{}{{Cd{{Fn{{Gf{Ehc}}}}}}}}}}{{}Fh}00{ce{}{}}00{BF`B`}{BFbB`}{{{f{Ef}}Fh}BF`}{{{f{Ef}}Fh}BFb}{{{Fn{Id}}}BAj}{{{f{CnBF`}}Fh}B`}{{{f{CnBFb}}Fh}B`}{{{f{{An{BAj}}}}{Cb{Fh}}}{{Bd{B@nBb}}}}0{{{f{{An{BAj}}}}{Cb{Fh}}}{{Bd{{Fn{Ef}}Bb}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}Ol{}}00<<<{{{f{{An{AOh}}}}}{{Bd{AOhBb}}}}0```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AOh{f{{An{{f{Ah}}}}}}{f{{An{{f{Ah}}}}}}{Cb{{f{Ah}}}}{f{AOh}}}AOh}{{BBnc}{{Bd{AOhBb}}}{{Dh{BFd{f{Cn{BFh{BFf}}}}{f{Cn{BFh{BFj}}}}}{{Df{{Bd{bBb}}}}}}}}{{{f{BFl}}{f{{An{Md}}}}dd}AOh}{{{f{BFl}}{Gf{{Oj{{Fn{Md}}{Fn{Nh}}}}{Oj{{Fn{On}}{Fn{Nh}}}}}}{f{AOh}}BFn}{{Bd{AOhBb}}}}{{{f{BFl}}{f{AOh}}{f{B`}}{f{B`}}BFn}{{Bd{AOhBb}}}}{{{f{Ah}}{f{Ah}}}Eh}{{{f{BFl}}{f{AOh}}{f{B`}}{f{B`}}BFnd{Cb{{f{{An{{f{Ah}}}}}}}}}{{Bd{AOhBb}}}}{{{f{BG`}}{f{{An{Nh}}}}Ih}AOh}0{{{f{BG`}}{f{{An{Nh}}}}}AOh}0{{{f{BGb}}{Cb{{Fn{{f{Ah}}}}}}{Cb{{f{Ah}}}}d}{{Bd{AOhBb}}}}{{BBnd}BBn}{{{BGd{c}}{Cb{{ADn{BGf}}}}}{{BGd{c}}}BGh}{{{f{B`}}}{{Bd{B`Bb}}}}{BGjBGj}{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{BGjBGj}}{{{f{AOb}}Gb{Cb{{f{AJj}}}}}{{Bd{GbBb}}}}0{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}1{{BH`c}BBn{{Hh{{An{BGj}}}}}}5`{{BGj{f{Ah}}}BGj}{{}BGj}{{BGjd}BGj}{c{{Bd{BGjBb}}}{{Hh{{An{BGj}}}}}}{{{f{{ADn{ce}}}}}{{f{e}}}{}BHb}{{BHdd}BHd}`{{{f{BHf}}}d}{{{f{BHh}}}d}11`{{BGjc}BGj{{AMl{BGj}}}}{{{ADn{BHf}}BHj}{{Bd{BBnBb}}}}76{{BGjcd}BGj{{AMl{BGj}}}}{{{f{CnAAb}}}b}{{{f{CnAAd}}}b}{{{f{CnAAb}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{CnAAd}}{Cb{c}}}b{}}{{{f{CnAAb}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAd}}c}b{}}{{{f{{AEh{}{{AEf{c}}}}}}g}{{AEh{}{{AEf{c}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{c}}}}}}Dj}}{{BH`c{ADn{B@n}}}BBn{{Dh{AOh}{{Df{{Bd{AOhBb}}}}}}HlHn}}{{BGjc{BHn{{ADn{BHl}}}}}BGj{{Dh{B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}}{{BGjBGjc{BHn{{ADn{BHl}}}}}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}}{{{f{BGj}}{f{Cnc}}f}{{Bd{BI`Bb}}}{{E`{{f{BGj}}f}{{Df{{Bd{BI`Bb}}}}}}}}{{{f{AEj}}{f{Dh}}}AEj}{{{f{AEj}}{f{Dh}}}{{l{c}}}Dd}{{BGjc{f{{An{BGj}}}}{BHn{{ADn{BHl}}}}}BGj{{Dh{{f{Cn{An{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}}{{BGjBIb{f{{An{BGj}}}}dd}BGj}{{ce{BHn{{ADn{BHl}}}}d}BGj{{Dh{{f{Cn{An{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}{{Hh{{An{BGj}}}}}}{{{f{{AEh{}{{AEf{c}}}}}}i{f{Cn{An{g}}}}}b{}{}{}{{Dh{{Cb{e}}{f{g}}}{{Df{g}}}}}}{{{f{{AEh{}{{AEf{c}}}}}}g}{{AEh{}{{AEf{c}}}}}{}{}{{Dh{e}{{Df{c}}}}Dj}}{{BGjBGjGbEf}BGj}{BCl{{ADn{Cf}}}}{{{f{BId}}}{{Cb{Fh}}}}{BIfBGj}{BIhBGj}{BGjBGj}3210{{{f{AEl}}Ej}{{l{El}}}}{{BGjEj}BGj}{{{f{BIj}}Ej}{{l{El}}}}{{cF`}BGj{{Hh{{An{BGj}}}}}}{{{f{AEl}}{f{{An{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{AEn}}}{{Bd{{l{El}}Bb}}}}6{{{f{BIj}}}{{Bd{{l{El}}Bb}}}}{cBGj{{AMl{BGj}}}}{{{f{BIl}}}{{f{{An{N`}}}}}}``{BGjBIf}{eAKd{}{{Gh{}{{Cd{c}}}}}}0{{ADde}AKf{}{{Gh{}{{Cd{c}}}}}}0`{{{f{Cn{BIn{c}}}}}{{Bd{BAhBb}}}BJ`}{{{f{BHf}}}{{f{ADf}}}}{{{f{BIj}}}{{f{ADf}}}}{{{f{BJb}}}{{f{ADf}}}}{{{f{BHh}}}{{f{ADf}}}}{{{f{BCl}}}{{f{ADf}}}}{{{f{CnBIj}}}{{f{CnADf}}}}{{{f{CnBCl}}}{{f{CnADf}}}}{{{f{BJd}}}{{f{{l{Ab}}}}}}{{{f{BJf}}{Cb{{f{Ah}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJf}}{Cb{{f{Ah}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJf}}{Cb{{f{Ah}}}}Jfdd{Cb{{f{Eh}}}}{f{{l{A`}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJf}}{Cb{{f{Ah}}}}Jfd{Cb{{f{Eh}}}}{f{{l{A`}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{{ADn{c}}}}}BJh{BJjNf}}{{{f{BJl}}}{{f{{l{j}}}}}}{{{f{{ADn{ce}}}}}{}NfBHb}{{{f{{ADn{c}}}}}MbBJn}{{{f{BK`}}}{{f{BGj}}}}{{{f{{ADn{ce}}}}}{{f{c}}}NfBHb}{{{f{AKh}}}{{f{Ef}}}}{{{f{BKb}}}{{f{B`}}}}{{{f{CnBIj}}}{{Bd{FhBb}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{{f{{An{c}}}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{BKd}}}{{f{{l{A`}}}}}}{{{Fn{BGj}}}BGj}{{{f{BJf}}{Cb{{f{Ah}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}{{{ADn{{An{{BKf{c}}}}e}}}{{ADn{{An{c}}e}}}{}BHb}{{{ADn{{BKf{c}}e}}}{{ADn{ce}}}{}BHb}{{{f{Ah}}}BGj}{{BGj{Cb{Md}}}BGj}{{{f{BKh}}}{{Bd{{l{A`}}Bb}}}}{{{f{BKh}}}{{l{A`}}}}{{{f{{Jb{JhJd}}}}{f{Jf}}{f{AJj}}}{{Jb{JnJd}}}}`{{{BGd{{Ch{BGh}}}}{Cb{{ADn{B@n}}}}}{{Bd{BKjBb}}}}{{{BKl{c}}{f{B@n}}}{{Bd{{BKn{c}}Bb}}}BL`}{{{BLb{c}}{f{B@n}}}{{Bd{{BLd{c}}Bb}}}BL`}{{{BLf{c}}Fh}{{Bd{BLhBb}}}BGh}{{{BLj{c}}{f{B@n}}}{{Bd{{BLl{c}}Bb}}}BL`}{{{f{Cn{BGd{c}}}}}{{Bd{BLnBb}}}BGh}`{BGjBM`}{{BGjBMbBGj}BGj}{{{f{BIj}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{c}}}{{f{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{ADn{ce}}}}}{{f{c}}}NfBHb}11111111111111{{{f{Cnc}}}{{f{Cne}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BBnMdcF`}BBn{{Hh{{An{BGj}}}}}}{BCl{{Ch{Cf}}}}`{BBnBBn}```{{{f{BMd}}{f{Ah}}}{{Bd{EhBb}}}}{{BMf{Fn{BGj}}}{{Bd{BGjBb}}}}{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{{f{BJb}}{f{Cn{An{B`}}}}}{{Bd{{Cb{B`}}Bb}}}}{{{f{BMh}}B`B`}{{Bd{B`Bb}}}}{{BMf{Fn{BGj}}}BGj}{{{f{BMj}}}b}{{BGjEf}BGj}{{{f{AF`}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{ALj}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{BIj}}{f{Ef}}}{{Bd{B`Bb}}}}{{BBn{BMl{{f{Ah}}EfNl}}d}BBn}4{{BBnEfd}BBn}4`{BGjBMn}{{{f{{ADn{c}}}}}{{Cb{{f{AIl}}}}}{AIlNf}}{BGjBGj}{{{f{BN`}}}{{Bd{B`Bb}}}}1`{{{f{BNb}}}{{Bd{{l{In}}Bb}}}}{{{f{BAh}}{f{BAh}}{Cb{{f{{An{Eh}}}}}}{f{Ah}}}{{Bd{bBb}}}}{{{f{B@n}}{f{B@n}}{Cb{{f{{An{Eh}}}}}}{f{Ah}}}{{Bd{bBb}}}}0``{{{f{BNd}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BIj}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BNd}}c}{{Bd{B`Bb}}}Af}{{{f{BIj}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{Fh}}}}}}}}``{{{f{BIj}}}{{f{{Fn{{Ch{Cf}}}}}}}}{{{f{CnBIj}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}}{{{f{B`}}{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BGjBGjBGj}BGj}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BGjBGj}BGj}10{{{f{BNf}}}BNf}{{{f{BAn}}}BAn}{{{f{BMj}}}BMj}{{{f{BBn}}}BBn}{{{f{BCd}}}BCd}{{{f{BH`}}}BH`}{{{f{BNh}}}BNh}{{{f{BHj}}}BHj}{{{f{AOb}}}AOb}{{{f{BNj}}}BNj}{{{f{BNl}}}BNl}{{{f{BNn}}}BNn}{{{f{BHh}}}BHh}{{{f{BO`}}}BO`}{{{f{BOb}}}BOb}{{{f{BOd}}}BOd}{{{f{BOf}}}BOf}{{{f{On}}}On}{{{f{Nh}}}Nh}{{{f{BOh}}}BOh}{{{f{BOj}}}BOj}{{{f{BOl}}}BOl}{{{f{BOn}}}BOn}{{{f{C@`}}}C@`}{{{f{C@b}}}C@b}{{{f{C@d}}}C@d}{{{f{C@f}}}C@f}{{{f{C@h}}}C@h}{{{f{C@j}}}C@j}{{{f{C@l}}}C@l}{{{f{C@n}}}C@n}{{{f{CA`}}}CA`}{{{f{CAb}}}CAb}{{{f{BFn}}}BFn}{{{f{CAd}}}CAd}{{{f{CAf}}}CAf}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{BK`}}}BK`}{{{f{BGj}}}BGj}{{{f{CCj}}}CCj}{{{f{BMb}}}BMb}{{{f{{BHn{c}}}}}{{BHn{c}}}ABf}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{BIb}}}BIb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{BMf}}}BMf}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{{ADn{ce}}}}}{{ADn{ce}}}Nf{BHbABf}}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{Nb}}}Nb}{{{f{BCh}}}BCh}{{{f{B@n}}}B@n}{{{f{BCl}}}BCl}{{{f{AMn}}}AMn}{{{f{BAh}}}BAh}{{{f{Mn}}}Mn}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{BIj}}}{{ADn{BIj}}}}{{{f{c}}{f{Cne}}}b{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CFd}}}{{Cb{{f{CFf}}}}}}````{{{f{AOb}}{f{AOb}}}AO`}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}AO`{CFhNf}BHb}{{{f{{An{BGj}}}}}BGj}{{BHdCAf}BHd}{{{f{CAf}}{f{CAj}}}d}`{{{f{{An{B`}}}}}{{Bd{B`Bb}}}}{{{f{Ah}}}BGj}{BBn{{Bd{AOhBb}}}}{c{{Bd{{Fn{AOh}}Bb}}}{{Hj{}{{Cd{BBn}}}}}}{AMfe{}{{AKd{c}}AIh}}0{{AMfADd}e{}{{AKf{c}}AIh}}0{{ABl{f{Ah}}}{{l{c}}}Dd}{{ABn{f{{l{c}}}}}{{l{c}}}Dd}10{{ABn{f{Ah}}Ef}{{l{c}}}Dd}0{BBn{{Bd{BMjBb}}}}{cBGj{{BC`{Eh}}}}{{{f{CEl}}Fh}CFj}``{{{f{BGb}}{Fn{{f{Ah}}}}{Cb{{f{Ah}}}}d}{{Bd{AOhBb}}}}`{{{f{c}}{f{e}}}AO`{}{}}0``{{{f{CC`}}}{{Bd{{ADn{B@n}}Bb}}}}{{cCEj}{{Bd{BBnBb}}}{{Hh{{An{BBn}}}}}}{{{f{BKh}}{f{{l{A`}}}}}{{l{A`}}}}{{ed}{{Bd{BGjBb}}}{{AMl{BGj}}ABf}{{Hh{{An{c}}}}}}{{{f{CFd}}{Fn{BBn}}}{{Bd{BBnBb}}}}{{{f{BNj}}{Fn{BBn}}}{{Bd{BBnBb}}}}44{e{{Bd{BGjBb}}}{{AMl{BGj}}ABf}{{Hh{{An{c}}}}}}{{c{f{Ah}}d}BGj{{Hh{{An{BGj}}}}}}{{BIfc}BGj{{AMl{BGj}}}}{{{f{CFl}}{f{{An{Al}}}}}{{l{Aj}}}}{{{f{BKh}}{f{Ah}}d}{{Bd{{l{Aj}}Bb}}}}{{BIhc}BGj{{AMl{BGj}}}}{{{f{B@n}}{f{Ah}}}d}{{{f{CFl}}{f{{l{Ab}}}}}{{l{Aj}}}}{{{f{BKh}}{f{{l{A`}}}}dd}{{Bd{{l{Aj}}Bb}}}}{{{f{BKh}}{f{Ah}}}{{Bd{{l{Aj}}Bb}}}}{{{f{Cf}}{f{ADd}}}{{Ch{Cf}}}}{{{f{B`}}Fh}{{Bd{{l{El}}Bb}}}}{BBnBBn}{BGjBGj}{{{f{BKh}}{f{Ah}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKh}}{f{{l{A`}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{CFn}}Al{Cb{Al}}{Cb{{f{BOn}}}}Ald}{{Bd{FhBb}}}}{{{ALd{Ah}}}Ef}{{{f{BFl}}{f{{An{Nh}}}}d}AOh}{{{f{CG`}}c}{{Ch{CGb}}}BL`}{{{f{CGd}}c}{{Ch{CGb}}}BL`}`{{BBnBBn}BBn}{{{f{CGf}}{f{AOh}}{Cb{{f{Ah}}}}{Cb{{Gf{GbFh}}}}}{{Bd{AOhBb}}}}{{{f{CGf}}{f{AOh}}{Cb{{Gf{GbFh}}}}d}{{Bd{{Gf{AOhAOh}}Bb}}}}{{{f{B`}}d}{{Bd{B`Bb}}}}{{BGjd}BGj}{{BGjced}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHnABf}{{Hh{{An{BGj}}}}}}212121{{ce}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHnABf}{{Hh{{An{BGj}}}}}}32{{CGhBGjFhd}BGj}`{{{f{BCl}}}{{f{ADd}}}}{{{f{AMn}}}{{f{ADd}}}}```{{BGjBGjAObBNn{Cb{Jf}}{Cb{Eh}}}BGj}`{CDdBGj}`11{AJhGb}00{{{f{CGj}}}{{l{Mf}}}}{{{f{CGl}}}{{l{Mf}}}}{{{f{BNb}}}{{Bd{{l{Mf}}Bb}}}}`{{{f{CGn}}}{{l{Jd}}}}{{{f{AOb}}}Gb}`{{{f{AOb}}}d}```{{}b}{cbBHb}{{}CG`}{{}CGd}{{}BAn}{{}BBn}{{}BCd}{{}BHj}{{}BNl}{{}BO`}{{}BOd}{{}BOh}{{}BOj}{{}BOl}{{}C@b}{{}C@d}{{}C@f}{{}C@j}{{}C@l}{{}C@n}{{}CAb}{{}BFn}{{}CAd}{{}CAf}{{}CAh}{{}CAn}{{}CBd}{{}CBf}{{}CBj}{{}CBn}{{}CC`}{{}BGj}{{}{{BHn{{ADn{BHl}}}}}}{{}{{BHn{{ADn{CH`}}}}}}{{}{{BHn{{ADn{BMh}}}}}}{{}CDd}{{}CDf}{{}CDj}{{}CDl}{{}CDn}{{}CE`}{{}CEd}{{}CEh}{{}{{ADn{c}}}CHb}{{}CEj}{{}Nb}{{}BCh}{{}B@n}{{}AMn}{{}BAh}{{}Mn}`{{}{{Oj{{Fn{On}}{Fn{Nh}}}}}}{Fh{{f{c}}}{}}0{{{f{{AJd{c}}}}}f{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BHn{c}}}}}f{}}222222222222222222{{{f{{ADn{ce}}}}}{{f{c}}}NfBHb}33333333333333{Fh{{f{Cnc}}}{}}0{{{f{Cn{AJd{c}}}}}{{f{Cn}}}{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CC`}}}{{Bd{EhBb}}}}{{{f{BBn}}}{{Bd{EhBb}}}}0001{{{f{{ADn{c}}}}}{{f{Ah}}}{AIlNf}}{{{f{AMn}}{f{CHd}}}{{Bd{CHfBb}}}}```{{{f{B`}}GbCHh}{{Bd{B`Bb}}}}{{BIhGbCHh}BGj}{{BGjGbCHh}BGj}{{{f{CC`}}}{{Bd{{`{B@l}}Bb}}}}`{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{BGjBGj}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}{{BGjc}BGj{{AMl{BGj}}}}{{{ADn{ADfc}}}{{Bd{{ADn{ec}}{ADn{ADfc}}}}}BHb{ADfHlHn}}{{{ADn{ADfc}}}{{ADn{ec}}}BHb{ADfHlHn}}{{{f{{ADn{ce}}}}}{{CHj{ce}}}Nf{ABfBHb}}{Fhb}0000000000000000000000{{{f{CnBMj}}}b}{{BBne}BBn{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}}2222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Cn{ADn{ce}}}}}bNfBHb}33333333333333{BGjBGj}{{BBn{Cb{{Fn{BGj}}}}}BBn}1{{{f{BIj}}}B`}{{{f{{Jb{JhJd}}}}{f{Jf}}{f{AJj}}}{{Jb{JnJd}}}}`{BGjCHl}{{{f{ALj}}}{{f{Ef}}}}{{{f{BIj}}}{{f{Ef}}}}`{{{f{Ef}}}BGj}{cBGj{{Hh{{An{Ef}}}}}}`{CDfBGj}``{{{f{c}}}e{}{{CI`{CHn}}}}0`{{{f{CFl}}{f{{An{Al}}}}}{{l{Aj}}}}{{{f{CFl}}{f{{l{Ab}}}}}{{l{Aj}}}}{{AOb{f{Ef}}{f{Ah}}}{{Bd{bBb}}}}{{AOb{Cb{{f{Ah}}}}{f{Ah}}}{{Bd{bBb}}}}`{{{f{BNf}}{f{BNf}}}d}{{{f{BAn}}{f{BAn}}}d}{{{f{BCd}}{f{BCd}}}d}{{{f{AOb}}{f{AOb}}}d}{{{f{BNn}}{f{BNn}}}d}{{{f{BOb}}{f{BOb}}}d}{{{f{BOd}}{f{BOd}}}d}{{{f{On}}{f{On}}}d}{{{f{BOh}}{f{BOh}}}d}{{{f{BOj}}{f{BOj}}}d}{{{f{BOl}}{f{BOl}}}d}{{{f{BOn}}{f{BOn}}}d}{{{f{C@`}}{f{C@`}}}d}{{{f{C@b}}{f{C@b}}}d}{{{f{C@d}}{f{C@d}}}d}{{{f{C@f}}{f{C@f}}}d}{{{f{C@h}}{f{C@h}}}d}{{{f{C@j}}{f{C@j}}}d}{{{f{C@l}}{f{C@l}}}d}{{{f{C@n}}{f{C@n}}}d}{{{f{CA`}}{f{CA`}}}d}{{{f{CAb}}{f{CAb}}}d}{{{f{BFn}}{f{BFn}}}d}{{{f{CAd}}{f{CAd}}}d}{{{f{CAf}}{f{CAf}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{BK`}}{f{BK`}}}d}{{BGjc}BGj{{AMl{BGj}}}}{{{f{BGj}}{f{BGj}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{BMb}}{f{BMb}}}d}{{{f{{BHn{B`}}}}{f{{BHn{B`}}}}}d}{{{f{{BHn{{ADn{c}}}}}}{f{{BHn{{ADn{c}}}}}}}dNf}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{BIb}}{f{BIb}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CIbNf}BHb}{{{f{{ADn{CId}}}}{f{CId}}}d}{{{f{{ADn{Cf}}}}{f{Cf}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{Nb}}{f{Nb}}}d}{{{f{BCh}}{f{BCh}}}d}{{{f{B@n}}{f{B@n}}}d}{{{f{BCl}}{f{BCl}}}d}{{{f{BCl}}{f{{f{Cf}}}}}d}{{{f{AMn}}{f{AMn}}}d}{{{f{BAh}}{f{BAh}}}d}{{{f{Mn}}{f{Mn}}}d}{{{f{CFb}}{f{CFb}}}d}{{BGjc}BGj{{AMl{BGj}}}}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CIfBGjd}BGj}``{{BGjc}BGj{{BC`{Eh}}}}{{BGjc}BGj{{Hh{{An{Ef}}}}}}{{{f{Cnc}}e}{{Bd{{f{Cng}}B@b}}}{}CIh{}}{{{f{BBn}}d}{{Bd{EhBb}}}}{{BBne}BBn{{AMl{BGj}}ABf}{{Hh{{An{c}}}}}}{{{f{AFf}}}{{Bd{B`Bb}}}}{BGjBGj}{{{f{AFf}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}`{{BGjBGjBGj}BGj}{{{f{CG`}}}CFn}{{{f{CGd}}}CFn}{{{f{BKh}}{f{{l{A`}}}}Fh}{{Bd{{l{A`}}Bb}}}}{Nh{{Gf{MdMd}}}}{{{f{BKh}}{f{Ah}}}{{Bd{{l{j}}Bb}}}}{{{f{BKh}}{f{{l{A`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BKh}}{f{Ah}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{AAb}}}d}``{{{f{BMj}}}{{Cb{{Bd{AOhBb}}}}}}{{BBnFh}{{Bd{AOhBb}}}}{{{f{BMj}}}{{Bd{AOhBb}}}}{{{f{AAb}}}{{f{N`}}}}{{{f{BIj}}}{{Dl{N`}}}}{{CIjGb}BGj}{{CIj{f{Ah}}}BGj}{{CIj{f{{An{c}}}}}BGj{{Hh{Ah}}}}{{{f{BCl}}}{{f{{An{AMn}}}}}}```{{BBnc}BBn{{AMl{BGj}}}}{{BGjc}BGj{{AMl{BGj}}}}`10{{BGjAFb}BGj}{{{f{AFh}}c}{{Bd{AFhBb}}}{}}{{{f{AFj}}{f{{l{Aj}}}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{BIj}}{f{{l{Aj}}}}}{{Bd{B`Bb}}}}{{BBnBGj}BBn}5{{BAhc}BAh{{Dh{Fh{f{AMn}}}{{Df{d}}}}}}{{{f{BKh}}{f{Ah}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKh}}{f{{l{A`}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BKh}}{f{Ah}}}{{Bd{{l{El}}Bb}}}}{CIl{{Bd{AOhBb}}}}{{{f{CnCGb}}{f{CnAOh}}}{{Bd{bBb}}}}{AAd{{l{c}}}Dd}{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{BHdBBn}{{{BGd{c}}}{{Bd{AOhBb}}}BGh}{{{f{Cn{BKl{c}}}}{f{CnAOh}}}{{Bd{bBb}}}BL`}{{{CIn{c}}}{{Bd{AOhBb}}}BGh}{{{BIn{c}}}{{Bd{AOhBb}}}BJ`}{{{f{Cn{CJ`{c}}}}{f{CnAOh}}}{{Bd{bBb}}}BL`}{CFd{{Bd{BBnBb}}}}{{{f{Cn{BLb{c}}}}{f{CnAOh}}}{{Bd{bBb}}}BL`}{{{f{Cn{CJb{c}}}}{f{CnAOh}}}{{Bd{bBb}}}BL`}{{{CJd{c}}}{{Bd{AOhBb}}}BGh}{BNj{{Bd{BBnBb}}}}{{{CJf{c}}}{{Bd{AOhBb}}}BGh}{{{BLf{c}}}{{Bd{AOhBb}}}BGh}{{{BLj{c}}{f{CnAOh}}}{{Bd{IlBb}}}BL`}{{{f{CnAAb}}}{{l{j}}}}84{BHh{{Bd{BBnBb}}}}{{{CIn{c}}{Cb{{ADn{BGf}}}}d}{{Bd{AOhBb}}}BGh}{{{f{BLh}}Fh}d}{{}BGj}{BBnBBn}{BIhBGj}{BGjBGj}`0``{{}{{BHn{{ADn{BHl}}}}}}{{{f{BN`}}}{{Bd{B`Bb}}}}2{{BGjBGj}BGj}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{Cn{ADn{CJh}}}}}{{Bd{bB@b}}}}{{{f{BJb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BNf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BCd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BNh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AOb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{BNn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{On}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Nh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@b}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@d}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@f}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@h}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@j}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@l}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@n}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BHf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CJj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CA`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BFn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAj}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CAl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAn}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CB`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BGj}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CCj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{{BHn{c}}}}{f{CnGj}}}{{Bd{bGl}}}{}}{{{f{CCl}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CCn}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CD`}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CDb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{BIb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CDd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CE`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{ADn{ce}}}}{f{CnGj}}}{{Bd{bGl}}}{B@lNf}BHb}{{{f{{ADn{ce}}}}{f{CnGj}}}{{Bd{bGl}}}{ADhNf}BHb}{{{f{{ADn{ce}}}}{f{CnGj}}}{{Bd{bGl}}}NfBHb}{{{f{CEj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CHf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Nb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BCh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{B@n}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BCl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AMn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Mn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CF`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CFb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Ah}}BDb}Eh}```{{BGjce}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHnABf}{{Hh{{An{BGj}}}}}}{{BHdd}BHd}``{{{f{Ah}}c}{{Bd{BGjBb}}}{{Hh{{An{BGj}}}}}}{{BGj{Cb{Md}}}BGj}{cc{}}00000000000000000000000{CC`BBn}{BH`BBn}22222222222222222{MdOn}33333333{{{f{Ah}}}BOn}444444444444{CAjBFn}5555555555555555555555{IlBGj}{GbBGj}{MdBGj}{dBGj}{MhBGj}{BK`BGj}{{{f{Ah}}}BGj}{LfBGj}{AlBGj}{LbBGj}{MbBGj}{IjBGj}{cc{}}{LjBGj}11{BIb{{BHn{{ADn{BJb}}}}}}{CJl{{BHn{{ADn{BJb}}}}}}{CJn{{BHn{{ADn{BJb}}}}}}{CK`{{BHn{{ADn{BJb}}}}}}{CKb{{BHn{{ADn{BJb}}}}}}{CKd{{BHn{{ADn{BJb}}}}}}{CCn{{BHn{{ADn{BJb}}}}}}{CKf{{BHn{{ADn{BJb}}}}}}{CCl{{BHn{{ADn{BJb}}}}}}{CDb{{BHn{{ADn{BJb}}}}}};;;;;{CKbBIb}<{CClBIb}{CDbBIb}{CCnBIb}?????{CE`CDn}{cc{}}000000{{{Dl{c}}}{{ADn{c}}}{CKhNf}}{CKjc{}}{{{f{{An{c}}}}}{{ADn{{An{c}}}}}ABf}{c{{ADn{c}}}{}}{{{Ob{c}}}{{ADn{{An{c}}}}}{}}{{{Fn{ce}}}{{ADn{{An{c}}e}}}{}{BHbABf}}{{{ADn{Ah}}}{{ADn{{An{Al}}}}}}{{{f{CKl}}}{{ADn{CKl}}}}{CKn{{ADn{CL`}}}}9{CFn{{ADn{CKl}}}}{{{Ch{ce}}}{{ADn{ce}}}NfBHb}{CLb{{ADn{CLd}}}}{Eh{{ADn{Ah}}}}{{{f{Ah}}}{{ADn{Ah}}}}{{{f{CL`}}}{{ADn{CL`}}}}{{{f{CLd}}}{{ADn{CLd}}}}{cc{}}{CLfCHf}111111{{{f{BAh}}}B@n}{{{f{{ADn{BAh}}}}}B@n}{BAhB@n}{{{f{BAj}}}B@n}{{{f{{An{B`}}}}}B@n}{{{ADn{BAh}}}B@n}{CLhBCl}8{CLjBCl}99{{{Fn{AMn}}}BAh}::::{{c{Cb{Hb}}}CLl{}}{{{CLn{Gb}}{CLn{Al}}{Cb{Hb}}}CM`}{{{CLn{Gb}}{CLn{Al}}{Cb{Hb}}}CMb}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}00{c{{AJd{{l{e}}}}}{{Gh{}{{Cd{}}}}}n}{c{{AJd{{l{Aj}}}}}{{Gh{}{{Cd{d}}}}}}{e{{ADn{{An{c}}}}}{}{{Gh{}{{Cd{c}}}}}}{eB@n{{AMl{N`}}}{{Gh{}{{Cd{c}}}}}}{{gFh}{{CMd{Gb}}}Hh{{Gh{}{{Cd{{Cb{c}}}}}}}{{Gh{}{{Cd{{Cb{e}}}}}}}}0{e{{CMd{Gb}}}{{Gh{}{{Cd{{Cb{d}}}}}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{{{f{Ah}}e}ABj{}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{gADd}{{CMd{Gb}}}BEh{{Gh{}{{Cd{{Cb{c}}}}}}}{{Gh{}{{Cd{{Cb{e}}}}}}}}763{{{f{Ah}}e}ABj{}{{Cj{}{{Cd{c}}}}}}{c{{AJd{{l{e}}}}}{{Hj{}{{Cd{}}}}}n}{e{{ADn{{An{c}}}}}Hl{{Hj{}{{Cd{c}}}}}}`{c{{Bd{{CJf{CJh}}Bb}}}{{AMl{CFn}}}}{{}{{ADn{c}}}Nf}{c{{ADn{ec}}}BHbNf}{{{f{Ah}}{f{{An{c}}}}}ABj{}}{{{f{Ah}}{f{{An{{Cb{c}}}}}}}ABj{}}{{{f{Ah}}}{{Bd{CMf}}}}{c{{AJd{{l{Aj}}}}}{{Ib{}{{Cd{d}}}}}}{c{{AJd{{l{e}}}}}{{Ib{}{{Cd{}}}}}n}{Ef{{BHn{{ADn{BHl}}}}}}{{{f{Ah}}c}CMh{}}{{{Fn{c}}ADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{Fn{c}}ADd}{{AIh{}{{AKj{e}}{AKl{c}}{AKn{g}}}}}{AL`{ALb{e}}}ABf{{G`{}{{Cd{e}}}}IbHlHn}}`{{{f{Ah}}cFh}AFl{}}{{FhcADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{BBnBBncc}BBn{{AMl{BGj}}}}{{{f{CMj}}{f{AOh}}ee}{{Bd{AOhBb}}}{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}}{{{f{Ah}}Fh}AFn}{{FhADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}``{{BGjc{BHn{{ADn{BHl}}}}CMl}BGj{{Dh{B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}}`{{BGjc}BGj{{AMl{BGj}}}}{{BGjFhFh}BGj}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CMnNf}BHb}{{{f{BIj}}Fh}{{Bd{IdBb}}}}{{BIfBGjd}BGj}{{BIhBGjd}BGj}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}6{{{f{B@n}}{f{Ah}}}{{Cb{{f{Ef}}}}}}{{{f{AG`}}Fh}{{Bd{IdBb}}}}{{{f{ALj}}Fh}{{Bd{IdBb}}}}{{{f{AG`}}Fh}Id}{{{f{ALj}}Fh}Id}{{{f{B@n}}Fh}{{Cb{{Gf{{f{{ANj{ANh}}}}{f{Ef}}}}}}}}{{{f{CnB@n}}Fh}{{Cb{{Gf{{f{Cn{ANj{ANh}}}}{f{CnEf}}}}}}}}{BMnBGj}{{{f{BBn}}}CEd}{{{f{CEf}}}Ef}{{}Ef}{{{f{BOf}}GbBNn{Cb{{f{AJj}}}}}{{Bd{BNhBb}}}}00{{{f{CH`}}{f{B@n}}CN`{f{N`}}{f{N`}}}{{Cb{N`}}}}{{{f{BHl}}{f{B@n}}CN`{f{{An{N`}}}}}N`}{{{f{B@n}}{f{Ah}}}{{Cb{N`}}}}{{{f{ADd}}}{{f{{An{AMn}}}}}}{{{f{BIl}}}Fh}{{{f{B@n}}{f{Ah}}}{{Cb{{Gf{Fh{f{{ANj{ANh}}}}{f{Ef}}}}}}}}{{{f{CNb}}}B`}{{{f{Cn{BLf{c}}}}}{{Bd{{f{{ADn{CEl}}}}Bb}}}BGh}{{{f{Cn{ADn{ce}}}}}{{Cb{{f{Cnc}}}}}NfBHb}{{{f{Cn{ADn{ce}}}}}{{f{Cnc}}}NfBHb}{{{f{CNd}}}{{Fn{{f{Ah}}}}}}{{{f{B@n}}}{{Fn{{f{Ah}}}}}}{{{f{BAh}}}{{Fn{{f{Ah}}}}}}{{{f{BIj}}Fh}{{Cb{{f{If}}}}}}{{{f{BIj}}FhFh}{{Cb{{f{If}}}}}}{{{f{BJb}}}{{Cb{{BHn{{ADn{BHl}}}}}}}}{{{f{BOf}}BNhBNnJf{Cb{{f{AJj}}}}BOd}{{Bd{CNfBb}}}}{{{f{BOh}}}{{ADn{BOj}}}}{{{f{Cnc}}}{{Bd{CNhBb}}}{BJ`BGhNf}}{{{f{CJj}}{f{B@n}}}{{Bd{{ADn{B@n}}Bb}}}}{{cFh}{{Fn{{Gf{FhFh}}}}}{{Cj{}{{Cd{Fh}}}}}}{{{f{ANl}}Fh}Id}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{BIj}}Fh}Id}{{{f{CFd}}}d}{{{f{BNj}}}d}`{{BBne}BH`{{AMl{BGj}}ABf}{{Hh{{An{c}}}}}}{{{f{CNj}}{Fn{B`}}{f{BAn}}}{{Bd{{Gf{B`{Fn{B`}}Bh}}Bb}}}}{{BBnBGjcBAn}BH`{{Hh{{An{BGj}}}}}}2{{AObAOb{f{{An{Gb}}}}BNnJf{Cb{AJj}}}{{Bd{{Fn{{Ob{Md}}}}Bb}}}}{{BOf{f{{An{Gb}}}}BNnJf{f{{Cb{Eh}}}}ddBOd}{{Gf{{Fn{{Ob{Md}}}}{Fn{Gb}}{Fn{Gb}}}}}}{{{f{BDn}}dd}{{Bd{BhBb}}}}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{BGjc}BGj{{AMl{BGj}}}}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CMnNf}BHb}21`{{{f{BIj}}}d}{{{f{CNl}}}d}{{{f{BAn}}{f{Cnc}}}bAGb}{{{f{BCd}}{f{Cnc}}}bAGb}{{{f{AOb}}{f{Cnc}}}bAGb}{{{f{BNn}}{f{Cnc}}}bAGb}{{{f{BOb}}{f{Cnc}}}bAGb}{{{f{BOd}}{f{Cnc}}}bAGb}{{{f{BOh}}{f{Cnc}}}bAGb}{{{f{BOj}}{f{Cnc}}}bAGb}{{{f{BOl}}{f{Cnc}}}bAGb}{{{f{BOn}}{f{Cnc}}}bAGb}{{{f{C@`}}{f{Cnc}}}bAGb}{{{f{C@b}}{f{Cnc}}}bAGb}{{{f{C@d}}{f{Cnc}}}bAGb}{{{f{C@f}}{f{Cnc}}}bAGb}{{{f{C@h}}{f{Cnc}}}bAGb}{{{f{C@j}}{f{Cnc}}}bAGb}{{{f{C@l}}{f{Cnc}}}bAGb}{{{f{C@n}}{f{Cnc}}}bAGb}{{{f{CA`}}{f{Cnc}}}bAGb}{{{f{CAb}}{f{Cnc}}}bAGb}{{{f{BFn}}{f{Cnc}}}bAGb}{{{f{CAd}}{f{Cnc}}}bAGb}{{{f{CAf}}{f{Cnc}}}bAGb}{{{f{CAh}}{f{Cnc}}}bAGb}{{{f{CAj}}{f{Cnc}}}bAGb}{{{f{CAl}}{f{Cnc}}}bAGb}{{{f{CAn}}{f{Cnc}}}bAGb}{{{f{CB`}}{f{Cnc}}}bAGb}{{{f{CBb}}{f{Cnc}}}bAGb}{{{f{CBd}}{f{Cnc}}}bAGb}{{{f{CBf}}{f{Cnc}}}bAGb}{{{f{CBh}}{f{Cnc}}}bAGb}{{{f{CBj}}{f{Cnc}}}bAGb}{{{f{CBl}}{f{Cnc}}}bAGb}{{{f{CBn}}{f{Cnc}}}bAGb}{{{f{BK`}}{f{Cnc}}}bAGb}{{{f{BGj}}{f{Cnc}}}bAGb}{{{f{CCj}}{f{Cnc}}}bAGb}{{{f{BMb}}{f{Cnc}}}bAGb}{{{f{CCl}}{f{Cnc}}}bAGb}{{{f{CCn}}{f{Cnc}}}bAGb}{{{f{CD`}}{f{Cnc}}}bAGb}{{{f{CDb}}{f{Cnc}}}bAGb}{{{f{BIb}}{f{Cnc}}}bAGb}{{{f{CDh}}{f{Cnc}}}bAGb}{{{f{CDj}}{f{Cnc}}}bAGb}{{{f{CDl}}{f{Cnc}}}bAGb}{{{f{CDn}}{f{Cnc}}}bAGb}{{{f{CE`}}{f{Cnc}}}bAGb}{{{f{CEb}}{f{Cnc}}}bAGb}{{{f{CEf}}{f{Cnc}}}bAGb}{{{f{CEh}}{f{Cnc}}}bAGb}{{{f{{ADn{ce}}}}{f{Cng}}}b{CNnNf}BHbAGb}{{{f{CEj}}{f{Cnc}}}bAGb}{{{f{BCh}}{f{Cnc}}}bAGb}{{{f{B@n}}{f{Cnc}}}bAGb}{{{f{AMn}}{f{Cnc}}}bAGb}{{{f{Mn}}{f{Cnc}}}bAGb}{{{f{CFb}}{f{Cnc}}}bAGb}{{{f{CO`}}{f{B`}}CAnd}{{Bd{{Gf{{Gf{{Fn{Md}}{Fn{Md}}}}d}}Bb}}}}{{{f{CO`}}{f{B`}}CAnd}{{Bd{{Gf{{AJ`{Md}}{AJ`{Md}}}}Bb}}}}{{BH`{Cb{Fh}}}BBn}{{BIhBGj}BGj}{{BGj{Cb{Fh}}}BGj}{{{f{BKh}}}{{Bd{{l{A`}}Bb}}}}{{{f{BKh}}}{{l{A`}}}}`{{{f{{An{{f{{l{A`}}}}}}}}{f{Ah}}d}{{Bd{{l{A`}}Bb}}}}{{{f{COb}}}{{l{Mf}}}}{{{f{CGl}}}{{l{Mf}}}}{{{f{BNb}}}{{Bd{{l{Mf}}Bb}}}}`{{{f{CGn}}}{{l{Jd}}}}`{{BHdCAj}BHd}``{{{f{On}}}Md}`{{{f{{Jb{JhJd}}}}{f{{l{A`}}}}CFb{Fj{Gb}{{Df{AJh}}}}{Fj{AJh}{{Df{Gb}}}}{f{AJj}}{f{AJj}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{Ah}}}}{Fj{Gb}{{Df{AJh}}}}{Fj{AJh}{{Df{Gb}}}}{f{AJj}}{f{AJj}}}{{Bd{{l{Jd}}Bb}}}}{{{f{CNb}}}{{Bd{{l{j}}Bb}}}}{BGjBGj}{{{f{AJh}}}d}{{{BKl{c}}d}{{BKl{c}}}BL`}``0`{{}b}{cb{ABfBHb}}{cBGj{{Hh{{An{Gb}}}}}}``{{{f{CNd}}{f{Ah}}}{{Cb{Fh}}}}{{{f{B@n}}{f{Ah}}}{{Cb{Fh}}}}{{{f{BAh}}{f{Ah}}}{{Cb{Fh}}}}{{{f{{An{Md}}}}}{{`{{Cj{}{{Cd{Fh}}}}}}}}{{{f{CNh}}Al{Cb{Fh}}d{Cb{{f{B@n}}}}FhFh{Cb{{f{BOn}}}}{Cb{Al}}Al{Cb{{f{C@`}}}}dd{f{Cn{Cb{Fh}}}}d}{{Bd{{Gf{B@nFhFh}}Bb}}}}{{{CJd{c}}{Cb{Fh}}}{{CJd{c}}}BGh}{{{CJf{c}}{Cb{Fh}}}{{CJf{c}}}BGh}``{{}Fh}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{CnAAb}}}{{Ch{Cf}}}}{{BBnBBncc}BBn{{AMl{BGj}}}}{{{f{CMj}}{f{AOh}}ee}{{Bd{AOhBb}}}{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}}{{{f{CnNh}}}{{f{CnIl}}}}`{{{f{CnB@n}}Fh{ANj{ANh}}Ef}{{Bd{{Cb{Ef}}Bb}}}}{{BGjBGjGbEf}BGj}{{BGjBGjBGj}BGj}``{{{f{B`}}CBh}B`}{{BGjCBh}BGj}`{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{BGjBGj}BGj}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BCl{{Gf{{Fn{AMn}}{Fn{{Ch{Cf}}}}{Cb{Hb}}}}}}{{{AJd{c}}}c{}}{{{ADn{ce}}}{{Cb{c}}}{}BHb}33{{{f{BGj}}}}{B@n}{{{f{BCl}}}}{COdBIh}{BIhBIh}{{{ADn{ce}}}{}NfBHb}{{BOhc}{{BGd{c}}}BGh}{BA`B`}{{{ADn{BIj}}}B`}{CElCOf}{BC`{{Fn{c}}}{}}{c{{Fn{Eh}}}{}}{c{{Fn{{ANj{ANh}}}}}{}}{{{f{CAj}}}d}{{{f{B`}}{f{B`}}{f{B`}}CBj}{{Bd{{l{Aj}}Bb}}}}{{BGjccCBj}BGj{{AMl{BGj}}}}{cd{{Hh{CKl}}}}{{{f{{An{Al}}}}}d}{{{f{AOb}}{Cb{{f{Ah}}}}}d}{{{f{BIj}}}d}{{{f{B@n}}}d}{{{f{BAh}}}d}{{{f{BLh}}}d}{BGjBGj}{{{f{B`}}}{{Bd{{l{Aj}}Bb}}}}{{{f{AGd}}}{{Bd{{l{Aj}}Bb}}}}2{{{f{AOb}}}d}{{{f{B`}}{f{B`}}}{{Bd{{l{Aj}}Bb}}}}{{BGjc}BGj{{AMl{BGj}}}}54{{{f{AGf}}}{{Bd{{l{Aj}}Bb}}}}6{{{f{CGj}}}{{l{Aj}}}}{{{f{CGl}}}{{l{Aj}}}}{{{f{BNb}}}{{Bd{{l{Aj}}Bb}}}}999{{{f{BIj}}}{{l{Aj}}}}::0{{{f{Nh}}}d};{{{f{On}}}d}`{{{f{B`}}}d}{{{f{{ADn{CJh}}}}}d}{{}d}{{{f{COh}}Ej}{{Bd{dBb}}}}{{{f{c}}}d{}}0{{{f{CAn}}{f{CAj}}}{{Bd{bBb}}}}4?{{{f{CGj}}}{{l{In}}}}{{{f{CGl}}}{{l{In}}}}{{{f{BNb}}}{{Bd{{l{In}}Bb}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{ADl{cgADj}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{B@n}}}{{`{{Cj{}{{Cd{{Gf{{f{{ANj{ANh}}}}{f{Ef}}}}}}}}}}}}{{{f{BCl}}}{{ADl{{Fn{{Ch{CId}}}}COjADj}}}}{{{f{B@n}}}{{`{K`}}}}{{{f{CnB@n}}}{{`{K`}}}}11{{{f{CFd}}}{{Bd{{Cb{{Ch{Cj}}}}Bb}}}}{{BIfBGjd}BGj}{{BBnBBnccBFn}BBn{{Hh{{An{BGj}}}}}}{{BIhBGjd}BGj}{{{f{CMj}}{f{AOh}}eeBFn}{{Bd{AOhBb}}}{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}}{{{f{COl}}{f{AOh}}{f{Ah}}{f{Ah}}CBf{Cb{Id}}{Cb{Eh}}}{{Bd{AOhBb}}}}{{{f{COn}}{f{AOh}}{f{Ah}}{f{Ah}}eeCBf{Cb{Id}}}{{Bd{AOhBb}}}{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}}{BBnBHd}{{{f{D@`}}{f{Ah}}d}{{Bd{{l{A`}}Bb}}}}{{{f{D@`}}{f{{l{A`}}}}d}{{Bd{{l{A`}}Bb}}}}{{BHdd}BHd}`{CIjBGj}{D@bBGj}{{{f{CEl}}}{{f{{Cb{{Fn{D@d}}}}}}}}``{{}BGj}{BBnBBn}{BIhBGj}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{BGjBGj}{D@fBBn}4{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CMnNf}BHb}`{{BBnBBncc}BBn{{AMl{BGj}}}}{{{f{CMj}}{f{AOh}}ee}{{Bd{AOhBb}}}{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}}{{BHdc}BHd{{Hh{{An{BGj}}}}}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}e{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}<{{{f{BIj}}}Fh};9{{{f{B@n}}}Fh}{{{f{BCl}}}Fh}{{{f{BAh}}}Fh}{{BBnMd}BBn}{{{f{BIj}}Fh}B`}{{{f{BLh}}}d}`{BGjBIh}{cBGjD@h}{D@hBGj}{D@jBGj}{CEfBGj}{{BGjc}BGj{{AMl{BGj}}}}0``{{BHhd}BHh}{{{CJf{c}}d}{{CJf{c}}}BGh}```{BGjBGj}{{{f{D@`}}}{{l{El}}}}0{{{f{D@`}}{f{{An{B`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{D@`}}GbCHh}{{Bd{{l{j}}Bb}}}}{{{f{D@`}}Gbd}{{Bd{B`Bb}}}}{{{f{D@`}}{f{{l{A`}}}}d}{{Bd{{l{A`}}Bb}}}}4{{{f{D@`}}}{{Bd{B`Bb}}}}{{{f{D@`}}}B`}01{{{f{D@`}}}{{Bd{{l{El}}Bb}}}}{{{f{D@`}}}{{l{j}}}}{{{f{D@`}}{f{B`}}}{{Bd{{l{j}}Bb}}}}{{{f{D@`}}GbFh}{{l{j}}}}{{{f{D@`}}Ej}{{Bd{{l{j}}Bb}}}}{{{f{D@`}}Al}B`}7{{{f{D@`}}}{{Bd{{l{j}}Bb}}}}01{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{BGjc}BGj{{AMl{BGj}}}}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CMnNf}BHb}21``````{{{f{AK`}}{f{AK`}}}{{Bd{{Gf{AK`AK`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Cn{ADn{ce}}}}}{{f{Cnc}}}ABf{BHbABf}}{{BBncCEd{Cb{{ADn{CJj}}}}{Cb{{f{Ah}}}}}BBn{{Dh{AOh}{{Df{{Bd{AOhBb}}}}}}HlHn}}{{D@bc}BGj{{Dh{{f{Ah}}}{{Df{{Bd{EhBb}}}}}}HlHn}}{{BGjc{BHn{{ADn{BHl}}}}}BGj{{Dh{B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}}{{BGjBGjc{BHn{{ADn{BHl}}}}}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}}{{BGj{f{Cnc}}{f{Cn}}}{{Bd{BGjBb}}}{{E`{BGj{f{Cn}}}{{Df{{Bd{BGjBb}}}}}}}}{{{f{BIl}}{Cb{{f{Eh}}}}}{{Bd{N`Bb}}}}{{{f{BIl}}c}{{Bd{N`Bb}}}{{A@`{{f{Ef}}}{{Df{Ef}}}}}}{c{{BHn{{ADn{BHl}}}}}{{Dh{{f{Ef}}}{{Df{Ef}}}}HlHn}}{c{{BHn{{ADn{BHl}}}}}{{Dh{{f{{An{{f{Ef}}}}}}}{{Df{Ef}}}}HlHn}}{{BGjc}BGj{{E`{BGj}{{Df{BGj}}}}}}{c{{BHn{{ADn{BHl}}}}}{{Dh{{f{N`}}}{{Df{N`}}}}HlHn}}{{D@b{ADn{Dh}}}BGj}{c{{BHn{{ADn{BHl}}}}}{{Dh{{f{{An{N`}}}}}{{Df{N`}}}}HlHn}}:{{ce{BHn{{ADn{BHl}}}}}BGj{{Dh{{f{Cn{An{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}{{Hh{{An{BGj}}}}}}{{BGjc{f{{An{BGj}}}}{BHn{{ADn{BHl}}}}}BGj{{Dh{{f{Cn{An{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}}{{BGjBIb{f{{An{BGj}}}}dd}BGj}2{{{f{BIl}}}{{Bd{N`Bb}}}}{{BOhc}BOh{{Dh{BOj}{{Df{BOj}}}}}}1111{CEfCEf}{{{Cb{{f{{An{Fh}}}}}}{f{BAh}}{Cb{{f{{An{B`}}}}}}{Cb{{f{D@l}}}}}AOh}{{{Cb{{f{{An{Eh}}}}}}{f{B@n}}{Cb{{f{{An{B`}}}}}}d}{{Cb{{Fn{Fh}}}}}}{{{f{Ah}}}BGj}{BIfBGj}{BBnBBn}{BIhBGj}{{{f{AGh}}}{{Cb{c}}}{}}{BGjBGj}{{{f{D@n}}}L`}{{{f{BIj}}}{{Bd{L`Bb}}}}`754{{{f{AGh}}}{{Cb{Lb}}}}3{{{f{BIj}}}{{Cb{Lb}}}}9876{{{f{AGj}}}{{Cb{c}}}{}}51{{{f{DA`}}}L`}4{{BBnBCb}BBn}``{{{CIn{c}}{Cb{CFn}}}{{CIn{c}}}BGh}{{{f{CnB@n}}B@n}b}{{{f{Ef}}{f{Ef}}}{{Bd{EfBb}}}}{{{f{CnB@n}}{f{B@n}}}b}````{{{f{CGn}}}{{l{Jd}}}}`{{{f{BNb}}}{{Bd{{l{In}}Bb}}}}1`{{{f{Ah}}}BGj}{BIfBGj}{BBnBBn}{BIhBGj}{{{f{AGh}}}{{Cb{c}}}{}}{BGjBGj}{{{f{AGh}}}{{Cb{{Gf{cc}}}}}{}}```{{{f{D@n}}}L`}{{{f{BIj}}}{{Bd{L`Bb}}}}`{{{f{COb}}}{{l{Mf}}}}{{{f{CGl}}}{{l{Mf}}}}{{{f{BNb}}}{{Bd{{l{Mf}}Bb}}}}`=```6{{{f{CGj}}}{{l{Mf}}}}21`{{{f{DAb}}{Cb{{f{AJj}}}}}{{Bd{DAbBb}}}}{{{f{DAd}}{Cb{{f{AJj}}}}}{{Bd{DAdBb}}}}{{{f{AOb}}}Gb}{{{f{AOb}}}d}{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{AObGb}AOb}{{BGjBGj}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{BIj}}}Fh}{{{f{CFd}}}{{Cb{Fh}}}}{{{f{BNj}}}{{Cb{Fh}}}}{{{f{BHh}}}{{Cb{Fh}}}}`````{{{BKl{c}}Fh}{{BKl{c}}}BL`}`{BIfBGj}{BIhBGj}{{{f{AEn}}}{{Bd{FhBb}}}}{BGjBGj}{{{f{BIj}}}{{Bd{FhBb}}}}{{{f{BIj}}}{{f{Ah}}}}{BGjD@b}````33`{{{f{COb}}}{{l{In}}}}{{{f{CGl}}}{{l{In}}}}{{{f{BNb}}}{{Bd{{l{In}}Bb}}}}{{{f{CGn}}}{{l{Jd}}}}{{{f{AOb}}}Gb}`{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CIbNf}BHb}{{{f{CAn}}}d}{BGj}{{{f{B`}}}{{Bd{B`Bb}}}}0{{{f{AOb}}}d}{{DAfFh}{{Cb{Fh}}}}{{BGjc}BGj{{AMl{BGj}}}}0{{{f{BIl}}}{{Bd{N`Bb}}}}{{}c{}}{cCIlBJ`}{cCGbBL`}2{{{f{Ah}}c}DAh{}}{c{{AJd{c}}}{}}{BBnBHd}{c{{BGd{c}}}BGh}{c{{BKl{c}}}BL`}{{{f{{An{N`}}}}}BIl}{c{{CIn{c}}}BGh}{c{{BIn{c}}}BJ`}{c{{CJ`{c}}}BL`}{{}CG`}{c{{BLb{c}}}BL`}{{}CGd}{c{{CJb{c}}}BL`}{c{{CJd{c}}}BGh}{GbAOb}{cBNj{{Hh{CKl}}}}{cBHh{{Hh{CKl}}}}{{AObAObAOb}BOf}{c{{CJf{c}}}BGh}{{DAj{ADn{CEl}}{ADn{BAh}}Fh{Cb{{Fn{Fh}}}}{Cb{{ADn{BGf}}}}{Cb{D@l}}Fhd{Cb{{Fn{B`}}}}CAb}{{Bd{BLhBb}}}}{c{{BLf{c}}}BGh}{c{{BLj{c}}}{BL`BL`}}{CAjBFn}{c{{BHn{c}}}{}}{{BGjBGjBGj}CDd}{{}CDf}{{{f{Ah}}{Fn{N`}}{BHn{{ADn{BHl}}}}c}BMfBJb}{c{{ADn{c}}}{}}{{}B@n}{{ADd{Fn{{Ch{Cf}}}}{Cb{Hb}}}BCl}{{cADdd}AMn{{AMl{Eh}}}}{e{{ADn{c}}}{}{{A@`{{f{{CHj{c}}}}}{{Df{c}}}}}}{ADdBCl}{{{f{AGl}}FhFh}{{l{c}}}Dd}{{{f{BIj}}FhFh}B`}{{{f{Ah}}}BOn}{{ce}{{ADn{ce}}}{}BHb}{{{f{B@n}}Fh{ANj{ANh}}Ef}{{Bd{B@nBb}}}}{{Gb{f{Ah}}}{{Bd{B`Bb}}}}{EhBOn}{{ADdFh}BCl}{{{ADn{{An{CFn}}}}}BNj}{{{ADn{{An{CFn}}}}}BHh}{AlBOn}{{}{{ADn{{BKf{c}}}}}{}}{c{{ADn{{BKf{e}}c}}}BHb{}}{Fh{{ADn{{An{{BKf{c}}}}}}}{}}{{Fhc}{{ADn{{An{{BKf{e}}}}c}}}BHb{}}3210{{{f{CnDAl}}}Cb}{{{f{CnCNf}}}Cb}{{{f{CnBLn}}Fh}{{Bd{{Cb{{Fn{AOh}}}}Bb}}}}{{{f{CnBKj}}Fh}{{Bd{{Cb{{Fn{AOh}}}}Bb}}}}{{{f{CnBLh}}Fh}{{Bd{{Cb{{Fn{AOh}}}}Bb}}}}{{{f{BGj}}{f{Cn{BD`{{f{BGj}}}}}}}b}{{BGj{f{Cn{BD`{BGj}}}}}b}{BGjBGj}0{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}0{GbBGj}`{{}On}{{}Nh}`{{{f{BIj}}}Fh}{BBnBBn}6````{{{f{Cn{BLf{c}}}}}{{Bd{FhBb}}}BGh}````{{{f{AFf}}}{{Bd{{Gd{Gb}}Bb}}}}{{BHdc}BHd{{Hh{{An{BGj}}}}}}{{BBn{f{Cn{BFh{BFf}}}}{f{Cn{BFh{BFj}}}}}{{Bd{BFdBb}}}}`{{BGjc}BGj{{AMl{BGj}}}}{{{f{CGj}}}{{l{Ld}}}}{{{f{CGl}}}{{l{Ld}}}}{{{f{BNb}}}{{Bd{{l{Ld}}Bb}}}}{{{f{BNb}}}{{Bd{{l{In}}Bb}}}}{{CCdc}BGj{{AMl{BGj}}}}{{CChc}BGj{{AMl{BGj}}}}`{{BGje}BGj{{AMl{BGj}}ABf}{{Hh{{An{c}}}}}}{{BGjeCE`}BGj{{AMl{BGj}}ABf}{{Hh{{An{c}}}}}}```{{{f{Ah}}}AOb}{{{f{Ah}}{f{{An{{f{Ah}}}}}}{f{Ah}}}{{Jb{J`In}}}}{{{f{Ah}}{f{{An{{f{Ah}}}}}}{f{Ah}}}{{Jb{KbJd}}}}{{{f{Ah}}{f{{An{{f{Ah}}}}}}{f{Ah}}Jf}{{Jb{JhJd}}}}``{{{f{AOb}}{f{AOb}}}{{Cb{AO`}}}}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}{{Cb{AO`}}}{CMnNf}BHb}{{{f{CFd}}}{{f{CKl}}}}{{{f{BNj}}}{{f{CKl}}}}{{{f{BHh}}}{{f{CKl}}}}`{{{f{CFd}}}{{f{{An{CFn}}}}}}{{{f{BNj}}}{{f{{An{CFn}}}}}}{{{f{BHh}}}{{f{{An{CFn}}}}}}``{{}BGj}{c{{DAn{{ADn{c}}}}}{}}{{ce}{{DAn{{ADn{ce}}}}}{}BHb}````{{BGjc}BGj{{AMl{BGj}}}}```{{D@b{f{Ah}}}BGj}0{{{f{AOh}}{f{AOh}}d}{{Bd{{Gf{{Oj{{Fn{Md}}{Fn{Nh}}}}{Oj{{Fn{On}}{Fn{Nh}}}}}}Bb}}}}`{{{f{D@n}}}L`}{BGjBGj}{BBn{{Bd{{Gf{AOhAOh}}Bb}}}}```{{{f{{ADn{c}}}}{f{CnDB`}}}b{AIlNf}}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}dNfBHb}{{{f{Ah}}BGjMn}BGj}{{BBnBGjMn}BBn}{{{f{AGj}}LbMn}{{Bd{{Cb{c}}Bb}}}{}}{{BGjBGjMn}BGj}{{{f{DA`}}LbMn}{{Bd{L`Bb}}}}{{{f{BIj}}LbMn}{{Bd{L`Bb}}}}{{{f{CGj}}}{{l{Mf}}}}{{{f{CGl}}}{{l{Mf}}}}{{{f{BNb}}}{{Bd{{l{Mf}}Bb}}}}{{{f{Cnc}}e}{{Bd{{f{Cng}}B@b}}}{}CIh{}}````{{{f{DBb}}CBn{Cb{Il}}}B`}{{BGjCBn{Cb{Il}}}BGj}{{{f{Cn{ADn{CJh}}}}{f{Cn{An{Al}}}}}{{Bd{FhB@b}}}}{{{f{Cn{ADn{CJh}}}}DBd}{{Bd{bB@b}}}}{{{BLf{c}}CAb}{{BLf{c}}}BGh}{{{f{Cn{ADn{CJh}}}}{f{Cn{Fn{Al}}}}}{{Bd{FhB@b}}}}{{{f{Cn{ADn{CJh}}}}{f{CnEh}}}{{Bd{FhB@b}}}}{{{f{Cnc}}}{{Bd{eB@b}}}{}DBf}{{{f{Cn{ADn{CJh}}}}{f{Cn{An{DBh}}}}}{{Bd{FhB@b}}}}{{{f{CFd}}}d}{{{f{BIj}}}B`}{{{f{BNj}}}d}{{{f{BHh}}}d}````{{ce}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHnABf}{{Hh{{An{BGj}}}}}}{{{f{AGn}}}B`}0{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{BGjBGj}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{CnB@n}}{f{Ah}}}{{Cb{Ef}}}}{{{f{CnBIj}}{f{Ah}}}b}{{BBnei}BBn{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}{{Hh{Ah}}}{{Gh{}{{Cd{g}}}}}}{{{f{CnB@n}}{f{Ah}}{ANj{ANh}}}{{Cb{{ANj{ANh}}}}}}{{CIj{Fn{Eh}}}BGj}{{cBGj}BGj{{AMl{BGj}}}}{{{f{B`}}{f{{l{El}}}}}{{Bd{{l{j}}Bb}}}}{{BGjc}BGj{{AMl{BGj}}}}{{{f{B`}}{f{B`}}{f{B`}}{f{B`}}{Cb{Ef}}}{{Bd{B`Bb}}}}{{{f{BKh}}{f{Ah}}{f{Ah}}}{{Bd{{l{A`}}Bb}}}}{{BGjcc{Cb{c}}{Cb{Ef}}}BGj{{AMl{BGj}}}}1{{{f{BIl}}{Cb{Ef}}}{{Bd{N`Bb}}}}{{{f{BKh}}{f{Ah}}{f{Ah}}Fh}{{Bd{{l{A`}}Bb}}}}3{{{f{{Jb{JhJd}}}}{Cb{{f{Ah}}}}{f{{l{A`}}}}CFb}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{CnB@n}}Fh}b}{{BGj{f{{An{Gb}}}}CEb}BGj}{{{f{CNb}}{f{{An{Gb}}}}}{{Bd{B`Bb}}}}0{{{f{CKl}}}CFn}`{{{f{AH`}}}AH`}{{{f{BIj}}}B`}{BIfBGj}{BBnBBn}{BIhBGj}{BGjBGj}`{{BHdc}BHd{{Hh{{An{BGj}}}}}}{{{f{CNj}}{Fn{B`}}{f{BCd}}}{{Bd{{Gf{B`{Fn{B`}}Bh}}Bb}}}}{{BBnBGjcBCd}BH`{{Hh{{An{BGj}}}}}}{{BGjBCd}BGj}{{{f{AHb}}{f{Dh}}Nb}{{Bd{B`Bb}}}}{{BGj{ADn{Dh}}{BHn{{ADn{BHl}}}}Nb}BGj}{{{f{BIj}}{f{Dh}}Nb}{{Bd{B`Bb}}}}{{BGjFhc}BGj{{E`{{f{Cn{l{Ed}}}}}{{Df{{Cb{Lb}}}}}}HlHnDj}}{{{f{DBj}}Nb}{{Bd{B`Bb}}}}{{BGjNb}BGj}{{{f{DBj}}{f{B`}}BNf}{{Bd{B`Bb}}}}{{BGjBGjBNf}BGj}32102032103{{BGjMnLbNb}BGj}2{{BGjBGjMnLbBNf}BGj}543254325432{{{f{DBl}}{f{{l{A`}}}}AOb{Cb{{f{AJj}}}}}{{Bd{DBlBb}}}}{{{f{BN`}}Md}{{Bd{B`Bb}}}}{{BGjMd}BGj}{{{f{BOf}}Gb{Cb{{f{AJj}}}}}{{Bd{GbBb}}}}0{{{f{BN`}}Mb}{{Bd{B`Bb}}}}{{BGjMb}BGj}2````{{{f{CFd}}}{{Cb{{f{D@l}}}}}}{{{f{BNj}}}{{Cb{{f{D@l}}}}}}{{{f{BHh}}}{{Cb{{f{D@l}}}}}}``````{{{f{D@`}}{l{j}}}{{l{j}}}}{{}{{BHn{{ADn{BHl}}}}}}{{BGjBGjdd{Cb{Il}}}BGj}0`{{{f{BHf}}DBn}{{Bd{AOhBb}}}}{{{f{BHh}}DBn}{{Bd{AOhBb}}}}{{cBNl}{{Bd{BBnBb}}}{{Hh{CKl}}}}{{{ADn{{An{CFn}}}}BNl}{{Bd{BBnBb}}}}{{cBO`}{{Bd{BBnBb}}}{{Hh{CKl}}}}{{{ADn{{An{CFn}}}}BO`}{{Bd{BBnBb}}}}{{DC`{f{{An{Md}}}}e}{{Bd{B`Bb}}}Dj{{Gh{}{{Cd{{Cb{c}}}}}}}}{{{f{AHd}}c{Cb{e}}}{{Bd{AHdBb}}}{{Gh{}{{Cd{Md}}}}}{}}{{{f{AHd}}ci}{{Bd{AHdBb}}}{{Gh{}{{Cd{Md}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{g}}}}}}}}{{{f{Cn{CIn{c}}}}}{{Bd{{ADn{BAh}}Bb}}}BGh}{{{f{Cn{BIn{c}}}}}{{Bd{B@nBb}}}BJ`}{{{f{BBn}}}{{Bd{{ADn{B@n}}Bb}}}}{{{f{BHh}}{Cb{Fh}}}{{Bd{{ADn{B@n}}Bb}}}}{{{f{BLh}}}{{f{{ADn{BAh}}}}}}{{{f{Cn{BLf{c}}}}}{{Bd{{ADn{BAh}}Bb}}}BGh}{{{f{BHf}}{Cb{Fh}}}{{Bd{{ADn{B@n}}Bb}}}}{{{f{CEl}}}{{f{DCb}}}}```````{{{f{COb}}}{{l{Mf}}}}{{{f{CGl}}}{{l{Mf}}}}{{{f{BNb}}}{{Bd{{l{Mf}}Bb}}}}`{{{f{CGn}}}{{l{Jd}}}}`{{{f{Cn{ADn{CJh}}}}DCd}{{Bd{IlB@b}}}}{{BBnc}BBn{{Hh{{An{BGj}}}}}}0````{{{f{AHd}}{f{{l{Aj}}}}{Cb{c}}}{{Bd{AHdBb}}}{}}{{{f{CnB@n}}{f{Ah}}Ef}{{Cb{Ef}}}}{{{f{CnB@n}}FhEf}{{Cb{Ef}}}}{{{BLf{c}}d}{{BLf{c}}}BGh}{{{BLj{c}}d}{{BLj{c}}}BL`}{{{CIn{c}}d}{{CIn{c}}}BGh}{{{BIn{c}}d}{{BIn{c}}}BJ`}{{{CJd{c}}d}{{CJd{c}}}BGh}4{{CIld}CIl}{{BGjIh}BGj}{{{f{CnBCl}}{Cb{Hb}}}b}{{{f{AHf}}Gb}{{l{c}}}Dd}{{{f{BIj}}Gb}B`}{{BIfBGj}BGj}{{BBnc}BBn{{AMl{BGj}}}}{{BIhBGj}BGj}{{BGjBGj}BGj}{{{f{AHh}}Gbc}{{l{e}}}{}Dd}{{BBnce}BBn{{AMl{BGj}}}{{AMl{BGj}}}}{{BGjce}BGj{{AMl{BGj}}}{{AMl{BGj}}}}{{{f{CnB@n}}{f{Ah}}}{{Cb{Ef}}}}{{{f{CnB@n}}Fh}{{Cb{{Gf{{ANj{ANh}}Ef}}}}}}{BGjBGj}{{{f{CnAAd}}}b}{{{f{CnBIj}}}b}{{BGj{Cb{Il}}}BGj}``{{BBnCFnC@b}{{Bd{bBb}}}}{{BBnCFnC@j}{{Bd{bBb}}}}{{BBnCFnC@n}{{Bd{bBb}}}}{{BBnCFnCAd}{{Bd{bBb}}}}`````{{{f{BIj}}GbFh}B`}{{BBnGbMd}BBn}{{BIhBGjBGj}BGj}={{{f{CnBCl}}FhFh}b}0```{{{f{AHj}}FhFh}AHj}{{{f{c}}FhFh}e{}{}}1022{{BClFhFh}BCl}0`{{{f{AEl}}d}{{l{c}}}Dd}{{BIfEj}BGj}{{BBncF`}BBn{{BC`{{ANj{ANh}}}}}}{{BIhEj}BGj}{{BGjEj}BGj}{{BGjeF`}BGj{{AMl{BGj}}ABf}{{Hh{{An{c}}}}}}{{BBncF`}BBn{{Hh{{An{BGj}}}}}}{{{f{AEl}}Ej}{{l{c}}}Dd}{{{f{BIj}}Ej}{{Bd{B`Bb}}}}{{{f{{ADn{c}}}}}{{Cb{{f{AIl}}}}}{AIlNf}}{{{f{BKh}}{f{{l{A`}}}}}{{l{j}}}}{{{f{BKh}}{f{{l{A`}}}}Fh}{{Bd{AJnBb}}}}0{{{f{{l{A`}}}}{f{{l{A`}}}}e}{{l{j}}}{{Cj{}{{Cd{{f{Ah}}}}}}}{{Dh{{f{Ah}}{f{Ah}}}{{Df{c}}}}}}2{{{f{{l{A`}}}}{f{{l{A`}}}}Fhed}{{Bd{AJnBb}}}{{Cj{}{{Cd{{f{Ah}}}}}}}{{Dh{{f{Ah}}{f{Ah}}}{{Df{c}}}}}}2{BGjBGj}`{{{f{CFl}}{f{{An{Al}}}}}{{l{Aj}}}}{{{f{CFl}}{f{{l{Ab}}}}}{{l{Aj}}}}`{{BIfAl}BGj}{{BBnAl}BBn}{{BIhAl}BGj}{{{f{AHl}}Al}{{Cb{Lb}}}}{{BGjAl}BGj}{{{f{BIj}}Al}{{Cb{Lb}}}}{{{f{DCf}}Al}L`}{{{f{BIj}}Al}{{Bd{L`Bb}}}}{{MdMd}Nh}{BGjDCh}{{{f{{l{A`}}}}{f{Ah}}d}{{l{A`}}}}{{{f{BKh}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{BKh}}}{{l{El}}}}0{{{f{BKh}}}{{l{A`}}}}{{{f{BKh}}{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}3````{{{f{BNb}}{f{Ah}}}{{Bd{B`Bb}}}}`{{BGjEf}BGj}`{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}606060{{{f{BKh}}{f{{l{A`}}}}}{{l{A`}}}}10{{{f{{ADn{ce}}}}}FhNfBHb}{BGjCIj}{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{BGjBGj}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}{{BHdc}BHd{{Hh{Ah}}}}{{D@b{f{Ah}}}BGj}{{{f{BFn}}}{{f{Ah}}}}`1{{{f{Ah}}}BGj}{BIfBGj}{BBnBBn}{BIhBGj}{{{f{AGh}}}{{Cb{c}}}{}}{BGjBGj}{{{f{D@n}}}L`}{{{f{BIj}}}{{Bd{L`Bb}}}}{{}{{BHn{{ADn{BHl}}}}}}{{{f{Cnc}}i}{{Bd{gB@b}}}{}{}{}{{A@`{{f{Cne}}}{{Df{g}}}}}}{{BBnMd}BBn}{{BH`{Cb{Fh}}}BBn}{{BIhBGj}BGj}{{BGj{Cb{Fh}}}BGj}{{{f{AHn}}{f{c}}}{{Bd{AHnBb}}}Nf}{{{f{BIj}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{DCj}}{f{{An{Nh}}}}Ih}DCj}{{{f{DCj}}{f{{An{Nh}}}}}DCj}{{{f{BIj}}{f{{An{Md}}}}}{{Bd{B`Bb}}}}{{{f{BIj}}{f{{An{Md}}}}}B`}{{{f{AI`}}{f{c}}}AI`Nf}{{{f{BIj}}{f{{l{El}}}}}B`}{{{f{CnBCl}}}{{Cb{Hb}}}}{{BGjBGjBGj}BGj}{{CCbc}CCd{{AMl{BGj}}}}{{CCfc}CCh{{AMl{BGj}}}}`{{BGjBGjAObBNn}BGj}```{{{f{BNb}}Jf}{{Bd{{l{Jd}}Bb}}}}{BBn{{Bd{DClBb}}}}{CC`{{Bd{DClBb}}}}1{{{f{CEf}}}{{Cb{Id}}}}{{BIhFh}BGj}{{{f{B@n}}d}BAh}{{{f{BCl}}}{{Ch{Cf}}}}{{{f{AIb}}}{{Fn{{f{{An{Al}}}}}}}}{{{f{BBn}}d}{{Bd{EhBb}}}}{{{f{DCn}}{Cb{{f{Ah}}}}d}{{Bd{AOhBb}}}}{{{f{BGb}}{Cb{{f{Ah}}}}d}{{Bd{AOhBb}}}}{{{f{BGj}}{f{B@n}}CN`}{{Bd{N`Bb}}}}{{{f{BKh}}{f{{l{El}}}}d}{{Bd{{l{Jd}}Bb}}}}{BIfBGj}{{{f{BKh}}}{{l{A`}}}}{D@bBGj}{{{f{On}}}{{Cb{Md}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BGjBGj}{{{f{BIl}}}{{Bd{N`Bb}}}}{{{f{BNb}}{f{Ah}}}{{Bd{B`Bb}}}}{{{f{c}}}Eh{}}0000000000{{{f{CnB@n}}{f{B@n}}}{{Bd{dBb}}}}`887``{{BBnMdcF`}BBn{{Hh{{An{BGj}}}}}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}g{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{f{DD`}}{Cb{{f{AJj}}}}{f{{l{A`}}}}{f{Ah}}}{{Bd{DD`Bb}}}}{{{f{AOb}}Gb{Cb{{f{AJj}}}}ceg}{{Bd{GbBb}}}{{Dh{Gb}{{Df{Gb}}}}}{{Dh{Gb}{{Df{AJh}}}}}{{Dh{AJh}{{Df{Gb}}}}}}{{{f{AOb}}Gb{Cb{{f{AJj}}}}}{{Bd{GbBb}}}}{{{f{BOf}}Gb{Cb{{f{AJj}}}}}{{Bd{GbBb}}}}00010`10{g{{Bd{AKde}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{{ADdg}{{Bd{AKfe}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{AMf{{Bd{eg}}}{}{{AKd{c}}AIh}{}}0{{AMfADd}{{Bd{eg}}}{}{{AKf{c}}AIh}{}}0{{ABl{f{Ah}}}{{Bd{{l{c}}e}}}Dd{}}{{ABn{f{{l{c}}}}}{{Bd{{l{c}}e}}}Dd{}}10{{ABn{f{Ah}}Ef}{{Bd{{l{c}}e}}}Dd{}}0{c{{Bd{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Id{{Bd{CEfBb}}}}11{{{ADn{{An{c}}e}}}{{Bd{{ADn{{Ob{c}}e}}}}}{}BHb}222222222222222{COf{{Bd{CElB@h}}}}{{{f{B@n}}{f{Ah}}}{{Bd{{f{Ef}}Bb}}}}{{{f{B@n}}Fh}{{Bd{{Gf{{f{{ANj{ANh}}}}{f{Ef}}}}Bb}}}}{{{f{B@n}}{f{Ah}}}{{Bd{N`Bb}}}}{{{f{B@n}}{f{Ah}}}{{Bd{{Gf{Fh{f{{ANj{ANh}}}}{f{Ef}}}}Bb}}}}{{{f{CnB@n}}{f{Ah}}}{{Bd{{f{CnEf}}Bb}}}}{{{f{CNd}}{f{Ah}}}{{Bd{FhBb}}}}99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{BOh{Cb{CFn}}}{{Bd{{BGd{CJh}}Bb}}}}{{{f{BIl}}c}{{Bd{N`Bb}}}{{A@`{{f{Ef}}}{{Df{{Bd{EfBb}}}}}}}}{{{f{BIl}}c}{{Bd{N`Bb}}}{{A@`{{f{{An{{f{Ef}}}}}}}{{Df{{Bd{EfBb}}}}}}}}{{BGjc}{{Bd{BGjBb}}}{{E`{BGj}{{Df{{Bd{BGjBb}}}}}}}}{{{f{BIl}}c}{{Bd{N`Bb}}}{{A@`{{f{N`}}}{{Df{{Bd{N`Bb}}}}}}}}{{DAfFh}{{Bd{FhBb}}}}{Al{{Bd{CAlBb}}}}{Md{{Bd{CB`Bb}}}}{Mb{{Bd{CBbBb}}}}{c{{Bd{{ADn{c}}DDb}}}{}}{{ADd{Fn{{Ch{Cf}}}}{Cb{Hb}}}{{Bd{BClBb}}}}{{ce}{{Bd{{ADn{ce}}DDb}}}{}BHb}{{}{{Bd{{ADn{{BKf{c}}}}DDb}}}{}}{c{{Bd{{ADn{{BKf{e}}c}}DDb}}}BHb{}}10`{c{{Bd{{DAn{{ADn{c}}}}DDb}}}{}}{{ce}{{Bd{{DAn{{ADn{ce}}}}DDb}}}{}BHb}{{{f{BJb}}{f{Cn{Fn{Al}}}}}{{Bd{bBb}}}}{{{ADn{ce}}}{{Bd{c{ADn{ce}}}}}{}BHb}``{{{f{c}}}Ol{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Ah}}}}`{{{f{AEn}}}{{Bd{AEnBb}}}}{BIfBGj}{{BBn{Cb{{Fn{Eh}}}}BAd}BBn}{BIhBGj}{BGjBGj}{{{f{BIj}}}{{Bd{B`Bb}}}}4321{{BBne}BBn{{Hh{Ah}}}{{Gh{}{{Cd{c}}}}}}{{{ADn{{DDd{c}}}}}{{Bd{cb}}}Hl}{{{ADn{ce}}}cABfBHb}{{{f{CnBOh}}{f{DDf}}}b}5{{{f{DDh}}c{f{Ah}}AObAOb}{{Bd{AOhBb}}}{{BC`{Eh}}}}0{{{BLf{c}}d}{{BLf{c}}}BGh}```{{BHdCAn}BHd}`{{{f{BCl}}}{{Cb{{f{Hb}}}}}}0{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}cABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{COh}}ddEh}{{Bd{AOhBb}}}}{{BGjddEh}BGj}`2`{{{f{BCl}}}{{f{{An{{Ch{Cf}}}}}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}gABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{BCl}}}COj}{{BIfAl}BGj}{{BBnAl}BBn}{{BIhAl}BGj}{{{f{AHl}}Al}{{Cb{Lb}}}}{{BGjAl}BGj}{{{f{BIj}}Al}{{Cb{Lb}}}}{{{f{DCf}}Al}L`}{{{f{BIj}}Al}{{Bd{L`Bb}}}}`{{{f{DDj}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{DDj}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}`{{{f{{ADn{{DDd{c}}}}}}g}{{Bd{eb}}}Hl{}{{A@`{{f{c}}}{{Df{e}}}}}}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{ADn{ce}}}}}FhNfBHb}{{{f{CGj}}}{{l{Mf}}}}{{{f{CGl}}}{{l{Mf}}}}{{{f{BNb}}}{{Bd{{l{Mf}}Bb}}}}210{{{f{BOd}}}{{Cb{Md}}}}{{{f{AOb}}}Gb}`{{{f{AOb}}}d}`{cCCb{{AMl{BGj}}}}{{CCdc}CCf{{AMl{BGj}}}}{{CChc}CCf{{AMl{BGj}}}}```{{BHdBBn}BHd}{{CDdBGj}CDd}{{{BKl{c}}{DDl{Fh}}}{{BKl{c}}}BL`}{{{CJd{c}}{DDl{Fh}}}{{CJd{c}}}BGh}{{BHh{Cb{{DDl{Fh}}}}}BHh}{{BNjd}BNj}{Fhc{}}0{FhB@n}{{{CJf{c}}{Cb{{DDl{Fh}}}}}{{CJf{c}}}BGh}{{BOhFh}BOh}{{BBnd}BBn}{{BFnCAf}BFn}{{BBnBGj}BBn}{{{f{CnB@n}}{ANj{ANh}}Ef}{{Cb{Ef}}}}{{{CIn{c}}{Cb{{Fn{Eh}}}}}{{CIn{c}}}BGh}{{{BIn{c}}{Cb{{Fn{Eh}}}}}{{BIn{c}}}BJ`}{{BBnc}BBn{{Hh{{An{BGj}}}}}}{{{BLf{c}}{Cb{{Fn{Eh}}}}}{{BLf{c}}}BGh}{{BOh{Cb{{ADn{{Fn{Eh}}}}}}}BOh}`2{{BNj{Cb{{f{Ah}}}}}BNj}{{BOj{Cb{c}}}BOj{{AMl{BOn}}}}{{{CJ`{c}}{Cb{C@l}}}{{CJ`{c}}}{}}{{CG`{Cb{C@l}}}CG`}{{{BLb{c}}{Cb{C@l}}}{{BLb{c}}}BL`}{{CGd{Cb{C@l}}}CGd}{{{BLj{c}}CAh}{{BLj{c}}}BL`}{{BBnc}BBn{{Hh{{An{BBn}}}}}}{{{BLj{c}}{Cb{Fh}}}{{BLj{c}}}BL`}{{{BKl{c}}{Cb{Eh}}}{{BKl{c}}}BL`}0{{CDdBGj}CDd}{{CDfBGj}CDf}{{BNjd}BNj}{{BOjd}BOj}{{{f{BIl}}Ef}{{Bd{N`Bb}}}}{{BNj{Cb{{ADn{B@n}}}}}BNj}{{BOh{Cb{{ADn{{Fn{Ef}}}}}}}BOh}{{BNjBOl}BNj}{{BOjBOl}BOj}{{BNjAl}BNj}{{BOjAl}BOj}{{CG`CFn}CG`}{{CGdCFn}CGd}{{CIj{Fn{BGj}}}BGj}{{{BKl{c}}{Cb{Fh}}}{{BKl{c}}}BL`}{{CDfBGjBGjBGj}CDf}=={{BOhd}BOh}{{{BLf{c}}{Cb{{Fn{B`}}}}}{{BLf{c}}}BGh}{{CDdBGjBGjBGj}CDd}3{{CDdBGj}CDd}{{CDfBGj}CDf}{{{CJd{c}}d}{{CJd{c}}}BGh}{{BNjd}BNj}{{BHhd}BHh}{{{CJf{c}}d}{{CJf{c}}}BGh}8{{BNj{Cb{Fh}}}BNj}{{BHh{Cb{Fh}}}BHh}{{BOh{Cb{Fh}}}BOh}{{{CJb{c}}DDn}{{CJb{c}}}BL`}{{{CJd{c}}DDn}{{CJd{c}}}BGh}{{{BKl{c}}Eh}{{BKl{c}}}BL`}8>{{AMn{DE`{EhEh}}}AMn}{{BAh{DE`{EhEh}}}BAh}=<<=<:{{BOjd}BOj}>{{CFdc}CFd{{AMl{{Cb{Fh}}}}}}{{{CIn{c}}{Cb{Fh}}}{{CIn{c}}}BGh}{{{BIn{c}}{Cb{Fh}}}{{BIn{c}}}BJ`}{{BNjc}BNj{{AMl{{Cb{Fh}}}}}}<;{{BHhc}BHh{{AMl{{Cb{Fh}}}}}}{{{CJf{c}}{Cb{Fh}}}{{CJf{c}}}BGh}{{{BLf{c}}{Cb{Fh}}}{{BLf{c}}}BGh}=1={{CDfBGj}CDf};{{BNj{Cb{C@`}}}BNj}{{BOj{Cb{C@`}}}BOj}{{BBnCEd}BBn}{{BOhBOj}BOh}{{CFdCFn}CFd}{{BNjCFn}BNj}{{BHhCFn}BHh}{{{CJf{c}}{Cb{e}}}{{CJf{c}}}BGh{{AMl{CFn}}}}{{BOh{Cb{c}}}BOh{{AMl{CFn}}}}{{CFd{ADn{{An{CFn}}}}}CFd}{{BNj{ADn{{An{CFn}}}}}BNj}{{BHh{ADn{{An{CFn}}}}}BHh}{{{CJ`{c}}d}{{CJ`{c}}}{}}{{{BLb{c}}d}{{BLb{c}}}BL`}{{{BLf{c}}{Cb{{ADn{BGf}}}}}{{BLf{c}}}BGh}{{BBnd}BBn}{{{CIn{c}}{Cb{{Fn{Fh}}}}}{{CIn{c}}}BGh}{{{BIn{c}}{Cb{{Fn{Fh}}}}}{{BIn{c}}}BJ`}{{{CJd{c}}{Cb{{Fn{Eh}}}}}{{CJd{c}}}BGh}{{{BLf{c}}{Cb{{Fn{Fh}}}}}{{BLf{c}}}BGh}{{BOh{Cb{{ADn{{Fn{Fh}}}}}}}BOh}5{{{BKl{c}}Al}{{BKl{c}}}BL`}{{BNj{Cb{Al}}}BNj}{{BOj{Cb{Al}}}BOj}{{{BKl{c}}C@f}{{BKl{c}}}BL`}{{BNjd}BNj}{{BOhd}BOh}{{CFdd}CFd}2{{BHhd}BHh}{{{CJf{c}}d}{{CJf{c}}}BGh}3>{{{BLj{c}}{Cb{Fh}}}{{BLj{c}}}BL`}{{CFdc}CFd{{AMl{{Cb{D@l}}}}}}{{{CIn{c}}{Cb{D@l}}}{{CIn{c}}}BGh}{{{BIn{c}}{Cb{D@l}}}{{BIn{c}}}BJ`}{{BBn{f{Ah}}{Cb{Md}}}BBn}{{BNj{Cb{D@l}}}BNj}{{BNjc}BNj{{AMl{{Cb{D@l}}}}}}{{BHh{Cb{D@l}}}BHh}{{BHhc}BHh{{AMl{{Cb{D@l}}}}}}{{{BLf{c}}{Cb{D@l}}}{{BLf{c}}}BGh}{{BOh{Cb{D@l}}}BOh}{{{f{BIl}}}{{Bd{N`Bb}}}}{{BOhFh}BOh}{{{CJd{c}}{ADn{B@n}}}{{CJd{c}}}BGh}{{BNj{Cb{{ADn{B@n}}}}}BNj}{{BHh{Cb{{ADn{B@n}}}}}BHh}{{{CJf{c}}{ADn{B@n}}}{{CJf{c}}}BGh}{{{BLf{c}}{Cb{{ADn{BAh}}}}}{{BLf{c}}}BGh}{{BOh{Cb{{ADn{B@n}}}}}BOh}{{BNjc}{{Bd{BNjBb}}}{{Dh{B@n}{{Df{{Bd{B@nBb}}}}}}}}{{{CJd{c}}{f{B@n}}}{{CJd{c}}}BGh}{{{CJf{c}}{f{B@n}}}{{CJf{c}}}BGh}3{{CDdBGj}CDd}{{CDfBGj}CDf}{{{BKl{c}}Al}{{BKl{c}}}BL`}{{BNjAl}BNj}{{BOjAl}BOj}{{BBnd}BBn}{{BNjFh}BNj}{{BOhFh}BOh}102{{{BLj{c}}d}{{BLj{c}}}BL`}3{{{BKl{c}}{Cb{Eh}}}{{BKl{c}}}BL`}{{CDdJf}CDd}{{CDd{Cb{Eh}}}CDd}{{BNjd}BNj}{{BOjd}BOj}108{{{f{BCl}}{Cb{Hb}}}{{Ch{Cf}}}}{{BCl{Cb{Hb}}}BCl}{{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}{Cb{Hb}}}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}?{{CDdBGj}CDd}{BBnBBn}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}e{}{}{}}10{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}210213210210{{{f{Cn{ADn{CJh}}}}{f{{An{Al}}}}}{{Bd{FhB@b}}}}{{{f{Cnc}}e}{{Bd{FhB@b}}}{}DBf}{{{f{Cn{ADn{CJh}}}}{f{{An{DEb}}}}}{{Bd{FhB@b}}}}{{BGjc}BGj{{AMl{BGj}}}}{{{f{CGj}}}{{l{In}}}}{{{f{CGl}}}{{l{In}}}}{{{f{BNb}}}{{Bd{{l{In}}Bb}}}}``{{{f{AId}}{f{{l{Aj}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Dd}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BCn}}c}B`{{Dh{{Gf{Md{f{{BD`{Md}}}}}}}{{Df{Cb}}}}HlHn}}{{{f{BCn}}c}B`{{Dh{{Gf{Md{f{{BD`{Md}}}}}}}{{Df{}}}}HlHn}}{{{f{{An{{Ob{Md}}}}}}c}B`{{Dh{{Ob{Md}}}{{Df{Cb}}}}HlHn}}{{{f{{An{{Ob{Md}}}}}}c}B`{{Dh{{Ob{Md}}}{{Df{}}}}HlHn}}{{{f{{An{c}}}}e{Cb{{ADn{ADf}}}}}{{AJ`{c}}}{BEfBEh}{{Cj{}{{Cd{{Gf{MdMd}}}}}}Ib}}{{{f{{An{c}}}}{f{Hb}}e{Cb{{ADn{ADf}}}}}{{AJ`{c}}}{BEfBEh}{{Cj{}{{Cd{{Gf{MdMd}}}}}}Ib}}{{{f{{l{c}}}}MdMd}{{l{c}}}Dd}{{{f{{Fn{{Ob{Md}}}}}}{f{{An{{Ch{Cf}}}}}}}d}{{{f{BEj}}{f{Bh}}}B`}{{BElBEl}BEl}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DdDd{{Dh{ff}{{Df{}}}}}{{Dh{f}{{Df{}}}}}{{Dh{f}{{Df{}}}}}Dd}{{{l{c}}{l{e}}gik}{{l{m}}}DdDd{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DdDd{{AIf{CbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}g}bDdDd{{E`{CbCb}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDd{}{{E`{}{{Df{g}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Ah}}}{{l{k}}}DdDd{CfAIh}{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Ah}}}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DdDdCf{{E`{}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDd{}{}{{E`{CbCb}{{Df{{Bd{{Cb{g}}i}}}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DdDdDd{{AIj{CbCbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDdCfAIl{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Ah}}}{{Bd{{l{m}}i}}}DdDdCfAIl{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DdDdAIl{{E`{ff}{{Df{{Bd{{Ch{Cf}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DdDdDd{}{}{{E`{CbCbCb}{{Df{{Bd{{Cb{i}}k}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{Cb}{{Df{{Bd{{Cb{e}}g}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{}{{Df{{Bd{eg}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{CfAIh}AIl{{E`{f}{{Df{{Bd{eg}}}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dd{{AIn{Cb}}}Dd}{{{f{{l{c}}}}e}{{l{g}}}DdAInDd}{{{f{{l{c}}}}g}{{l{i}}}DdCf{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}DdCf{{E`{}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dd{CfAIh}{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}0``{{{f{DEd}}}{{l{El}}}}0{{{f{DEd}}{f{{l{Jd}}}}d}{{Bd{B`Bb}}}}{{{f{DEd}}{f{{l{A`}}}}d}{{Bd{B`Bb}}}}{{{f{DEd}}}B`}{{{f{DEd}}}{{Bd{B`Bb}}}}1{{{f{DEd}}}{{Bd{{l{El}}Bb}}}}{{{f{DEd}}}{{l{Bj}}}}{{{f{DEd}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{DEd}}Ej}{{Bd{{l{Bj}}Bb}}}}{{{f{DEd}}Al}{{Bd{B`Bb}}}}5{{{f{DEd}}}{{Bd{{l{j}}Bb}}}}01{{{f{DEf}}}{{f{{l{Bj}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{BM`BGj}BGj}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}3{cc{}}{{}Fh}{ce{}{}}6{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}2````````{{{f{BJf}}{Cb{{f{Ah}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJf}}{Cb{{f{Ah}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJf}}{Cb{{f{Ah}}}}Jfdd{Cb{{f{Eh}}}}{f{{l{A`}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJf}}{Cb{{f{Ah}}}}Jfd{Cb{{f{Eh}}}}{f{{l{A`}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJf}}{Cb{{f{Ah}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}`{{{f{CGj}}}{{l{Mf}}}}{{{f{CGl}}}{{l{Mf}}}}{{{f{CGn}}}{{l{Jd}}}}`{{{f{COb}}}{{l{Mf}}}}21{{{f{CGj}}}{{l{Aj}}}}{{{f{CGl}}}{{l{Aj}}}}{{{f{CGj}}}{{l{In}}}}{{{f{CGl}}}{{l{In}}}}55`46576{{{f{COb}}}{{l{In}}}}16{{{f{CGj}}}{{l{Ld}}}}{{{f{CGl}}}{{l{Ld}}}}{{{f{Ah}}{f{{An{{f{Ah}}}}}}{f{Ah}}}{{Jb{J`In}}}}{{{f{Ah}}{f{{An{{f{Ah}}}}}}{f{Ah}}}{{Jb{KbJd}}}}{{{f{Ah}}{f{{An{{f{Ah}}}}}}{f{Ah}}Jf}{{Jb{JhJd}}}}=<{{{f{DBj}}Nb}{{Bd{B`Bb}}}}{{{f{DBj}}{f{B`}}BNf}{{Bd{B`Bb}}}}101010101010<>=`?>?>`98````````{{{f{c}}h}b{}}{{{f{BJf}}{Cb{{f{Ah}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJf}}{Cb{{f{Ah}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJf}}{Cb{{f{Ah}}}}Jfdd{Cb{{f{Eh}}}}{f{{l{A`}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJf}}{Cb{{f{Ah}}}}Jfd{Cb{{f{Eh}}}}{f{{l{A`}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{DEh}}}{{f{{l{A`}}}}}}{{{f{BJf}}{Cb{{f{Ah}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DEj}}}DEj}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{DEj}}{f{DEj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DEj}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{DEj}}{f{Cnc}}}bAGb}`{{}Fh}{ce{}{}}{{{f{DEj}}{f{Ah}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{{DEl{c}}}}}{{DEl{c}}}{ABfn}}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}?{{{f{Ah}}}{{Cb{DEj}}}}>=`{{{f{Cn{DEl{c}}}}{f{Ah}}}Cbn}{{{f{CnDEn}}{f{{An{Al}}}}{Cb{Jf}}}{{Cb{c}}}{}}{{{f{Cn{DEl{Jd}}}}{f{{An{Al}}}}{Cb{Jf}}}{{Cb{Gb}}}}{{{f{Cn{DEl{In}}}}{f{{An{Al}}}}{Cb{Jf}}}{{Cb{Mb}}}}`?>{{c{Cb{Jf}}}{{Bd{{DFb{}{{DF`{e}}}}Bb}}}{}{}}{{DEj{Cb{Jf}}}{{Bd{{DEl{In}}Bb}}}}{{DEj{Cb{Jf}}}{{Bd{{DEl{Jd}}Bb}}}}{c{{Bd{e}}}{}{}}{{{f{c}}}Ol{}}{ce{}{}}```````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Cnc}}}{{f{Cne}}}{}{}}0{{{f{CFf}}}CFf}{{{f{c}}{f{Cne}}}b{}{}}{{}CFf}{Fh{{f{c}}}{}}0{Fh{{f{Cnc}}}{}}0{Fhb}0{{{f{CFf}}{f{CFf}}}d}{{{f{DFd}}{f{DFd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CFf}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}0{{{f{Ah}}}{{Bd{DFd}}}}{{{f{Ah}}g}{{Bd{CFfBb}}}{{Hh{Ah}}}{{AMl{Eh}}}{{Gh{}{{Cd{{Gf{ce}}}}}}}}{{{f{CFf}}{f{Cnc}}}bAGb}{{}Fh}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}000{{{f{c}}}Ol{}}033````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAKd{}{{Gh{}{{Cd{c}}}}}}0{{ADde}AKf{}{{Gh{}{{Cd{c}}}}}}0{{{f{AKh}}}{{f{Ef}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{{f{{An{c}}}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{{f{ALj}}{f{Ef}}}{{Bd{B`Bb}}}}`{AMfe{}{{AKd{c}}AIh}}0{{AMfADd}e{}{{AKf{c}}AIh}}0{{{ALd{Ah}}}Ef}{{{f{ALj}}}{{f{Ef}}}}`{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{Fn{c}}ADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{Fn{c}}ADd}{{AIh{}{{AKj{e}}{AKl{c}}{AKn{g}}}}}{AL`{ALb{e}}}ABf{{G`{}{{Cd{e}}}}IbHlHn}}{{FhcADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{FhADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{ALj}}Fh}{{Bd{IdBb}}}}{{{f{ALj}}Fh}Id}{{}Ef}{{{f{ANl}}Fh}Id}4{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{ADl{cgADj}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{AK`}}{f{AK`}}}{{Bd{{Gf{AK`AK`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Ef}}{f{Ef}}}{{Bd{EfBb}}}}`{{}c{}}0{g{{Bd{AKde}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{{ADdg}{{Bd{AKfe}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{AMf{{Bd{eg}}}{}{{AKd{c}}AIh}{}}0{{AMfADd}{{Bd{eg}}}{}{{AKf{c}}AIh}{}}0{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}cABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}0{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}gABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{Fhc{}}0{{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}{Cb{Hb}}}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}```````````{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}=<`````````{{}b}0{{}d}{{{f{{Jb{JhJd}}}}{f{{l{A`}}}}CFb{Fj{Gb}{{Df{AJh}}}}{Fj{AJh}{{Df{Gb}}}}{f{AJj}}{f{AJj}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{Ah}}}}{Fj{Gb}{{Df{AJh}}}}{Fj{AJh}{{Df{Gb}}}}{f{AJj}}{f{AJj}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{Ah}}}}{f{{l{A`}}}}CFb}{{Bd{{Jb{JhJd}}Bb}}}}```{{c{Cb{Hb}}}CLl{}}{{{CLn{Gb}}{CLn{Al}}{Cb{Hb}}}CM`}{{{CLn{Gb}}{CLn{Al}}{Cb{Hb}}}CMb}`{CHlBGj}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{CHlJf}BGj}3{{CHlBGjJf}BGj}{{CHlEh}BGj}555{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}8{cc{}}9{{}Fh}{ce{}{}};;;;;;;;;;{{CHl{Cb{Eh}}BGjCFb}BGj}{{CHlBGjc}BGj{{Hh{Ah}}}}={{CHl{f{Ah}}}BGj}>;0>>>>>>>{{CHlBGjEh}BGj}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}6{CHlBGj}0?0`{{{f{BEn}}{f{AOh}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BEn}}}{{Bd{{f{Ah}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{}DFf}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{DFf{Cb{{f{ADd}}}}}{{Bd{ACjBb}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DFf}}}d}{{FhFh}DFf}{{{f{CnDFf}}{Ch{Cf}}}b}{{{f{CnDFf}}}b}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}6`{{{f{{l{c}}}}}Fhn}0```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DFh}}}DFh}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{DFh}}{f{DFh}}}d}{{{f{DFh}}{f{CnGj}}}{{Bd{bGl}}}}0{cc{}}{{{f{DFh}}{f{Cnc}}}bAGb}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Eh{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DFj}}}DFj}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{DFj}}{f{DFj}}}d}{{{f{DFj}}{f{CnGj}}}{{Bd{bGl}}}}0{cc{}}{{{f{DFj}}{f{Cnc}}}bAGb}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Eh{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4{{IhIh}Ih}{{{f{{l{El}}}}Md}{{Bd{bBb}}}}{{{f{{AJ`{Md}}}}Md}{{Bd{bBb}}}}```{{{f{B`}}CBh}B`}{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Bh}}}B`}0{{{f{B`}}{f{Ah}}}B`}0`{{{f{c}}h}b{}}{{{f{DFl}}}{{f{ADf}}}}{{{f{CnDFl}}}{{Ch{Cf}}}}{{{f{CnDFl}}}{{f{CnADf}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DFl}}}DFl}{{{f{c}}{f{Cne}}}b{}{}}{{{f{DFl}}}{{f{ADd}}}}{{}DFl}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{CnDFl}}Fh}b}{{{f{DFl}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DFl}}}Fh}{FhDFl}{{{f{CnDFl}}}b}70{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}{{{f{DFl}}}{{Cb{{f{DFn}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DDf}}}DDf}{{{f{c}}{f{Cne}}}b{}{}}{{}DDf}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{DDf}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{DDf}}}Fh}{{{f{DDf}}}{{ADn{B@n}}}}{{{f{CNh}}Al{Cb{Fh}}d{Cb{{f{B@n}}}}FhFh{Cb{{f{BOn}}}}{Cb{Al}}Al{Cb{{f{C@`}}}}dd{f{Cn{Cb{Fh}}}}d}{{Bd{{Gf{B@nFhFh}}Bb}}}}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}{{{f{CNh}}{f{BOh}}}{{Bd{DDfBb}}}}1{{{f{c}}}Ol{}}4{{DDf{ADn{B@n}}}DDf}````{{{f{{l{c}}}}eAJbd}{{Fn{Md}}}Dd{{Cj{}{{Cd{Cb}}}}}}{{{f{{An{f}}}}cMde}{{Fn{Md}}}{{Cj{}{{Cd{Cb}}}}}{{Dh{fFhf}{{Df{d}}}}}}``{{{f{DG`}}}{{f{B`}}}}{{{f{BNb}}}{{Bd{{l{In}}Bb}}}}{{{f{BNb}}}{{Bd{{l{Mf}}Bb}}}}0{{{f{BNb}}}{{Bd{{l{Aj}}Bb}}}}22112{{{f{BNb}}}{{Bd{{l{Ld}}Bb}}}}322{{{f{BNb}}{f{Ah}}}{{Bd{B`Bb}}}}{{{f{BNb}}Jf}{{Bd{{l{Jd}}Bb}}}}1445`{{{f{AHj}}FhFh}AHj}0`{{Fh{f{Cn{Fn{d}}}}}b}```11{{Fh{f{{An{B`}}}}{f{CnF`}}}{{Bd{{AJd{{l{El}}}}Bb}}}}{{{f{{An{B`}}}}{f{{An{d}}}}d}{{Bd{AJfBb}}}}{{{f{Ah}}{f{{An{B`}}}}{f{{An{d}}}}d}{{Bd{{l{En}}Bb}}}}{{{f{Ah}}{f{{An{B`}}}}}{{Bd{{l{En}}Bb}}}}{{{f{B`}}}{{Bd{{Ch{Cf}}Bb}}}}{{{f{{An{B`}}}}}{{Bd{AJfBb}}}}{{{f{{An{B`}}}}}{{Bd{{l{En}}Bb}}}}0```````````88```{{{f{BKd}}}{{f{{l{A`}}}}}}{{{f{BKh}}}{{Bd{{l{A`}}Bb}}}}{{{f{BKh}}}{{l{A`}}}}{{{f{BKh}}{f{{l{A`}}}}}{{l{A`}}}}{{{f{BKh}}{f{Ah}}d}{{Bd{{l{Aj}}Bb}}}}{{{f{BKh}}{f{{l{A`}}}}dd}{{Bd{{l{Aj}}Bb}}}}{{{f{BKh}}{f{Ah}}}{{Bd{{l{Aj}}Bb}}}}{{{f{BKh}}{f{Ah}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKh}}{f{{l{A`}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKh}}{f{{l{A`}}}}Fh}{{Bd{{l{A`}}Bb}}}}{{{f{BKh}}{f{Ah}}}{{Bd{{l{j}}Bb}}}}{{{f{BKh}}{f{{l{A`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BKh}}{f{Ah}}{f{Ef}}}{{Bd{B`Bb}}}}5{{{f{BKh}}{f{{l{A`}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BKh}}{f{Ah}}}{{Bd{{l{El}}Bb}}}}=<{{{f{{An{{f{{l{A`}}}}}}}}{f{Ah}}d}{{Bd{{l{A`}}Bb}}}}{{{f{BKh}}{f{Ah}}{f{Ah}}}{{Bd{{l{A`}}Bb}}}}0{{{f{BKh}}{f{Ah}}{f{Ah}}Fh}{{Bd{{l{A`}}Bb}}}}1{{{f{BKh}}{f{{l{A`}}}}}{{l{j}}}}{{{f{BKh}}{f{{l{A`}}}}Fh}{{Bd{AJnBb}}}}0{{{f{{l{A`}}}}{f{{l{A`}}}}e}{{l{j}}}{{Cj{}{{Cd{{f{Ah}}}}}}}{{Dh{{f{Ah}}{f{Ah}}}{{Df{c}}}}}}2{{{f{{l{A`}}}}{f{{l{A`}}}}Fhed}{{Bd{AJnBb}}}{{Cj{}{{Cd{{f{Ah}}}}}}}{{Dh{{f{Ah}}{f{Ah}}}{{Df{c}}}}}}2{{{f{{l{A`}}}}{f{Ah}}d}{{l{A`}}}}{{{f{BKh}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{BKh}}}{{l{El}}}}0{{{f{BKh}}}{{l{A`}}}}{{{f{BKh}}{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}3{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}404040{{{f{BKh}}{f{{l{A`}}}}}{{l{A`}}}}10{{{f{BKh}}{f{{l{El}}}}d}{{Bd{{l{Jd}}Bb}}}}444````````{{eFhFh}{{DGb{Gb}}}{{Hh{Ah}}}{{Cj{}{{Cd{c}}}}}}{{eFhFh}{{DGd{Gb}}}{{Hh{{An{Al}}}}}{{Cj{}{{Cd{c}}}}}}```````````{{{f{c}}h}b{}}0{{{f{Ah}}{Fn{{Ch{Cf}}}}{f{ADd}}}{{Bd{B`Bb}}}}{{{f{Ah}}{Fn{{Ch{Cf}}}}{f{ADd}}{Cb{{f{{DE`{EhEh}}}}}}}{{Bd{B`Bb}}}}{{B`B`}}{{{f{B`}}c}{}{AdKn}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AdKn}}{{{f{CnB`}}{f{B`}}}{{Bd{{f{CnB`}}Bb}}}}{{{f{B`}}}{{Cb{Fh}}}}0{{{f{BIj}}Ej}{{l{El}}}}{{{f{BIj}}}{{Bd{{l{El}}Bb}}}}`{{{f{B`}}}{{Bd{{f{{l{Bj}}}}Bb}}}}{{{f{B`}}Fh}{{f{{Ch{Cf}}}}}}{{{f{BIj}}}{{f{ADf}}}}{{{f{CnBIj}}}{{f{CnADf}}}}{{{f{B`}}}{{l{j}}}}{{{f{CnBIj}}}{{f{Cn{l{c}}}}}Dd}{{{f{BIj}}}{{f{{l{c}}}}}Dd}{{{f{B`}}}{{f{BIj}}}}{{{f{B`}}}{{f{B`}}}}0{{{f{CnBIj}}}{{Bd{FhBb}}}}{{{f{CnB`}}}{{Bd{FhBb}}}}{{{f{B`}}}{{Bd{{f{{l{Ab}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{En}}}}Bb}}}}{{{f{BIj}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{B`}}}{{Bd{{f{{l{Aj}}}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00{{{f{BIj}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Ef}}}{{Bd{B`Bb}}}}0{{{f{B`}}}{{Bd{{f{AK`}}Bb}}}}6{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}c}{{Bd{B`Bb}}}Af}{{{f{BIj}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{Fh}}}}}}}}{{{f{BIj}}}{{f{{Fn{{Ch{Cf}}}}}}}}{{{f{CnBIj}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}}{{{f{CnB`}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}}{{{f{B`}}}B`}{{{f{Ih}}}Ih}1{{{f{BIj}}}{{ADn{BIj}}}}{{{f{c}}{f{Cne}}}b{}{}}0{{{f{CnB`}}}b}{{{f{B`}}}{{Bd{{f{{Jb{J`In}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jb{JhJd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jb{JlJj}}}}Bb}}}}{{}B`}{Fh{{f{c}}}{}}00{{{f{B`}}}f}{Fh{{f{Cnc}}}{}}00{{{f{B`}}c}{}{AdKn}}{{B`c}{}{AdKn}}{{{f{B`}}{f{B`}}}}{{B`B`}}{Fhb}00{{{f{BIj}}}B`}{{{f{BIj}}}{{f{Ef}}}}{{{f{B`}}}{{Bd{{f{{Jb{JnJd}}}}Bb}}}}{{{f{Ih}}{f{Ih}}}d}{{{f{B`}}{f{B`}}}d}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}c}{{Bd{{l{Aj}}Bb}}}AMj}{{{f{B`}}{f{B`}}}{{Bd{{l{Aj}}Bb}}}}{{{f{B`}}{f{Ah}}}{{Bd{{l{Aj}}Bb}}}}3{{{f{B`}}{f{Ah}}}}{{{f{B`}}c}{}AMj}366{{{f{c}}{f{e}}}d{}{}}00{{{f{B`}}}Fh}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{CnB`}}{f{B`}}}{{Bd{{f{CnB`}}Bb}}}}{{{f{B`}}IdFh}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ed}}}}Bb}}}}{{{f{BIj}}}{{Dl{N`}}}}{{{f{B`}}AFb}{{Bd{B`Bb}}}}{{{f{BIj}}{f{{l{Aj}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{l{Aj}}}}d}{{Bd{B`Bb}}}}{{{f{Ih}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{B`}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{B`}}}Eh}{cc{}}0{{{l{c}}}B`Dd}1{{{Jb{JhJd}}}B`}{{{Jb{JnJd}}}B`}{{{Jb{J`In}}}B`}{{{Jb{KbJd}}}B`}{{{f{Ah}}{f{{An{Id}}}}d}{{Bd{B`Bb}}}}{{{f{Ah}}{f{{An{Id}}}}{f{Ef}}d}{{Bd{B`Bb}}}}{{{f{Ah}}{Ch{Cf}}}{{Bd{B`Bb}}}}{{{f{Ah}}{Fn{{Ch{Cf}}}}{f{Ef}}}B`}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}{cB`{{Gh{}{{Cd{{f{Il}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Mh}}}}}}}}{cB`{{Gh{}{{Cd{{f{Al}}}}}}}}{cB`{{Gh{}{{Cd{{f{Md}}}}}}}}{cB`{{Gh{}{{Cd{Al}}}}}}{cB`{{Gh{}{{Cd{{f{Lb}}}}}}}}{cB`{{Gh{}{{Cd{Lb}}}}}}{cB`{{Gh{}{{Cd{Md}}}}}}{cB`{{Gh{}{{Cd{Eh}}}}}}{cB`{{Gh{}{{Cd{{Cb{Lb}}}}}}}}{cB`{{Gh{}{{Cd{Mh}}}}}}{cB`{{Gh{}{{Cd{{Cb{Mb}}}}}}}}{cB`{{Gh{}{{Cd{Ij}}}}}}{cB`{{Gh{}{{Cd{{f{Gb}}}}}}}}{cB`{{Gh{}{{Cd{Lf}}}}}}{cB`{{Gh{}{{Cd{{f{Ij}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Lf}}}}}}}}{cB`{{Gh{}{{Cd{{f{Mh}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Md}}}}}}}}{cB`{{Gh{}{{Cd{{f{Mb}}}}}}}}{cB`{{Gh{}{{Cd{Lj}}}}}}{cB`{{Gh{}{{Cd{{f{Lj}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Al}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{d}}}}}}}}{cB`{{Gh{}{{Cd{Il}}}}}}{cB`{{Gh{}{{Cd{{Cb{Il}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Gb}}}}}}}}{cB`{{Gh{}{{Cd{{f{Ah}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Ij}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Lj}}}}}}}}{cB`{{Gh{}{{Cd{{f{Lf}}}}}}}}{cB`{{Gh{}{{Cd{Gb}}}}}}{cB`{{Gh{}{{Cd{Mb}}}}}}{cB`{{Gh{}{{Cd{{f{d}}}}}}}}{cB`{{Gh{}{{Cd{d}}}}}}{{{f{Ah}}{Fn{Lf}}}B`}{{{f{Ah}}{Fn{Mh}}}B`}{{{f{Ah}}{Fn{Lb}}}B`}{{{f{Ah}}{Fn{Ij}}}B`}{{{f{Ah}}{Fn{Mb}}}B`}{{{f{Ah}}{Fn{Al}}}B`}{{{f{Ah}}{Fn{Gb}}}B`}{{{f{Ah}}{Fn{Lj}}}B`}{{{f{Ah}}{Fn{Il}}}B`}{{{f{Ah}}{Fn{Md}}}B`}{{{f{Ah}}Fh{f{Ef}}}B`}{{{f{B`}}FhFh}B`}{{{f{BIj}}Fh}{{Bd{IdBb}}}}{{{f{B`}}}Fh}{{{f{B`}}}C`}{{{f{BIj}}Fh}{{Cb{{f{If}}}}}}{{{f{BIj}}FhFh}{{Cb{{f{If}}}}}}{{{f{BIj}}Fh}Id}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}{f{Ah}}}{{Bd{{l{Aj}}Bb}}}}{{{f{B`}}{f{B`}}}{{Bd{{l{Aj}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Aj}}Bb}}}AMj}301{{{f{B`}}{f{Ah}}}}{{{f{BIj}}}d}{{{f{Ih}}{f{Cnc}}}bAGb}{{{f{B`}}{Cb{Fh}}}B`}{{{f{B`}}}{{Bd{{f{{l{Ld}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{In}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Mf}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}`{{}Fh}00{ce{}{}}00{B`AOh}1{BA`B`}{B`B`}<{{{f{B`}}}{{Bd{{l{Aj}}Bb}}}}000{{{f{BIj}}}{{l{Aj}}}}0{{}d}0{{{f{B`}}}Ih}{{{f{B`}}}DGf}{{{f{BIj}}}Fh}{{{f{BIj}}Fh}B`}{{{f{B`}}}{{Bd{{f{{l{j}}}}Bb}}}}{B`BGj}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}{f{Ah}}}}{{{f{B`}}{f{B`}}}{{Bd{{l{Aj}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Aj}}Bb}}}AMj}3120{{{f{B`}}}{{Bd{{Cb{c}}Bb}}}Kn}{{{f{BIj}}}{{Bd{L`Bb}}}}{{{f{BIj}}}{{Cb{Lb}}}}{{{f{B`}}}L`}1232{{{f{B`}}c}{}{AdKn}}{{B`B`}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AdKn}}?{{{f{BIj}}}{{Bd{FhBb}}}}{{{f{BIj}}}{{f{Ah}}}}{{{f{Ah}}c}B`{{Hh{{An{AJl}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{B`}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{Md}}}}}}{{{f{Ah}}c}B`{{Hh{{An{Mh}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{AJh}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{Eh}}}}}}{{{f{Ah}}{Ln{Mb}}}B`}{{{f{Ah}}c}B`{{Hh{{An{Il}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Dl{{An{Al}}}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{Lf}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Fn{Al}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{AJh}}}}}}{{{f{Ah}}{Ln{Gb}}}B`}{{{f{Ah}}c}B`{{Hh{{An{{Cb{ANf}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{Al}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{Mb}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{Mb}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{Md}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{B`}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{{Fn{Al}}}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{ANf}}}}}}{{{f{Ah}}{f{B`}}}B`}{{{f{Ah}}c}B`{{Hh{{An{{Cb{Lj}}}}}}}}{{{f{Ah}}{Ln{Md}}}B`}{{{f{Ah}}c}B`BA`}{{{f{Ah}}c}B`{{Hh{{An{Lb}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{AJl}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Dl{Ah}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{Eh}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{{f{Ah}}}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{Gb}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{{Dl{Ah}}}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{ANd}}}}}}{{{f{Ah}}c}B`{{Hh{{An{d}}}}}}{{{f{Ah}}c}B`{{Hh{{An{Lf}}}}}}{{{f{Ah}}c}B`{{Hh{{An{Al}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{{f{{An{Al}}}}}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{ANd}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{Lj}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{Lb}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{f{{An{Al}}}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{Ij}}}}}}{{{f{Ah}}c}B`{{Hh{{An{Id}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{d}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{f{Ah}}}}}}}}{{{f{Ah}}{Ln{Il}}}B`}{{{f{Ah}}c}B`{{Hh{{An{{Cb{Mh}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{Il}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{Ij}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{{Dl{{An{Al}}}}}}}}}}}}{{{f{Ah}}c}B`{{Hh{{An{{Cb{Gb}}}}}}}}{{{f{Ah}}{f{Ef}}}B`}{{{f{BIj}}FhFh}B`}{{{f{Ah}}Fh}B`}{{{f{CnDGf}}}Cb}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}{f{Ah}}}{{Bd{{l{Aj}}Bb}}}}{{{f{B`}}{f{B`}}}{{Bd{{l{Aj}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Aj}}Bb}}}AMj}3{{{f{B`}}{f{Ah}}}}2{{{f{B`}}c}{}AMj}{{{f{B`}}}{{Bd{{f{ABh}}Bb}}}}{{{f{BIj}}}Fh}`{{{f{B`}}}{{Ch{K`}}}}{{{f{B`}}}{{Bd{L`Bb}}}}{{{f{BIj}}LbMn}{{Bd{L`Bb}}}}{{{f{BIj}}}B`}{{B`c}{}{AdKn}}{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AdKn}}{{{f{CnBIj}}{f{Ah}}}b}{{{f{CnB`}}{f{Ah}}}{{f{CnB`}}}}{{{f{B`}}{Fn{{Ch{Cf}}}}}B`}{{{f{B`}}{Ch{Cf}}}B`}7{IhIh}{{{f{BIj}}{f{Dh}}Nb}{{Bd{B`Bb}}}}{{{f{B`}}Lbdd{Cb{Il}}}{{Bd{B`Bb}}}}{{{f{B`}}Fhdd{Cb{Il}}}{{Bd{B`Bb}}}}{{{f{CnB`}}Ih}b}{{{f{BIj}}Gb}B`}{{{f{CnBIj}}}b}{{{f{CnB`}}}b}{{{f{B`}}{Cb{Il}}}B`}{{{f{DGf}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{BIj}}GbFh}B`}{{{f{B`}}Ej}{{Bd{B`Bb}}}}{{{f{BIj}}Ej}{{Bd{B`Bb}}}}{{{f{BIj}}Al}{{Cb{Lb}}}}{{{f{BIj}}Al}{{Bd{L`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{A`}}}}Bb}}}}{{{f{B`}}Fh}{{Bd{{Dl{Ah}}Bb}}}}{{{f{B`}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{AJn}}Bb}}}}{{{f{B`}}c}{}{AdKn}}{{B`B`}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AdKn}}{{{f{B`}}}{{Bd{cBb}}}Kn}{{{f{BIj}}}{{Bd{L`Bb}}}}{{{f{B`}}}{{Bd{L`Bb}}}}{{{f{B`}}{Cb{Fh}}}B`}{{{f{BIj}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{An{Nh}}}}Ih}B`}{{{f{B`}}{f{{An{Nh}}}}}B`}{{{f{BIj}}{f{{An{Md}}}}}{{Bd{B`Bb}}}}{{{f{BIj}}{f{{An{Md}}}}}B`}{{{f{B`}}{f{{An{Md}}}}d}B`}{{{f{B`}}{f{{l{El}}}}d}{{Bd{B`Bb}}}}{{{f{BIj}}{f{{l{El}}}}}B`}{{{f{B`}}{f{{An{Md}}}}}B`}{{{f{B`}}{f{{l{El}}}}d}B`}{{{f{B`}}}{{Bd{{f{{Jb{KbJd}}}}Bb}}}}{{{f{B`}}Fhd}{{Ch{Cf}}}}{{{f{B`}}{Cb{{f{Ah}}}}d}{{Bd{AOhBb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{c}}}e{}{}}0{{{f{B`}}}{{Dl{B`}}}}{{{f{c}}}Eh{}}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{c{{Bd{e}}}{}{}}0{{{Gf{{f{Ah}}{Fn{{Ch{Cf}}}}}}}{{Bd{B`Bb}}}}{{{Gf{{f{AMn}}{Fn{{Ch{Cf}}}}}}}{{Bd{B`Bb}}}}{{{Gf{{f{Ah}}{Ch{Cf}}}}}{{Bd{B`Bb}}}}3{{{Gf{{f{AMn}}{Ch{Cf}}}}}{{Bd{B`Bb}}}}444{{{f{c}}}Ol{}}00{{{f{B`}}}{{Bd{{f{{l{Lh}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ll}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{M`}}}}Bb}}}}{{{f{BIj}}}{{Bd{B`Bb}}}}?{{{f{BIj}}}{{Bd{{f{{l{c}}}}Bb}}}Dd}`{{{f{BIj}}Al}{{Cb{Lb}}}}{{{f{BIj}}Al}{{Bd{L`Bb}}}}{ce{}{}}00{{B`{f{Ah}}}B`}{{{f{B`}}c}B`{AdKn}}{{{f{B`}}{f{{l{Aj}}}}{f{B`}}}{{Bd{B`Bb}}}}````{{{f{B`}}{f{B`}}c}B`{{E`{{f{B`}}{f{B`}}}{{Df{B`}}}}}}{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Bf}}}}{f{B`}}}{{Bd{B`Bb}}}}`210210210210``{{{f{BNd}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Fd}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BNd}}c}{{Bd{B`Bb}}}Af}{{{f{{l{Fd}}}}c}{{Bd{B`Bb}}}Af}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{CHh}}}CHh}{{{f{c}}{f{Cne}}}b{}{}}{{}CHh}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{CHh}}{f{CHh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CHh}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{CHh}}{f{Cnc}}}bAGb}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}3``{{{f{c}}h}b{}}{{{f{CnDn}}}{{f{CnB`}}}}{{{f{Dn}}}{{f{B`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{Dn}}}Dn}{{{f{c}}{f{Cne}}}b{}{}}{{{f{Dn}}}B`}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{cc{}}{{}Fh}{ce{}{}}{{{f{CnB`}}}Dn}{{{f{CnDn}}{f{Cn{Ch{Cf}}}}}b}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}5{{{f{CnDn}}{f{Cn{Ch{Cf}}}}e}c{}{{Dh{{f{Dn}}}{{Df{c}}}}}}","D":"AEJbLl","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",10429],[5,"ListType",1688,10430],[5,"ChunkedArray",17,10431],[10,"PolarsNumericType",1688,10430],[5,"StringType",1688,10430],[5,"BinaryType",1688,10430],[10,"Num",10432],[10,"ToPrimitive",10433],[1,"str"],[5,"BooleanType",1688,10430],[1,"u8"],[1,"slice"],[5,"Series",9951,10434],[6,"PolarsError",3102,10435],[6,"Result",10436],[10,"NumOpsDispatchInner",10352,10437],[6,"GroupsProxy",3475,10438],[5,"FixedSizeListType",1688,10430],[5,"ObjectType",1688,10430],[10,"PolarsObject",1261,10439],[5,"Settings",17,10431],[6,"Option",10440],[17,"Item"],[10,"Array",10441],[5,"Box",10442],[10,"Iterator",10443],[5,"AmortizedListIter",10444],[0,"mut"],[17,"IsNested"],[5,"FalseT",1688,10430],[10,"PolarsDataType",1688,10430],[17,"Output"],[10,"Fn",10445],[10,"Copy",10446],[6,"Cow",10447],[5,"UnstableSeries",10405,10448],[10,"FnMut",10445],[5,"Float32Type",1688,10430],[5,"Float64Type",1688,10430],[6,"DataType",1688,10449],[5,"String",10450],[5,"SortOptions",1383,10451],[5,"UInt32Type",1688,10430],[5,"BinaryOffsetType",1688,10430],[5,"SortMultipleOptions",1383,10451],[10,"PolarsIntegerType",1688,10430],[10,"NumOpsDispatchCheckedInner",10373,10452],[5,"Iter",10453],[1,"usize"],[1,"fn"],[5,"Map",10454],[5,"Vec",10455],[10,"DoubleEndedIterator",10456],[1,"i64"],[5,"OffsetsBuffer",10457],[1,"tuple"],[10,"IntoIterator",10458],[5,"Formatter",10459],[5,"Error",10459],[17,"Array"],[10,"FallibleIterator",10460],[5,"Bitmap",10461],[10,"Borrow",10462],[10,"PolarsAsRef",10463],[10,"AsRef",10464],[10,"IntoParallelIterator",10465],[10,"Send",10446],[10,"Sync",10446],[10,"NoOption",10466],[10,"TrustedLen",10467],[6,"AnyValue",1688,10468],[10,"PolarsObjectSafe",1261,10439],[6,"IsSorted",9951,10469],[1,"f32"],[1,"u64"],[5,"Int32Type",1688,10430],[5,"DateType",1688,10430],[5,"Logical",1688,10470],[5,"Int64Type",1688,10430],[6,"TimeUnit",1688,10471],[5,"DatetimeType",1688,10430],[5,"Int128Type",1688,10430],[5,"DecimalType",1688,10430],[5,"DurationType",1688,10430],[10,"ExactSizeIterator",10472],[5,"TimeType",1688,10430],[10,"PolarsFloatType",1688,10430],[10,"PolarsIterator",1189,10473],[5,"Iter",10474],[5,"IterNames",10474],[6,"ChunkedArrayLayout",17,10431],[10,"NumCast",10433],[5,"Scalar",1688,10468],[1,"f64"],[5,"Int16Type",1688,10430],[1,"i16"],[5,"UInt16Type",1688,10430],[1,"u16"],[5,"UInt64Type",1688,10430],[5,"Range",10475],[5,"UInt8Type",1688,10430],[1,"i32"],[1,"u32"],[5,"Int8Type",1688,10430],[1,"i8"],[10,"ParallelIterator",10465],[10,"IndexedParallelIterator",10465],[6,"QuantileInterpolOptions",3838,10476],[5,"Field",1688,10477],[5,"RollingOptionsFixedWindow",3838,10478],[10,"PolarsOpsNumericType",10479],[10,"Sized",10446],[5,"ChunkId",3838,10480],[17,"HasViews"],[5,"RandomState",10481],[5,"BytesHash",10482],[5,"ViewRepr",10483],[1,"array"],[5,"Dim",10484],[5,"ArrayBase",10483],[5,"OwnedRepr",10485],[6,"Either",10486],[5,"TypeId",10487],[5,"NullableIdxSize",3838,10480],[10,"FnOnce",10445],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",867,10488],[5,"AnonymousListBuilder",895,10489],[5,"AnonymousOwnedListBuilder",895,10489],[5,"ListBooleanChunkedBuilder",895,10490],[5,"ListPrimitiveChunkedBuilder",895,10491],[10,"ListBuilderTrait",895,10492],[10,"ChunkedBuilder",895,10493],[5,"ListStringChunkedBuilder",895,10494],[5,"ListBinaryChunkedBuilder",895,10494],[5,"ListNullChunkedBuilder",895,10495],[5,"BinViewChunkedBuilder",895,10496],[10,"ViewType",10497],[5,"BooleanChunkedBuilder",895,10498],[5,"NullChunkedBuilder",895,10499],[5,"PrimitiveChunkedBuilder",895,10500],[10,"Clone",10501],[5,"NullChunked",10502],[10,"NewChunkedArray",895,10493],[10,"ChunkedCollectInferIterExt",1169,10503],[10,"ChunkedCollectIterExt",1169,10503],[10,"Canonical",1183,10504],[10,"ChunkedCollectParIterExt",1185,10505],[10,"FromParIterWithDtype",1185,10505],[5,"BooleanArray",10506],[5,"BoolIterNoNull",1189,10473],[5,"FixedSizeListArray",10507],[5,"FixedSizeListIterNoNull",1189,10473],[5,"StructIter",1189,10473],[5,"SomeIterator",1189,10473],[5,"ObjectArray",1261,10439],[6,"ArrowDataType",1688,10508],[10,"Any",10487],[10,"Debug",10459],[5,"BitmapIter",10509],[6,"ZipValidity",10510],[5,"Arc",3838,10511],[5,"ObjectChunkedBuilder",1332,10512],[10,"AnonymousObjectBuilder",1355,10513],[5,"ObjectRegistry",1355,10513],[17,"FuncRet"],[10,"ChunkApply",1383,10514],[10,"ChunkApplyKernel",1383,10514],[10,"ChunkSort",1383,10514],[10,"ChunkUnique",1383,10514],[10,"ChunkCast",1383,10514],[6,"FillNullStrategy",1383,10514],[10,"ChunkCompare",9951,10514],[10,"ChunkExplode",1383,10514],[10,"ChunkFillNullValue",1383,10514],[10,"ChunkFilter",1383,10514],[10,"ChunkFull",1383,10514],[10,"ChunkFullNull",1383,10514],[10,"ChunkAnyValue",1383,10514],[10,"Hasher",10515],[10,"IsFirstDistinct",1383,10514],[10,"IsLastDistinct",1383,10514],[10,"ChunkAgg",1383,10514],[10,"ChunkQuantile",1383,10514],[10,"ChunkExpandAtIndex",1383,10514],[10,"Reinterpret",1383,10514],[10,"ChunkReverse",1383,10514],[10,"ChunkRollApply",1383,10514],[10,"ChunkSet",1383,10514],[10,"ChunkShift",1383,10514],[10,"ChunkShiftFill",1383,10514],[10,"SlicedArray",1383,10516],[10,"ChunkVar",1383,10514],[10,"ChunkTake",1383,10514],[10,"ChunkTakeUnchecked",1383,10514],[10,"ChunkBytes",1383,10514],[10,"ChunkZip",1383,10514],[10,"BinaryFnMut",1581,10517],[10,"StaticArray",1688,10518],[10,"TernaryFnMut",1581,10517],[10,"Error",10519],[10,"UnaryFnMut",1581,10517],[5,"PrimitiveArray",10520],[6,"SearchSortedSide",1621,10521],[5,"NoNull",3838,10522],[5,"RowsEncoded",10523],[5,"NaiveDateTime",10524],[6,"Tz",10525],[5,"NaiveTime",10526],[5,"StructChunked",1688,10527],[5,"CategoricalChunked",1688,10528],[5,"CategoricalChunkedBuilder",1688,10529],[10,"ArrayFromIter",1688,10530],[10,"ArrayFromIterDtype",1688,10530],[10,"AsRefDataType",1688,10449],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",10531],[10,"From",10464],[5,"BinaryViewArrayGeneric",10497],[6,"RevMapping",1688,10532],[10,"CategoricalMergeOperation",1688,10533],[10,"LogicalType",1688,10470],[6,"CategoricalOrdering",1688,10532],[5,"OwnedObject",1688,10468],[6,"UnknownKind",1688,10449],[5,"CategoricalType",1688,10430],[6,"ArrowTimeUnit",1688],[10,"ArrayCollectIterExt",1688,10530],[5,"GlobalRevMapMerger",1688,10533],[10,"NumericNative",1688,10430],[10,"Into",10464],[5,"ArrowField",3838],[6,"PrimitiveType",10534],[6,"IntegerType",10535],[5,"TimeDelta",10536],[5,"NaiveDate",10537],[5,"LazyCompact",10538],[5,"SmartString",10539],[10,"GetAnyValue",1688,10468],[5,"CatIter",1688,10528],[6,"Ordering",10540],[5,"Duration",3838,10541],[1,"u128"],[6,"PhysicalType",10535],[5,"DataFrame",3193,10542],[5,"StringCacheHolder",3081,10543],[5,"ErrString",3102,10435],[6,"PolarsWarning",3102,10544],[5,"Error",10545],[5,"Error",10546],[5,"Utf8Error",10547],[6,"Error",10548],[6,"Error",10549],[5,"TryReserveError",10550],[10,"Display",10459],[5,"Schema",3838,10551],[10,"IntoSeries",9951,10552],[6,"NullStrategy",3193,10542],[6,"UniqueKeepStrategy",3193,10542],[5,"HashSet",10553],[5,"ArrowSchema",3838,10554],[5,"Row",3729,10555],[5,"GroupBy",3475,10556],[5,"DynamicGroupOptions",3838,10557],[5,"RangeToInclusive",10475],[5,"RangeFull",10475],[5,"RangeFrom",10475],[5,"RangeTo",10475],[5,"RangeInclusive",10475],[5,"RecordBatchIter",3193,10542],[5,"PhysRecordBatchIter",3193,10542],[5,"LazyFrame",3838,10558],[10,"IntoVec",3838,10522],[5,"MeltArgs",3446,10559],[5,"RollingGroupOptions",3838,10557],[10,"RangeBounds",10475],[6,"IndexOrder",3838,10560],[5,"RecordBatchT",10561],[5,"StructArray",3838,10562],[5,"GroupsIdx",3475,10438],[5,"UnitVec",10563],[6,"GroupByMethod",3475,10556],[5,"SlicedGroups",3475,10438],[5,"GroupsProxyParIter",3475,10438],[10,"UnindexedConsumer",10564],[6,"GroupsIndicator",3475,10438],[6,"IRAggExpr",10565],[10,"IntoGroupsProxy",3475,10566],[5,"Copied",10567],[5,"Zip",10568],[5,"GroupsProxyIter",3475,10438],[10,"IsFloat",10569],[10,"NativeType",10570],[10,"AggList",3713,10571],[10,"TakeExtremum",3713,10572],[10,"PhysicalAggExpr",3726,10573],[6,"AnyValueBuffer",3729,10574],[6,"AnyValueBufferTrusted",3729,10574],[5,"Node",10575],[6,"IR",10576],[5,"Arena",10575],[6,"AExpr",10565],[10,"JoinDispatch",3838,10577],[5,"JoinArgs",3838,10578],[10,"DfTake",3838,10579],[10,"DataFrameOps",3838,10580],[5,"CsvReader",3838,10581],[10,"PhysicalIoExpr",10582],[10,"MmapBytesReader",10583],[6,"Expr",3838,10584],[10,"LhsNumOps",10352,10437],[10,"NumOpsDispatch",10352,10437],[5,"LazyGroupBy",3838,10558],[10,"Allocator",10585],[5,"JoinBuilder",3838,10558],[10,"AnonymousScan",3838,10586],[5,"LazyJsonLineReader",3838,10587],[5,"ScanArgsAnonymous",3838,10588],[10,"FunctionOutputField",3838,10589],[5,"SpecialEq",3838,10589],[6,"VisitRecursion",10590],[6,"FunctionExpr",3838,10591],[10,"ArgAgg",3838,10592],[5,"ArrayNameSpace",3838,10593],[5,"ListNameSpace",3838,10594],[10,"SeriesTrait",9951,10469],[5,"FieldsMapper",3838,10595],[5,"IpcStreamReader",3838,10596],[10,"Read",10597],[10,"SeriesUdf",3838,10589],[10,"AsBinary",3838,10598],[10,"StringMethods",8968,10599],[5,"BorrowedFd",10600],[10,"AsFd",10600],[10,"AsList",3838,10601],[10,"AsRawFd",10602],[6,"AggExpr",3838,10584],[10,"SeriesSealed",3838,10603],[10,"AsString",3838,10604],[20,"MaybeUninit",10605],[10,"StringNameSpaceImpl",3838,10606],[5,"OwnedBatchedCsvReader",3838,10607],[5,"CsvWriter",3838,10608],[5,"BatchedWriter",10608],[10,"Write",10597],[5,"IpcWriter",3838,10609],[5,"BatchedWriter",10609],[5,"ParquetReader",3838,10610],[5,"BatchedParquetReader",3838,10611],[5,"ParquetWriter",3838,10612],[5,"BatchedWriter",10613],[5,"BatchedCsvReader",3838,10607],[5,"BinaryNameSpace",8951,10614],[6,"Operator",3838,10584],[10,"RenameAliasFn",3838,10589],[5,"UserDefinedFunction",3838,10615],[10,"SeriesBinaryUdf",3838,10589],[5,"InProcessQuery",3838,10616],[5,"HashMap",10617],[5,"CategoricalNameSpace",3838,10618],[10,"RoundSeries",3838,10619],[10,"TemporalMethods",9834,10620],[10,"NumOpsDispatchChecked",10373,10452],[5,"RollingOptionsDynamicWindow",3838,10621],[5,"Bounds",3838,10622],[5,"LazyCsvReader",3838,10623],[5,"ScanArgsIpc",3838,10624],[6,"ClosedWindow",3838,10625],[5,"ScanArgsParquet",3838,10626],[6,"Label",3838,10625],[6,"StartBy",3838,10625],[5,"Window",3838,10627],[5,"CsvReadOptions",3838,10628],[5,"CsvParseOptions",3838,10628],[6,"CsvEncoding",3838,10628],[6,"CommentPrefix",3838,10628],[6,"NullValues",3838,10628],[5,"CsvWriterOptions",3838,10629],[5,"SerializeOptions",3838,10629],[6,"QuoteStyle",3838,10629],[5,"IpcScanOptions",3838,10630],[5,"IpcWriterOptions",3838,10609],[6,"IpcCompression",3838,10609],[5,"JsonWriterOptions",3838,10631],[5,"ParquetOptions",3838,10632],[6,"ParallelStrategy",3838,10632],[5,"ParquetWriteOptions",3838,10633],[6,"JoinCoalesce",3838,10578],[6,"ParquetCompression",3838,10633],[6,"JoinType",3838,10578],[5,"GzipLevel",3838,10633],[6,"JoinValidation",3838,10578],[5,"BrotliLevel",3838,10633],[5,"ZstdLevel",3838,10633],[5,"AsOfOptions",3838,10634],[6,"AsofStrategy",3838,10634],[6,"InterpolationMethod",3838,10635],[6,"ClosedInterval",3838,10636],[6,"RankMethod",3838,10637],[5,"RankOptions",3838,10637],[6,"DslPlan",3838,10638],[5,"When",3838,10639],[5,"Then",3838,10639],[5,"ChainedWhen",3838,10639],[5,"ChainedThen",3838,10639],[6,"Excluded",3838,10584],[6,"BooleanFunction",3838,10640],[6,"CategoricalFunction",3838,10641],[6,"PowFunction",3838,10642],[6,"StringFunction",3838,10643],[5,"DatetimeArgs",3838,10644],[5,"DurationArgs",3838,10644],[5,"RollingCovOptions",3838,10645],[5,"StrptimeOptions",3838,10645],[5,"JoinOptions",3838,10645],[6,"WindowType",3838,10645],[6,"WindowMapping",3838,10645],[6,"NestedType",3838,10645],[5,"OptState",3838,10646],[6,"LiteralValue",3838,10647],[5,"AnonymousScanOptions",3838,10648],[5,"UnionArgs",3838,10648],[5,"FileMetaData",3838,10649],[5,"RollingVarParams",3838,10650],[5,"RollingQuantileParams",3838,10650],[6,"NonExistent",3838,10651],[10,"LazyFileListReader",3838,10652],[5,"CloudOptions",9103,10653],[10,"Ord",10540],[6,"ColumnOrder",10654],[10,"BinaryNameSpaceImpl",3838,10655],[5,"PathBuf",10656],[5,"IpcStreamWriterOption",3838,10596],[10,"SerWriter",3838,10657],[5,"IpcWriterOption",3838,10609],[10,"CrossJoin",3838,10658],[10,"ExprEvalExtension",3838,10659],[10,"DateMethods",8968,10660],[10,"DatetimeMethods",8968,10661],[10,"DurationMethods",8968,10662],[10,"BinaryUdfOutputField",3838,10589],[10,"Default",10663],[5,"RowGroupMetaData",10664],[5,"ParquetStatistics",3838],[6,"NullBehavior",10379,10665],[5,"Weak",10511],[5,"DateLikeNameSpace",9459,10666],[1,"char"],[10,"FromIterator",10458],[10,"PartialEq",10540],[10,"Scalar",10667],[10,"ListNameSpaceExtension",3838,10668],[10,"Command",10669],[5,"StructNameSpace",3838,10670],[10,"SerReader",3838,10657],[5,"IpcReader",3838,10630],[5,"IpcStreamWriter",3838,10596],[5,"JsonWriter",3838,10631],[5,"JsonReader",3838,10631],[5,"JsonLineReader",3838,10671],[5,"File",10672],[10,"UdfSchema",3838,10673],[6,"StructFunction",10674],[6,"ListFunction",10675],[6,"RangeFunction",10676],[6,"BinaryFunction",10677],[6,"TemporalFunction",10678],[6,"ArrayFunction",10679],[10,"ToOwned",10447],[1,"never"],[5,"Path",10656],[5,"CString",10680],[5,"CStr",10681],[5,"OsString",10682],[5,"OsStr",10682],[5,"MutableStatistics",10683],[5,"GrowableStruct",10684],[5,"MutableStructArray",10685],[10,"FromData",9453,10686],[5,"Buffer",10687],[10,"FromDataUtf8",9453,10686],[10,"FromDataBinary",9453,10686],[5,"ListArray",10688],[6,"Ambiguous",3838,10651],[10,"NamedFromOwned",3838,10689],[10,"DataFrameJoinOps",3838,10690],[5,"FunctionOptions",10648],[10,"PartialOrd",10540],[6,"Context",10638],[10,"SeriesReshape",3838,10691],[10,"IndexOfSchema",3838,10551],[5,"BoundsIter",3838,10627],[6,"ReaderBytes",10583],[10,"PolarsTemporalGroupby",3838,10557],[10,"PolarsArray",3838,10692],[10,"Hash",10515],[10,"SeriesJoin",3838,10693],[10,"TimeMethods",8968,10694],[10,"IntoListNameSpace",3838,10668],[5,"FileMetaData",10695],[10,"SeriesMethods",3838,10696],[5,"StructValueIter",10697],[10,"AsofJoin",3838,10634],[10,"AsofJoinBy",3838,10698],[10,"ListNameSpaceImpl",3838,10699],[5,"ExprNameNameSpace",3838,10700],[5,"KeyValue",10695],[10,"IntoLazy",3838,10558],[10,"Literal",3838,10647],[5,"Null",3838,10647],[5,"RowIndex",10701],[10,"ChunkAggSeries",3838,10702],[10,"QuantileAggSeries",3838,10703],[10,"PolarsMonthEnd",3838,10704],[10,"PolarsMonthStart",3838,10705],[10,"IndexToUsize",3838,10706],[10,"NamedFrom",3838,10689],[6,"RowGroupFetcher",10611],[5,"SplitNChars",3838,10707],[5,"Pin",10708],[5,"Request",10519],[10,"SeriesRank",3838,10637],[5,"BorrowedCursor",10709],[10,"VarInt",10710],[5,"IoSliceMut",10597],[10,"SeriesOpsTime",8968,10711],[10,"PolarsRound",3838,10712],[5,"AnonymousScanArgs",3838,10586],[10,"ChunkedSet",3838,10479],[5,"SchemaDescriptor",10713],[6,"SeekFrom",10597],[10,"VarAggSeries",3838,10714],[5,"StringNameSpace",10715],[10,"TakeChunked",3838,10579],[5,"IRPlan",10576],[10,"ToDummies",3838,10716],[10,"PolarsTruncate",3838,10717],[5,"AllocError",10585],[5,"RwLock",10718],[5,"SchemaInferenceResult",9804,10719],[10,"PolarsUpsample",3838,10720],[10,"VecHash",3838,10721],[5,"NonZero",10722],[6,"JsonFormat",3838,10631],[5,"BTreeMap",10723],[5,"IoSlice",10597],[10,"ArrayNameSpace",8932,10724],[10,"AsArray",8932,10725],[10,"AsString",9035,10599],[6,"Pattern",9035,10726],[5,"DatetimeInfer",9073,10727],[10,"StrpTimeParser",9073,10727],[17,"Error"],[10,"TryFromWithUnit",9073,10727],[6,"CloudType",9103,10653],[5,"AnonymousBuilder",9514,10728],[6,"RollingFunction",9703,10729],[6,"RollingFunctionBy",9732,10730],[5,"MutableNullArray",9774,10731],[5,"MutableBitmap",10732],[10,"AsSeries",9834,10620],[5,"Utf8Array",10733],[5,"BinaryArray",10734],[5,"SeriesIter",9951,10735],[10,"InitHashMaps",1688],[10,"InitHashMaps2",1688],[5,"TrueT",1688],[15,"IO",8866],[15,"Context",8866],[15,"Count",8860],[15,"Slice",8861],[8,"AllowedOptimizations",3838],[10,"ListFromIter",3838],[15,"Quantile",8744],[15,"Min",8744],[15,"Max",8744],[15,"IsBetween",9659],[15,"Any",9659],[15,"All",9659],[15,"GroupBy",8754],[15,"Union",8754],[15,"Sort",8754],[15,"Cache",8754],[15,"ExtContext",8754],[15,"DataFrameScan",8754],[15,"Select",8754],[15,"HStack",8754],[15,"Scan",8754],[15,"MapFunction",8754],[15,"Filter",8754],[15,"Distinct",8754],[15,"Slice",8754],[15,"Sink",8754],[15,"Join",8754],[15,"HConcat",8754],[15,"SortBy",8805],[15,"Filter",8805],[15,"Cast",8805],[15,"Sort",8805],[15,"Gather",8805],[15,"RenameAlias",8805],[15,"Ternary",8805],[15,"Function",8805],[15,"Window",8805],[15,"AnonymousFunction",8805],[15,"Slice",8805],[15,"BinaryExpr",8805],[15,"Round",9662],[15,"RoundSF",9662],[15,"Clip",9662],[15,"BackwardFill",9662],[15,"ForwardFill",9662],[15,"Random",9662],[15,"GatherEvery",9662],[15,"ValueCounts",9662],[15,"Rank",9662],[15,"Replace",9662],[15,"CumCount",9662],[15,"CumSum",9662],[15,"CumProd",9662],[15,"CumMin",9662],[15,"CumMax",9662],[15,"Range",8863],[15,"ConcatHorizontal",9683],[15,"ConcatVertical",9683],[15,"ExtractGroups",9683],[15,"SplitExact",9683],[15,"Contains",9683],[15,"Find",9683],[15,"Replace",9683],[10,"Utf8FromIter",9947],[10,"BinaryFromIter",9947]],"r":[[1,10736],[2,10736],[3,10736],[4,10736],[6,10543],[7,10736],[8,10736],[9,10736],[13,10736],[14,10736],[16,10543],[17,10431],[18,10431],[19,10431],[25,10431],[118,10431],[151,10431],[152,10431],[178,10431],[179,10431],[240,10431],[305,10431],[454,10431],[594,10431],[598,10431],[736,10431],[867,10488],[895,10489],[896,10489],[897,10496],[898,10496],[899,10498],[900,10493],[901,10494],[902,10490],[903,10492],[904,10495],[905,10491],[906,10494],[907,10493],[908,10499],[909,10500],[910,10496],[1043,10493],[1059,10492],[1087,10493],[1152,10489],[1153,10489],[1154,10494],[1155,10490],[1156,10492],[1157,10495],[1158,10491],[1159,10494],[1167,10492],[1169,10503],[1170,10503],[1183,10504],[1185,10505],[1186,10505],[1189,10473],[1190,10473],[1191,10473],[1192,10473],[1193,10473],[1239,10473],[1259,10737],[1260,10737],[1261,10439],[1262,10439],[1263,10439],[1264,10439],[1275,10439],[1303,10439],[1332,10512],[1355,10513],[1356,10513],[1357,10513],[1358,10513],[1370,10513],[1371,10513],[1372,10513],[1375,10513],[1377,10513],[1384,10514],[1385,10514],[1386,10514],[1387,10514],[1388,10514],[1389,10514],[1390,10514],[1391,10514],[1392,10514],[1393,10514],[1394,10514],[1395,10514],[1396,10514],[1397,10514],[1398,10514],[1399,10514],[1400,10514],[1401,10514],[1402,10514],[1403,10514],[1404,10514],[1405,10514],[1406,10514],[1407,10514],[1408,10514],[1409,10514],[1410,10514],[1413,10514],[1414,10514],[1422,10514],[1423,10516],[1424,10451],[1425,10451],[1438,10514],[1479,10514],[1482,10514],[1491,10514],[1494,10514],[1537,10514],[1543,10514],[1579,10514],[1581,10517],[1585,10517],[1586,10517],[1587,10517],[1588,10517],[1589,10517],[1590,10517],[1591,10517],[1592,10517],[1593,10517],[1594,10517],[1595,10517],[1596,10517],[1597,10517],[1598,10517],[1599,10517],[1600,10517],[1601,10517],[1602,10517],[1603,10517],[1604,10517],[1605,10517],[1606,10517],[1607,10517],[1608,10517],[1609,10517],[1610,10517],[1611,10517],[1612,10517],[1613,10517],[1614,10517],[1615,10517],[1616,10738],[1617,10738],[1618,10739],[1619,10739],[1620,10739],[1624,10521],[1626,10521],[1644,10521],[1650,10516],[1651,10740],[1652,10740],[1653,10740],[1654,10740],[1657,10741],[1658,10742],[1659,10742],[1660,10742],[1661,10742],[1662,10742],[1663,10742],[1664,10742],[1665,10516],[1666,10451],[1667,10451],[1678,10743],[1679,10744],[1680,10744],[1681,10744],[1682,10743],[1683,10743],[1684,10745],[1685,10744],[1686,10744],[1687,10744],[1689,10468],[1693,10430],[1694,10530],[1695,10530],[1696,10530],[1697,10508],[1699,10449],[1703,10430],[1705,10430],[1706,10430],[1708,10430],[1713,10430],[1714,10430],[1715,10528],[1718,10528],[1719,10529],[1720,10533],[1721,10532],[1722,10430],[1723,10449],[1724,10449],[1725,10449],[1730,10746],[1731,10430],[1734,10747],[1735,10430],[1740,10748],[1741,10430],[1746,10749],[1747,10430],[1751,10430],[1752,10477],[1753,10477],[1756,10430],[1762,10430],[1763,10430],[1767,10430],[1768,10430],[1769,10468],[1771,10533],[1775,10750],[1776,10706],[1777,10750],[1778,10750],[1779,10751],[1780,10750],[1782,10430],[1783,10430],[1787,10430],[1788,10430],[1792,10430],[1793,10430],[1797,10430],[1798,10430],[1802,10430],[1803,10430],[1813,10430],[1814,10430],[1816,10470],[1817,10470],[1829,10430],[1832,10430],[1834,10430],[1835,10468],[1838,10751],[1839,10751],[1840,10750],[1841,10751],[1842,10751],[1843,10430],[1844,10430],[1845,10430],[1846,10430],[1848,10532],[1849,10468],[1851,10518],[1855,10430],[1857,10430],[1861,10527],[1867,10752],[1868,10430],[1869,10471],[1870,10449],[1873,10430],[1877,10430],[1878,10430],[1882,10430],[1883,10430],[1887,10430],[1888,10430],[1892,10430],[1893,10430],[1897,10449],[2066,10533],[2078,10470],[2167,10449],[2690,10533],[2691,10533],[2694,10449],[3058,10528],[3059,10528],[3060,10529],[3061,10533],[3062,10532],[3064,10533],[3068,10532],[3069,10533],[3071,10533],[3072,10533],[3073,10528],[3074,10528],[3075,10532],[3080,10532],[3081,10543],[3087,10543],[3090,10543],[3098,10543],[3107,10435],[3113,10435],[3114,10435],[3115,10544],[3129,10435],[3142,10435],[3158,10544],[3165,10435],[3166,10435],[3167,10435],[3168,10435],[3169,10435],[3170,10544],[3171,10435],[3190,10753],[3191,10753],[3192,10753],[3194,10542],[3199,10542],[3200,10542],[3202,10542],[3203,10542],[3270,10542],[3304,10542],[3367,10542],[3446,10559],[3475,10438],[3478,10556],[3479,10556],[3481,10438],[3482,10438],[3483,10438],[3484,10438],[3485,10438],[3486,10438],[3489,10438],[3491,10566],[3503,10438],[3512,10556],[3579,10556],[3589,10556],[3713,10571],[3714,10572],[3715,10572],[3716,10572],[3717,10572],[3718,10572],[3719,10572],[3720,10572],[3721,10572],[3722,10572],[3726,10573],[3731,10574],[3732,10574],[3752,10555],[3783,10555],[3804,10555],[3818,10555],[3819,10555],[3820,10555],[3836,10754],[3837,10754],[3840,10584],[3847,10646],[3849,10651],[3852,10586],[3853,10586],[3854,10648],[3860,10468],[3861,10511],[3862,10592],[3865,10488],[3870,10430],[3871,10530],[3873,10530],[3874,10530],[3875,10593],[3876,10441],[3877,10508],[3879,10554],[3881,10598],[3882,10601],[3884,10634],[3885,10449],[3886,10604],[3888,10634],[3889,10698],[3890,10634],[3893,10755],[3898,10607],[3899,10611],[3904,10430],[3905,10496],[3908,10655],[3910,10430],[3911,10430],[3913,10430],[3914,10589],[3921,10430],[3922,10498],[3923,10640],[3924,10430],[3925,10438],[3928,10622],[3929,10627],[3931,10633],[3935,10528],[3939,10528],[3940,10529],[3941,10641],[3942,10533],[3943,10618],[3944,10532],[3945,10430],[3948,10639],[3949,10639],[3950,10514],[3951,10702],[3952,10514],[3953,10514],[3954,10514],[3955,10514],[3956,10514],[3957,10514],[3958,10514],[3959,10514],[3960,10514],[3961,10514],[3962,10514],[3963,10514],[3964,10480],[3965,10578],[3966,10514],[3967,10514],[3968,10514],[3969,10514],[3970,10514],[3971,10514],[3972,10514],[3973,10514],[3974,10514],[3975,10514],[3976,10514],[3977,10514],[3978,10431],[3979,10493],[3980,10503],[3981,10503],[3982,10479],[3984,10636],[3985,10625],[3992,10628],[4003,10658],[4004,10628],[4005,10628],[4006,10628],[4007,10581],[4008,10608],[4009,10629],[4015,10449],[4016,10449],[4017,10542],[4018,10690],[4019,10580],[4023,10449],[4029,10746],[4030,10660],[4032,10430],[4035,10644],[4036,10747],[4037,10661],[4038,10430],[4043,10748],[4044,10430],[4046,10579],[4053,10638],[4057,10541],[4062,10644],[4063,10749],[4064,10662],[4065,10430],[4066,10650],[4067,10557],[4075,10584],[4079,10584],[4080,10659],[4081,10700],[4088,10755],[4089,10755],[4090,10430],[4091,10477],[4093,10477],[4094,10595],[4095,10700],[4096,10649],[4097,10756],[4099,10514],[4100,10514],[4110,10430],[4118,10430],[4119,10430],[4124,10430],[4125,10430],[4133,10686],[4134,10686],[4135,10686],[4139,10591],[4140,10589],[4144,10468],[4146,10589],[4148,10533],[4149,10556],[4151,10556],[4153,10438],[4154,10438],[4155,10438],[4156,10438],[4157,10438],[4158,10438],[4163,10633],[4172,10750],[4173,10755],[4177,10706],[4178,10750],[4179,10438],[4180,10480],[4181,10750],[4184,10616],[4186,10551],[4187,10560],[4188,10706],[4189,10751],[4190,10750],[4192,10578],[4195,10430],[4196,10430],[4201,10430],[4202,10430],[4207,10430],[4208,10430],[4213,10430],[4214,10430],[4219,10430],[4220,10430],[4223,10635],[4225,10566],[4226,10558],[4227,10668],[4228,10552],[4229,10522],[4231,10609],[4232,10630],[4233,10630],[4234,10596],[4235,10596],[4236,10596],[4237,10609],[4238,10609],[4239,10609],[4242,10514],[4246,10514],[4256,10578],[4257,10558],[4258,10578],[4259,10577],[4260,10645],[4262,10578],[4263,10578],[4265,10631],[4266,10671],[4268,10631],[4269,10631],[4270,10631],[4274,10625],[4276,10757],[4278,10757],[4279,10757],[4285,10623],[4286,10652],[4287,10558],[4288,10558],[4289,10587],[4295,10578],[4300,10437],[4307,10494],[4308,10490],[4309,10492],[4310,10430],[4312,10692],[4313,10594],[4314,10668],[4315,10699],[4316,10491],[4317,10494],[4318,10430],[4319,10647],[4321,10647],[4323,10470],[4326,10470],[4351,10559],[4369,10647],[4374,10689],[4375,10689],[4386,10645],[4388,10493],[4390,10522],[4391,10651],[4401,10647],[4409,10628],[4410,10480],[4411,10480],[4412,10437],[4413,10452],[4414,10430],[4417,10430],[4419,10430],[4423,10584],[4424,10646],[4431,10607],[4432,10468],[4433,10632],[4434,10633],[4435,10632],[4436,10610],[4438,10633],[4439,10612],[4440,10652],[4443,10751],[4444,10751],[4445,10750],[4446,10751],[4447,10751],[4449,10692],[4450,10430],[4451,10435],[4452,10430],[4453,10430],[4454,10473],[4455,10704],[4456,10705],[4457,10430],[4458,10439],[4459,10435],[4460,10712],[4461,10557],[4462,10717],[4464,10720],[4466,10642],[4467,10500],[4470,10703],[4471,10476],[4472,10629],[4480,10637],[4481,10637],[4482,10514],[4484,10589],[4489,10532],[4497,10645],[4500,10557],[4501,10621],[4502,10478],[4503,10650],[4504,10758],[4505,10650],[4508,10619],[4509,10759],[4512,10468],[4515,10588],[4516,10624],[4517,10626],[4518,10551],[4521,10551],[4522,10521],[4526,10657],[4527,10657],[4528,10629],[4529,10434],[4531,10589],[4532,10693],[4533,10696],[4534,10711],[4535,10637],[4536,10691],[4537,10603],[4538,10469],[4539,10589],[4552,10516],[4553,10438],[4558,10451],[4559,10451],[4560,10589],[4564,10707],[4566,10625],[4568,10518],[4576,10543],[4578,10430],[4579,10496],[4581,10643],[4582,10599],[4583,10606],[4585,10430],[4592,10645],[4596,10562],[4597,10527],[4600,10670],[4608,10579],[4610,10620],[4612,10639],[4619,10752],[4620,10694],[4621,10430],[4622,10471],[4623,10449],[4627,10716],[4633,10430],[4639,10430],[4640,10430],[4645,10430],[4646,10430],[4651,10430],[4652,10430],[4657,10430],[4658,10430],[4659,10673],[4663,10648],[4665,10542],[4668,10449],[4671,10615],[4680,10714],[4681,10721],[4683,10639],[4685,10627],[4688,10645],[4689,10645],[4696,10633],[4785,10760],[4790,10760],[4799,10761],[4809,10556],[4811,10762],[4813,10763],[4825,10763],[4836,10764],[4842,10765],[4845,10766],[4858,10767],[4863,10767],[4866,10514],[4872,10768],[4897,10769],[4901,10770],[4905,10771],[4913,10765],[4915,10639],[5167,10533],[5172,10770],[5180,10765],[5188,10755],[5189,10755],[5190,10755],[5198,10772],[5201,10773],[5203,10773],[5205,10773],[5387,10774],[5395,10763],[5399,10775],[5400,10762],[5402,10776],[5414,10762],[5425,10776],[5427,10777],[5430,10776],[5431,10776],[5432,10777],[5433,10777],[5442,10692],[5443,10778],[5448,10779],[5449,10449],[5457,10780],[5459,10763],[5460,10780],[5462,10780],[5464,10780],[5466,10763],[5467,10780],[5474,10736],[5476,10766],[5477,10768],[5478,10644],[5480,10766],[5481,10766],[5482,10744],[5483,10744],[5484,10744],[5547,10692],[5548,10577],[5801,10683],[5803,10736],[5805,10781],[5943,10782],[5944,10765],[5949,10762],[5950,10762],[5952,10644],[5960,10541],[5961,10541],[6213,10556],[6239,10514],[6276,10765],[6280,10692],[6283,10514],[6288,10783],[6381,10556],[6385,10763],[6389,10777],[6603,10514],[6611,10765],[6613,10514],[6654,10755],[6656,10755],[6667,10625],[6668,10625],[6745,10784],[6757,10785],[6758,10785],[6761,10786],[6769,10762],[6775,10706],[6776,10719],[6907,10766],[6908,10766],[6910,10787],[6911,10635],[6913,10787],[6914,10788],[7054,10636],[7056,10755],[7057,10789],[7064,10790],[7068,10791],[7071,10792],[7079,10770],[7082,10770],[7088,10778],[7124,10765],[7139,10765],[7151,10647],[7197,10533],[7198,10533],[7203,10764],[7214,10765],[7217,10765],[7225,10793],[7226,10755],[7227,10770],[7236,10770],[7242,10770],[7256,10449],[7267,10770],[7287,10768],[7327,10768],[7337,10794],[7338,10795],[7386,10796],[7407,10770],[7411,10765],[7412,10692],[7465,10435],[7466,10435],[7467,10435],[7468,10435],[7475,10690],[7485,10770],[7516,10763],[7527,10797],[7528,10798],[7530,10799],[7537,10785],[7542,10755],[7636,10800],[7638,10514],[7651,10772],[7689,10692],[7707,10514],[7721,10707],[7723,10707],[7740,10784],[7754,10768],[7755,10801],[7757,10801],[7759,10801],[7761,10801],[7763,10801],[7775,10770],[7798,10639],[7802,10766],[8353,10765],[8374,10692],[8532,10639],[8742,10514],[8884,10571],[8885,10572],[8886,10572],[8887,10572],[8888,10572],[8889,10572],[8890,10572],[8891,10572],[8892,10572],[8893,10572],[8897,10517],[8901,10517],[8902,10517],[8903,10517],[8904,10517],[8905,10517],[8906,10517],[8907,10517],[8908,10517],[8909,10517],[8910,10517],[8911,10517],[8912,10517],[8913,10517],[8914,10517],[8915,10517],[8916,10517],[8917,10517],[8918,10517],[8919,10517],[8920,10517],[8921,10517],[8922,10517],[8923,10517],[8924,10517],[8925,10517],[8926,10517],[8927,10517],[8928,10517],[8929,10517],[8930,10517],[8931,10517],[8932,10724],[8933,10725],[8951,10614],[8967,10618],[8968,10660],[8969,10661],[8970,10662],[8971,10621],[8972,10711],[8973,10599],[8974,10694],[9027,10802],[9035,10599],[9041,10726],[9042,10599],[9064,10599],[9073,10727],[9075,10727],[9076,10727],[9086,10727],[9105,10653],[9106,10653],[9140,10803],[9152,10653],[9153,10653],[9159,10468],[9163,10430],[9164,10530],[9165,10530],[9166,10530],[9167,10508],[9169,10449],[9173,10430],[9175,10430],[9176,10430],[9178,10430],[9183,10430],[9184,10430],[9185,10528],[9188,10528],[9189,10529],[9190,10533],[9191,10532],[9192,10430],[9193,10449],[9194,10449],[9195,10449],[9200,10746],[9201,10430],[9204,10747],[9205,10430],[9210,10748],[9211,10430],[9216,10749],[9217,10430],[9221,10430],[9222,10477],[9223,10477],[9226,10430],[9232,10430],[9233,10430],[9237,10430],[9238,10430],[9239,10468],[9241,10533],[9245,10750],[9246,10706],[9247,10750],[9248,10750],[9249,10751],[9250,10750],[9252,10430],[9253,10430],[9257,10430],[9258,10430],[9262,10430],[9263,10430],[9267,10430],[9268,10430],[9272,10430],[9273,10430],[9283,10430],[9284,10430],[9286,10470],[9287,10470],[9299,10430],[9302,10430],[9304,10430],[9305,10468],[9308,10751],[9309,10751],[9310,10750],[9311,10751],[9312,10751],[9313,10430],[9314,10430],[9315,10430],[9316,10430],[9318,10532],[9319,10468],[9321,10518],[9325,10430],[9327,10430],[9331,10527],[9337,10752],[9338,10430],[9339,10471],[9340,10449],[9343,10430],[9347,10430],[9348,10430],[9352,10430],[9353,10430],[9357,10430],[9358,10430],[9362,10430],[9363,10430],[9367,10449],[9380,10533],[9382,10470],[9387,10449],[9403,10533],[9404,10533],[9405,10449],[9423,10528],[9424,10528],[9425,10529],[9426,10533],[9427,10532],[9429,10533],[9433,10532],[9434,10533],[9436,10533],[9437,10533],[9438,10528],[9439,10528],[9440,10532],[9445,10532],[9446,10543],[9447,10543],[9448,10543],[9449,10543],[9450,10785],[9451,10785],[9452,10785],[9453,10686],[9454,10686],[9455,10686],[9459,10666],[9511,10573],[9514,10728],[9534,10738],[9535,10738],[9549,10640],[9551,10641],[9580,10591],[9611,10642],[9636,10643],[9655,10591],[9656,10591],[9657,10591],[9658,10591],[9697,10641],[9701,10642],[9707,10729],[9736,10730],[9761,10739],[9762,10739],[9763,10739],[9764,10635],[9767,10635],[9768,10788],[9769,10804],[9770,10805],[9771,10805],[9772,10805],[9773,10805],[9774,10731],[9804,10719],[9818,10719],[9831,10521],[9832,10521],[9833,10521],[9834,10620],[9835,10620],[9856,10516],[9859,10516],[9860,10740],[9861,10740],[9862,10740],[9863,10740],[9866,10741],[9867,10742],[9868,10742],[9869,10742],[9870,10742],[9871,10742],[9872,10742],[9873,10742],[9874,10516],[9875,10451],[9876,10451],[9887,10604],[9888,10707],[9889,10606],[9908,10784],[9916,10707],[9918,10707],[9920,10784],[9927,10801],[9929,10801],[9931,10801],[9933,10801],[9935,10801],[9941,10615],[9947,10806],[9948,10806],[9952,10514],[9954,10552],[9955,10469],[9958,10434],[9959,10735],[9960,10735],[9961,10469],[9975,10434],[10150,10434],[10264,10434],[10343,10434],[10352,10437],[10353,10437],[10354,10437],[10356,10437],[10360,10437],[10373,10452],[10374,10452],[10381,10665],[10405,10448],[10406,10448]],"b":[[31,"impl-Add-for-ChunkedArray%3CT%3E"],[32,"impl-Add-for-ChunkedArray%3CStringType%3E"],[33,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[34,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[35,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[37,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[38,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[39,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[40,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[41,"impl-Add-for-%26ChunkedArray%3CT%3E"],[42,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[44,"impl-AggList-for-ChunkedArray%3CListType%3E"],[45,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[46,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[47,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[48,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[49,"impl-AggList-for-ChunkedArray%3CT%3E"],[50,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[54,"impl-ChunkedArray%3CFixedSizeListType%3E"],[55,"impl-ChunkedArray%3CListType%3E"],[56,"impl-ChunkedArray%3CFixedSizeListType%3E"],[57,"impl-ChunkedArray%3CListType%3E"],[61,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[62,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[63,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[64,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[65,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[66,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[68,"impl-ChunkedArray%3CFixedSizeListType%3E"],[69,"impl-ChunkedArray%3CListType%3E"],[71,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkedArray%3CFloat64Type%3E"],[75,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[76,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[77,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[78,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[79,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[80,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[81,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[82,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[83,"impl-ChunkedArray%3CStringType%3E"],[84,"impl-ChunkedArray%3CT%3E"],[85,"impl-ChunkedArray%3CBinaryType%3E"],[88,"impl-ChunkedArray%3CFixedSizeListType%3E"],[89,"impl-ChunkedArray%3CListType%3E"],[90,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[91,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[92,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[93,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[94,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[95,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[96,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[97,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[98,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[99,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[100,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[101,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[103,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[104,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[105,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[106,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[107,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[108,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[109,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[110,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[111,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[112,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[116,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[117,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[120,"impl-ChunkedArray%3CStringType%3E"],[121,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[125,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[128,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[129,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[130,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[133,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[134,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[135,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[138,"impl-Flags-for-Settings"],[139,"impl-Settings"],[140,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[141,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[142,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[159,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[161,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[162,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[163,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[164,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[165,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[166,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[167,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[193,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[194,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[195,"impl-Div-for-%26ChunkedArray%3CT%3E"],[196,"impl-Div-for-ChunkedArray%3CT%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[206,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[207,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[208,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[209,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[210,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[211,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[212,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[213,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[214,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[215,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[216,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[217,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[218,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[219,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[220,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[221,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[222,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[223,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[224,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[225,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[228,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[229,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[230,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[231,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[232,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[233,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[234,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[235,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[236,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[237,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[238,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[241,"impl-Debug-for-ChunkedArray%3CT%3E"],[242,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[243,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[244,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[245,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[246,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[247,"impl-Debug-for-ChunkedArray%3CListType%3E"],[248,"impl-Octal-for-Settings"],[249,"impl-LowerHex-for-Settings"],[250,"impl-UpperHex-for-Settings"],[251,"impl-Binary-for-Settings"],[252,"impl-Debug-for-Settings"],[254,"impl-ChunkedArray%3CListType%3E"],[255,"impl-ChunkedArray%3CFixedSizeListType%3E"],[261,"impl-Settings"],[262,"impl-Flags-for-Settings"],[270,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[271,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[272,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[273,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[274,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[275,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[276,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[277,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[278,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[279,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[280,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[281,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[283,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[284,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[285,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[286,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[287,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[288,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[289,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[290,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[291,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[292,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[293,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[294,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[295,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[296,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[297,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[298,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[299,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[300,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[301,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[302,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[303,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[304,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[307,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[308,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[309,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[310,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[311,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[312,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[313,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[314,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[316,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[317,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[318,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[319,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[320,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[321,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[322,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[323,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[324,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[325,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[326,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[327,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[330,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[331,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[332,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[333,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[334,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[335,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[336,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[337,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[338,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[339,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[340,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[341,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[342,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[343,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[344,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[345,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[347,"impl-ChunkedArray%3CFixedSizeListType%3E"],[348,"impl-ChunkedArray%3CListType%3E"],[350,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[351,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[352,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[353,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[354,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[355,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[356,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[357,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[358,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[359,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[360,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[361,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[362,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[363,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[364,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[365,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[366,"impl-ChunkedArray%3CFixedSizeListType%3E"],[367,"impl-ChunkedArray%3CListType%3E"],[369,"impl-ChunkedArray%3CFixedSizeListType%3E"],[370,"impl-ChunkedArray%3CListType%3E"],[375,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[376,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[377,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[378,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[379,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[380,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[381,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[382,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[383,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[384,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[385,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[386,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[388,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[389,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[390,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[391,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[392,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[393,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[394,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[395,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[396,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[397,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[398,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[399,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[400,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[401,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[402,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[403,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[404,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[405,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[412,"impl-ChunkedArray%3CListType%3E"],[413,"impl-ChunkedArray%3CFixedSizeListType%3E"],[425,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[426,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[427,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[428,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[429,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[430,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[431,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[432,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[435,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[436,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[458,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[463,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[469,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[470,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[471,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[472,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[473,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[474,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[475,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[476,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[477,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[478,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[479,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[480,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[481,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[482,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[483,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[484,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[485,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[486,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[487,"impl-ChunkedArray%3CBooleanType%3E"],[488,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[489,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[490,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[491,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[492,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[493,"impl-ChunkedArray%3CBooleanType%3E"],[494,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[495,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[496,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[497,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[498,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[499,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[500,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[501,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[502,"impl-ChunkedArray%3CBooleanType%3E"],[504,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[505,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[506,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[507,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[508,"impl-ChunkedArray%3CBooleanType%3E"],[509,"impl-ChunkedArray%3CT%3E"],[510,"impl-Mul-for-ChunkedArray%3CT%3E"],[511,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[512,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[513,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[515,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[516,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[517,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[519,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[520,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[521,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[522,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[523,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[524,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[525,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[526,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[527,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[528,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[529,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[530,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[531,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[532,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[533,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[534,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[535,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[536,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[537,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[538,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[539,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[540,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[541,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[542,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[543,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[544,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[545,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[546,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[547,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[548,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[549,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[550,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[551,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[552,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[553,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[554,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[555,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[556,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[557,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[558,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[560,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[561,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[562,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[563,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[564,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[565,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[566,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[567,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[572,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[573,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[575,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[576,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[577,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[578,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[579,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[580,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[581,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[582,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[583,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[584,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[585,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[586,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[587,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[588,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[589,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[590,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[591,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[592,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[595,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[596,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[597,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[599,"impl-ChunkedArray%3CStringType%3E"],[600,"impl-ChunkedArray%3CListType%3E"],[601,"impl-ChunkedArray%3CListType%3E"],[602,"impl-ChunkedArray%3CStringType%3E"],[605,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[606,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[607,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[608,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[609,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[610,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[627,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[628,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[629,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[630,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[631,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[632,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[633,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[634,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[635,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[636,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[637,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[638,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[639,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[640,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[641,"impl-Rem-for-ChunkedArray%3CT%3E"],[642,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[646,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[647,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[648,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[649,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[650,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[651,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[652,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[653,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[658,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[659,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[660,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[661,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[662,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[663,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[664,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[665,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[666,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[667,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[668,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[669,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[670,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[671,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[672,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[679,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[680,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[681,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[682,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[683,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[684,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[685,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[686,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[687,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[688,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[689,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[690,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[691,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[692,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[693,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[694,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[697,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[698,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[699,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[700,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[701,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[702,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[703,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[704,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[705,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[706,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[708,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[709,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[710,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[711,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[712,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[713,"impl-Sub-for-ChunkedArray%3CT%3E"],[714,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[718,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[719,"impl-ChunkedArray%3CBooleanType%3E"],[720,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[721,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[722,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[723,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[726,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[727,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[730,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[731,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[732,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[733,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[734,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[735,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[740,"impl-ChunkedArray%3CFixedSizeListType%3E"],[741,"impl-ChunkedArray%3CListType%3E"],[742,"impl-ChunkedArray%3CT%3E"],[743,"impl-ChunkedArray%3CListType%3E"],[750,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[751,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[752,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[753,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[754,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[755,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[757,"impl-ChunkedArray%3CListType%3E"],[758,"impl-ChunkedArray%3CFixedSizeListType%3E"],[775,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[776,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[777,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[778,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[779,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[784,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[785,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[786,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[793,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[795,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[796,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[798,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[799,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[802,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[803,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[804,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[805,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[806,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[807,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[808,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[809,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[810,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[811,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[812,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[813,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[814,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[815,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[816,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[817,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[818,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[828,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[854,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[855,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[856,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[857,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[858,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[859,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[860,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[861,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[862,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[863,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[1038,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1039,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1266,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1267,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1299,"impl-ObjectArray%3CT%3E"],[1300,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1312,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1313,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1323,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1324,"impl-ObjectArray%3CT%3E"],[1326,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1327,"impl-ObjectArray%3CT%3E"],[1329,"impl-ObjectArray%3CT%3E"],[1330,"impl-Array-for-ObjectArray%3CT%3E"],[1333,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1334,"impl-ObjectChunkedBuilder%3CT%3E"],[1336,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1337,"impl-ObjectChunkedBuilder%3CT%3E"],[2068,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2069,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2070,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2071,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2072,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2076,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2077,"impl-Logical%3CDurationType,+Int64Type%3E"],[2323,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2324,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2325,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2326,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2327,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2336,"impl-PartialEq-for-DataType"],[2337,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2343,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2344,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2345,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2347,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2348,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2349,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2383,"impl-Debug-for-AnyValue%3C\'a%3E"],[2384,"impl-Display-for-AnyValue%3C\'_%3E"],[2386,"impl-Debug-for-DataType"],[2387,"impl-Display-for-DataType"],[2389,"impl-Debug-for-TimeUnit"],[2390,"impl-Display-for-TimeUnit"],[2395,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2397,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2411,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2412,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2413,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2414,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2415,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2419,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2420,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2421,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2423,"impl-From%3C%26ArrowField%3E-for-Field"],[2424,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2448,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2449,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2472,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2473,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2474,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2475,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2476,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2480,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2481,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2482,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2483,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2484,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2520,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2521,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2522,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2524,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2525,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2526,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2628,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2629,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2630,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2631,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2632,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2682,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2683,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2684,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2686,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2687,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2688,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2701,"impl-PolarsMonthEnd-for-Logical%3CDatetimeType,+Int64Type%3E"],[2702,"impl-PolarsMonthEnd-for-Logical%3CDateType,+Int32Type%3E"],[2703,"impl-PolarsMonthStart-for-Logical%3CDateType,+Int32Type%3E"],[2704,"impl-PolarsMonthStart-for-Logical%3CDatetimeType,+Int64Type%3E"],[2727,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2728,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2729,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2730,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2731,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2732,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2733,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2734,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2740,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2741,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2742,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2744,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2745,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2746,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2750,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[2751,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[2771,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[2772,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[2779,"impl-Logical%3CDurationType,+Int64Type%3E"],[2780,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2785,"impl-Logical%3CDateType,+Int32Type%3E"],[2786,"impl-Logical%3CTimeType,+Int64Type%3E"],[2787,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2801,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2802,"impl-Logical%3CDurationType,+Int64Type%3E"],[2850,"impl-Logical%3CTimeType,+Int64Type%3E"],[2851,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2852,"impl-Logical%3CDateType,+Int32Type%3E"],[2858,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[2859,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3144,"impl-Debug-for-ErrString"],[3145,"impl-Display-for-ErrString"],[3146,"impl-Display-for-PolarsError"],[3147,"impl-Debug-for-PolarsError"],[3151,"impl-From%3CError%3E-for-PolarsError"],[3152,"impl-From%3CError%3E-for-PolarsError"],[3153,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3155,"impl-From%3CError%3E-for-PolarsError"],[3156,"impl-From%3CError%3E-for-PolarsError"],[3157,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3279,"impl-Debug-for-DataFrame"],[3280,"impl-Display-for-DataFrame"],[3285,"impl-From%3CStructChunked%3E-for-DataFrame"],[3286,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3288,"impl-From%3C%26Schema%3E-for-DataFrame"],[3315,"impl-Index%3Cusize%3E-for-DataFrame"],[3316,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3317,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3318,"impl-Index%3C%26str%3E-for-DataFrame"],[3319,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3320,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3321,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3322,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3412,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3413,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3587,"impl-Debug-for-GroupByMethod"],[3588,"impl-Display-for-GroupByMethod"],[3594,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3595,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3596,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3631,"impl-IntoIterator-for-GroupsIdx"],[3632,"impl-IntoIterator-for-%26GroupsIdx"],[3634,"impl-IntoParallelIterator-for-GroupsIdx"],[3635,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4899,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4900,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5528,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[5529,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[5530,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[6001,"impl-Expr"],[6002,"impl-PartialEq-for-Expr"],[6005,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6006,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6020,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6021,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6022,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6028,"impl-PartialEq-for-StructArray"],[6029,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6297,"impl-Debug-for-Duration"],[6298,"impl-Display-for-Duration"],[6324,"impl-Debug-for-JoinType"],[6325,"impl-Display-for-JoinType"],[6327,"impl-Display-for-JoinValidation"],[6328,"impl-Debug-for-JoinValidation"],[6337,"impl-Display-for-Expr"],[6338,"impl-Debug-for-Expr"],[6340,"impl-Display-for-Operator"],[6341,"impl-Debug-for-Operator"],[6343,"impl-Debug-for-BooleanFunction"],[6344,"impl-Display-for-BooleanFunction"],[6345,"impl-Debug-for-CategoricalFunction"],[6346,"impl-Display-for-CategoricalFunction"],[6347,"impl-Display-for-PowFunction"],[6348,"impl-Debug-for-PowFunction"],[6349,"impl-Debug-for-StringFunction"],[6350,"impl-Display-for-StringFunction"],[6351,"impl-Display-for-FunctionExpr"],[6352,"impl-Debug-for-FunctionExpr"],[6365,"impl-Display-for-Arc%3CT,+A%3E"],[6366,"impl-Debug-for-Arc%3CT,+A%3E"],[6367,"impl-Pointer-for-Arc%3CT,+A%3E"],[6415,"impl-From%3CDslPlan%3E-for-LazyFrame"],[6416,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6479,"impl-From%3Cu64%3E-for-Expr"],[6480,"impl-From%3Ci64%3E-for-Expr"],[6481,"impl-From%3Cu32%3E-for-Expr"],[6482,"impl-From%3Cbool%3E-for-Expr"],[6483,"impl-From%3Ci8%3E-for-Expr"],[6484,"impl-From%3CAggExpr%3E-for-Expr"],[6485,"impl-From%3C%26str%3E-for-Expr"],[6486,"impl-From%3Ci16%3E-for-Expr"],[6487,"impl-From%3Cu8%3E-for-Expr"],[6488,"impl-From%3Cf64%3E-for-Expr"],[6489,"impl-From%3Ci32%3E-for-Expr"],[6490,"impl-From%3Cf32%3E-for-Expr"],[6492,"impl-From%3Cu16%3E-for-Expr"],[6495,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6496,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6497,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6498,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6499,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6500,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6501,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6502,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6503,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6504,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6510,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[6512,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[6513,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[6514,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[6528,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[6530,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[6531,"impl-From%3CT%3E-for-Arc%3CT%3E"],[6532,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[6533,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[6534,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[6535,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[6536,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[6538,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[6539,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[6540,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[6541,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[6542,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[6543,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[6544,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[6553,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[6554,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[6555,"impl-From%3CArrowSchema%3E-for-Schema"],[6556,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[6557,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[6558,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[6559,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[6561,"impl-From%3CMutableStructArray%3E-for-StructArray"],[6575,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6576,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6584,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6585,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6597,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6598,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7694,"impl-StructArray"],[7695,"impl-Array-for-StructArray"],[7703,"impl-Array-for-StructArray"],[7704,"impl-StructArray"],[8377,"impl-StructArray"],[8378,"impl-Array-for-StructArray"],[8621,"impl-LazyFileListReader-for-LazyCsvReader"],[8622,"impl-LazyCsvReader"],[8623,"impl-LazyJsonLineReader"],[8624,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8671,"impl-LazyCsvReader"],[8672,"impl-LazyFileListReader-for-LazyCsvReader"],[8673,"impl-LazyJsonLineReader"],[8674,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8710,"impl-Array-for-StructArray"],[8711,"impl-StructArray"],[9092,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9093,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9098,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[9099,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[9720,"impl-Display-for-RollingFunction"],[9721,"impl-Debug-for-RollingFunction"],[9749,"impl-Display-for-RollingFunctionBy"],[9750,"impl-Debug-for-RollingFunctionBy"],[9966,"impl-Add-for-Series"],[9967,"impl-Add%3CT%3E-for-%26Series"],[9968,"impl-Add-for-%26Series"],[9969,"impl-Add%3CT%3E-for-Series"],[9984,"impl-AsSeries-for-Series"],[9985,"impl-SeriesSealed-for-Series"],[10029,"impl-Div%3CT%3E-for-%26Series"],[10030,"impl-Div%3CT%3E-for-Series"],[10031,"impl-Div-for-%26Series"],[10032,"impl-Div-for-Series"],[10042,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10043,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10044,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10046,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10047,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10048,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10065,"impl-Debug-for-Series"],[10066,"impl-Display-for-Series"],[10070,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[10072,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[10073,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[10074,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[10075,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[10081,"impl-FromIterator%3C%26u64%3E-for-Series"],[10082,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[10083,"impl-FromIterator%3C%26u8%3E-for-Series"],[10084,"impl-FromIterator%3C%26u32%3E-for-Series"],[10085,"impl-FromIterator%3Cu8%3E-for-Series"],[10086,"impl-FromIterator%3C%26f64%3E-for-Series"],[10087,"impl-FromIterator%3Cf64%3E-for-Series"],[10088,"impl-FromIterator%3Cu32%3E-for-Series"],[10089,"impl-FromIterator%3CString%3E-for-Series"],[10090,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[10091,"impl-FromIterator%3Ci8%3E-for-Series"],[10092,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[10093,"impl-FromIterator%3Cf32%3E-for-Series"],[10094,"impl-FromIterator%3C%26i64%3E-for-Series"],[10095,"impl-FromIterator%3Ci16%3E-for-Series"],[10096,"impl-FromIterator%3C%26f32%3E-for-Series"],[10097,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[10098,"impl-FromIterator%3C%26i8%3E-for-Series"],[10099,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[10100,"impl-FromIterator%3C%26i32%3E-for-Series"],[10101,"impl-FromIterator%3Cu16%3E-for-Series"],[10102,"impl-FromIterator%3C%26u16%3E-for-Series"],[10103,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[10104,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[10105,"impl-FromIterator%3Cu64%3E-for-Series"],[10106,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[10107,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[10108,"impl-FromIterator%3C%26str%3E-for-Series"],[10109,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[10110,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[10111,"impl-FromIterator%3C%26i16%3E-for-Series"],[10112,"impl-FromIterator%3Ci64%3E-for-Series"],[10113,"impl-FromIterator%3Ci32%3E-for-Series"],[10114,"impl-FromIterator%3C%26bool%3E-for-Series"],[10115,"impl-FromIterator%3Cbool%3E-for-Series"],[10116,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[10117,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[10118,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[10119,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[10120,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[10121,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[10122,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[10123,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[10124,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[10125,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[10135,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10136,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10137,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10139,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10140,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10141,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10177,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10178,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10179,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10181,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10182,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10183,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10192,"impl-Mul%3CT%3E-for-%26Series"],[10193,"impl-Mul-for-Series"],[10194,"impl-Mul-for-%26Series"],[10195,"impl-Mul%3CT%3E-for-Series"],[10199,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[10200,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[10201,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[10202,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[10203,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[10204,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[10205,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[10206,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[10207,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[10208,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[10209,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[10210,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[10211,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[10212,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[10213,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[10214,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[10215,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[10216,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[10217,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[10218,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[10219,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[10220,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[10221,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[10222,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[10223,"impl-NamedFrom%3CT,+T%3E-for-Series"],[10224,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[10225,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[10226,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[10227,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[10228,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[10229,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[10230,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[10231,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[10232,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[10233,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[10234,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[10235,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[10236,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[10237,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[10238,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[10239,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[10240,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[10241,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[10242,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[10243,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[10244,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[10245,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[10246,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[10247,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[10248,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[10249,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[10255,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10256,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10257,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10259,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10260,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10261,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10269,"impl-Rem%3CT%3E-for-Series"],[10270,"impl-Rem-for-%26Series"],[10271,"impl-Rem%3CT%3E-for-%26Series"],[10296,"impl-Sub%3CT%3E-for-%26Series"],[10297,"impl-Sub-for-Series"],[10298,"impl-Sub-for-%26Series"],[10299,"impl-Sub%3CT%3E-for-Series"],[10325,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10326,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10327,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10329,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAALgN/w08Dj8OQA5BDkIOQw5IDksOUA5RDnYO","e":"OzAAAAEAAIYd+wMCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB8AOQAAAD4ABQBIAAIATAAKAFsACABlAAcAbgABAHIABAB4AAsAhgACAIsAAACNAAIAkgAGAJoABgCiAAgArgAEALQAAAC5AAcAwgAIAM0AFQDlAAoA8QAPAAIBAAAHAQAACQEBAA0BDQAcARAANAEUAEsBEgBfARIAdgEAAHgBHgCZAQMApQERALoBAwDBAQEAxwEBAMoBBgDWASYA/wEHAAgCMgA9AgEAQAIRAFMCAwBYAgQAXgIFAGgCAABqAhoAhwIHAJMCDgCjAgEApwIQALoCEQDOAgYA2QIBAN4CAADiAgEA6QIBAO8CBwD5AgEA/AIKAAgDBAAOAwAAEAMoADsDAAA9AyMAYwM0AJoDCACnAxEAvANYACIEEgBABAcASQRcAKcEAACqBBQAwwQDAMsEAwDRBB4A8gQTAAcFBwAQBQAAEwUAABUFAgAaBQ4AKgUAACwFAAAvBQIAMwUDADgFAQA7BQcARAUAAEYFBQBOBQEAUQUAAFMFAQBWBQMAWwUDAGAFAgBkBQMAagUAAG0FAAB1BQAAegUAAH0FAQCCBQEAhQUAAIgFAACPBQAAlAUCAJ8FBgCoBQ0AuAUFAMAFCADLBQQA0QUAANQFAADWBQEA3AUFAOUFAQDuBQEA+gUAAPwFAQD/BQAAAgYAAAQGAAAIBgAACgYAAA8GDAAeBgIALAYAAC4GBwA3BgIAPQYAAD8GAwBEBgEARwYFAFMGFQBqBgEAbgYEAHQGAwB7BgYAjwYDAJQGBwCdBgQApAYCAKgGBQCwBgAAsgYMAMMGAQDHBgEAzQYBANAGAQDTBgMA2AYAANoGAADdBgEA4QYAAOMGAQDmBgAA6AYCAOwGDAD6BgAA/AYBAP8GAAABBwEABAcAAAYHAQAJBwAACwcBAA4HAAASBwAAFgcBABoHAAAdBwAAHwcAACEHAwAmBwAAKQcHADIHAQA1BwUAPAcBAEAHAABCBwIARwcAAEwHAwBRBwEAVAcAAFYHAQBZBwAAWwcBAF4HAABgBwEAYwcAAGUHAQBoBwAAagcAAG0HJgCVBxcArgduAB8IUABxCAcAewiXABQJBwAdCSgARwkBAEoJDwBcCQAAXgkAAGwJBAB0CQIAeAkBAHsJAACRCQEAlAkAAJwJAACfCQAAoQkGAKkJBACvCQAAsQkEALcJAQC6CRkA2QkPAOsJKgAXCgAAQwoJAE8KAABRCgEAVAoEAFoKAQBfCgAAYQoFAGgKAABrCgIAcAoEAHYKAAB5Cg8AiwoAAI4KEgCiCgAApQoNALQKDADCCgAAxAoBAMgKDgDYCgAA3woAAOEKAADmCg8A+AoAAPoKAgD/CiEAJgtlAI0LLwC+CwIAwgs1APkLAQD8CwgABgwAAAgMAQALDAQAEQwBABYMAAAYDAIAHAwAAB8MGgA7DBEATwwDAFQMBgBeDAQAZAwVAH0MAACADAoAjAwCAJQMEACnDA8AuAwAAL8MAQDDDAIAxwwAAMkMAADODAMA1gwBANkMAQDpDAAA6wwAAO0MAQD0DAwABw0CABoNAQAnDQEAKw0AADENAAA6DQEAPQ0AAEANAQBHDQAASQ0EAFENBgBaDQkAZQ0AAGgNAQBsDQQAeA0NAIcNAgCMDQoAmA0BAJsNAwCgDQMApQ0JALANBwC5DQEAvA0YANYNKAAADgYACw4CABAOAAATDgQAGg4AAB4OBwAuDg0APQ4BAEQOAwBJDgEATQ4CAFIOAABUDh8Adw4MAIYOBQCNDgcAlg4jALwOCwDJDg4A2Q4BAN0OAwDkDgYA7g4OAP8OBQAHDwAACg8IABQPAQAYDwQAHg8FACUPAAAqDwkANQ8BADkPAwA+DwEAQQ8KAE0PAABQDwAAUg8JAF0PAABfDwgAaQ8DAHEPAAB0DwAAfA8CAIMPAACGDwEAjA8KAJgPDwCrDwYAsw8BALYPAwC+DwMAxQ8CAMwPAwDRDwAA0w8KAOAPCgDsDwIA8Q8AAPQPAAD2DwUA/Q8DAAIQBAAIEAMADxACABUQAAAXEAEAGxAAAB0QBAAkEA8ANRAAADgQAQA7EAMAQRACAEcQEwBcEAkAaBAAAGoQAQBuEAAAcBABAHQQAAB2EAEAehAAAHwQBACDEAEAhhABAIoQAACNEAAAjxADAJQQAgCYEAYAoRAHAKsQAACvEAEAsxAAALUQAAC3EAEAuhABAL0QAQDCEA4A1BAFANsQBwDlEAIA6RAGAPQQAQD3EAAA+RABAPwQAwACEQEABRECAAkRAAALEQMAEREEABcRAwAcEQEAHxEBACIRAQAlEQEAKBEAACoRAAAsEQAALhECADMRAwA4EQcAQhECAEgRAABKEQQAUBECAFQRAABXEQAAWREEAF8RAwBkEQIAaBECAGwRDAB6ESQAoBEGAKgRAwCvEQEAsxEAALURBgC9EQQAwxEAAMURAgDKEQEAzREBANIRCwDiEQYA6hEJAPcRAQD6EQYAAhIBAAYSAQAMEgQAEhIJAB4SAAAgEgEAJBIAACYSAQAqEgAALBIBADASAAAyEgMAOBIDAD0SAgBEEgcATRIAAFASAwBWEgIAWhJZALUSAwC9EgAAvxIAAMISBQDKEgAA0RIAANMSAADWEgAA2BIAANwSBQDmEgAA6hIAAPESAAD1EgAAARMCAAUTBAALEwAADRMCABETAQAXEwEAGhMEACATAQAoEwoANRPyACkUAAArFAEALhQAADAUAgA3FAEAPRQAAD8UAABHFAAASxQBAE4UAABYFEoApBQLALEUVwAKFQEADhUBABIVAAAWFQIAHBUKACoVBAA0FQAANhUAAEAVAQBEFQAAShUAAEwVAQBRFQEAYBUAAGYVAABrFQIAcRUAAHMVBQB7FSgApRX7AKMWAACoFgEAqxYDALEWAACzFgIAuhYXANMWUQAmFw0AOBcBAD0XAABAFwAARBcCAEgXKQBzFxEAhhcMAJYXpAA/GAAAQxgAAEUYBABLGAAATxgAAFUYAABXGAAAYBgAAGMYAABrGAAAbhgCAHMYAwB4GAEAfBgBAH8YAACBGAMAiRgAAIwYAQCRGF4A8RgAAPQYAAAQGQEAIxkAACwZAAA5GQAAUBkLAF0ZAABgGQkAbxkAAHEZAgB5GQAAghkAAJMZAACaGQYAohkAAKUZAACqGQAArRkEALMZAAC5GQEAvRkCAMMZBQDKGQIAzhkAANEZAQDUGQAA1hkAANgZAADdGQAA5hkAAOkZAQDsGQIA8RkAAPQZAAD4GQEA/BkEAAUaAQAJGgAAFBoAABYaPQBXGgIAXhoAAGAaAABiGgQAahoAAGwaAABvGgAAdhoCAHsaewD5GgAA/hoCAAIbAQB9GwAAfxsGAIgbAQCLGwUAkxsAAJUbAgCZGwEAnRsAAKAbAQCtGwAArxsAALIbAQC1GwMAuxsCAMwbAQDPGwEA2BsAANobAQDdGwAA4RsCAOcbAADpGwEA7RsAAPIbAQD2GwEA+hsCAP4bAwAEHA4AGBwAAB4cAQAlHAAAKBwFADEcAAA5HAIAThwAAFUcAQBZHAAAXRwBAGAcAABjHAAAaBwAAGocAABsHAAAdBwAAHYcAgB9HAgAjBwIAJocAACcHAAAoBwAAKYcAACoHAMAsBwBALMcAQC2HAAAuRwHAMIcAADEHAIAyBwAAMscAQDbHAAA3hwBAOkcBgD1HAIA/RwAAAMdAgAHHQAAEB0AABIdAwAXHQUAHx0FACodAwAvHQAAMx0CADkdAAA8HQAASB0AAEsdAQBOHQEAUR0DAFcdBQBeHQQAaR0AAGsdAABvHQAAch0AAHQdAwB7HQAAfx0AAIEdAACDHQEAph0AAKsdAAC1HQMAuh0FAMEdAADDHQAAxh0AAMwdAQDRHQIA1R0CANsdAADdHQEA4B0BAOMdAQDqHQMA8R0AAP0dAAD/HQAABh4EABAeAQAVHgAAFx4BABweAAAeHgAAJB4JAC8eAAAxHgAANR4AADseAAA9HgAARB4AAEseCgBYHgIAXR4CAGgeAAB3HgAAeR4AAHweAgCAHgMAhh4BAIkeAACMHgAAkB5ZAOweCgD4HgAA/h4LAAsfAQAOH4YAlx8AAJsfdwAWIAAAGCADACMgAAAmIAAAKiB2AKIgAACuIAAAtSAEALsgAQC/IAAAwSAAAMMgAADHIAAAzSAAAM8gAADRIHcAUCEDAFkhAABcIQAAXyEAAGEhAQBnIQAAbyEAAHghAAB+IQAAiSEAAI8hAACcIQEAriEAALEhAQC1IQAAviEDAMMhBADYIQAA4SEAAOMhAADrIQAA8CEAAAAiAQAHIgAACSIAAA0iFAAmIgEAKSJFAHEiAABzIgAAdSIBAHgiAQB7IgQAgSI1ALkiBQDAIgkAyyICANEiAADTIgMA2CIBANsiBQDlIhIA+SIBAPwiAgABIwAABCMDAAkjBgAgIwAALiMCAEQjAABMIwgAWSMAAFsjCwBoIwIAbCMRAH8jAQCCIw8AkyMXAK0jAACvIwIAtCMMAMIjBwDLIwQA0iMCANYjBQDeIwAA4CMMAPEjAQD1IwEA+yMBAP4jAQABJAMABiQAAAgkAAALJAEADyQAABEkAQAUJAAAFiQCABokDAAoJAAAKiQBAC0kAAAvJAEAMiQAADQkAQA3JAAAOSQBADwkAABAJAAARCQBAEgkAABLJAAATSQAAE8kAwBUJAAAVyQHAGAkAQBjJAUAaiQBAG4kAABwJAIAdSQAAHokAwB/JAEAgiQAAIQkAQCHJAAAiSQBAIwkAACOJAEAkSQAAJMkAQCWJAAAmCQAAJskEQCuJAYAtyQAALokEADMJAgA1iQBANkkCADjJAAA5SQBAOskAADtJAQA9iQBAP8kAgAFJQAAByUAABElAAAgJQMAKCUKADQlAAA2JQgAQSW5APwlAQD/JRgAGSYBABwmDgAtJhEAQCYAAEImFQBZJgEAXCYAAF4mCwBrJgIAciYAAIUmAwCMJgYAoCYFAKgmAACxJgAAsyYBALomBwDIJgoA3CYEAOImAADkJgIA6CYEAO8mAwD0JgEA+CYAAP4mBAAHJwIACycGABUnAgAcJwIAICcBACYnDgA4JwEAOycAAD0nAAA/JwEARCcCAFEnAwBXJwAAWScDAF8nAABhJy4AkycAAJgnAACaJwAAnCcAAJ4nAACgJwAApicEAK4nAwC5JwIAwCcAAMInAADEJwAAxycBAMwnAADRJwMA2CcpAAMoBwANKAEAECgAABIoAAAUKAAAFigAABkoAQAeKAIAJigAACkoAQAuKAEAMigAADYoAAA5KAMAQigAAE0oAABPKAEAUigOAGcoAQBrKAIAbygAAHEoFgCKKAEAjigOAJ4oAQChKAUAqCgKALQoAAC2KAAAuCgEAA=="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGTPPTTFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCFIKKNNNNNMNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPNMMMMMMNMCNNMMNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFPRIIIIIKKKKRGFPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHHNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPFPPPPPGIGPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPEPKKPEPGPPIFEKPPKGEEIEKGPPGFFFPPEEPKFPEPEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPEPPKGGPPFFIKNNNNNNNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNMNNNNNNNMMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNNMNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNNNMMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNKKKKKFFFNHHHHHHHNHHEHNNNNNNNNHHNNHHNNNNNNNNNNNNNHHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNHNNNNENHHHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitand","bitand_assign","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal_missing","equal_missing","extend","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_name","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_flags","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","insert","intersection","intersects","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_no_null_iter","into_series","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","remove","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","sort","sort_with","std","std_reduce","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_reduce","symmetric_difference","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","vzip","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","One","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","clone","clone_into","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","leaf_dtype","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","update","value","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","mul","mul","mul","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","MeltArgs","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","replace_chunks","replace_with_chunk","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","sort_with","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","unstable","var","var","var_reduce","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Arg","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","materialize_dyn_int","new","new","next","next_back","rayon","size_hint","slice_slice","split_ca","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[477,"polars_core::chunked_array::arithmetic"],[505,"polars_core::chunked_array::builder"],[609,"polars_core::chunked_array::builder::list"],[763,"polars_core::chunked_array::collect"],[777,"polars_core::chunked_array::float"],[779,"polars_core::chunked_array::from_iterator_par"],[783,"polars_core::chunked_array::iterator"],[820,"polars_core::chunked_array::iterator::par"],[822,"polars_core::chunked_array::object"],[893,"polars_core::chunked_array::object::builder"],[916,"polars_core::chunked_array::object::registry"],[944,"polars_core::chunked_array::ops"],[1065,"polars_core::chunked_array::ops::arity"],[1100,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1102,"polars_core::chunked_array::ops::gather"],[1105,"polars_core::chunked_array::ops::search_sorted"],[1134,"polars_core::chunked_array::ops::sort"],[1141,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1142,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1149,"polars_core::chunked_array::ops::sort::options"],[1223,"polars_core::chunked_array::temporal"],[1224,"polars_core::chunked_array::temporal::conversion"],[1227,"polars_core::config"],[1231,"polars_core::datatypes"],[2635,"polars_core::datatypes::categorical"],[2775,"polars_core::datatypes::categorical::revmap"],[2827,"polars_core::datatypes::categorical::string_cache"],[2846,"polars_core::datatypes::revmap"],[2852,"polars_core::datatypes::string_cache"],[2856,"polars_core::error"],[2917,"polars_core::error::PolarsError"],[2921,"polars_core::error::constants"],[2924,"polars_core::export"],[2932,"polars_core::fmt"],[2962,"polars_core::frame"],[3224,"polars_core::frame::explode"],[3253,"polars_core::frame::group_by"],[3488,"polars_core::frame::group_by::GroupByMethod"],[3489,"polars_core::frame::group_by::GroupsProxy"],[3491,"polars_core::frame::group_by::aggregations"],[3504,"polars_core::frame::group_by::expr"],[3507,"polars_core::frame::row"],[3601,"polars_core::functions"],[3603,"polars_core::hashing"],[3651,"polars_core::prelude"],[4205,"polars_core::prelude::PolarsError"],[4209,"polars_core::prelude::default_arrays"],[4215,"polars_core::prelude::list"],[4238,"polars_core::prelude::null"],[4268,"polars_core::prelude::revmap"],[4274,"polars_core::prelude::slice"],[4277,"polars_core::prelude::string_cache"],[4281,"polars_core::prelude::utf8"],[4285,"polars_core::random"],[4286,"polars_core::schema"],[4360,"polars_core::series"],[4741,"polars_core::series::arithmetic"],[4766,"polars_core::series::arithmetic::checked"],[4774,"polars_core::series::ops"],[4800,"polars_core::series::unstable"],[4824,"polars_core::utils"],[4934,"polars_core::utils::flatten"],[4939,"dyn_clone::sealed"],[4940,"num_traits"],[4941,"num_traits::cast"],[4942,"polars_error"],[4943,"polars_core::series::arithmetic::borrowed"],[4944,"polars_core::frame::group_by::proxy"],[4945,"core::option"],[4946,"core::iter::traits::iterator"],[4947,"core::ops::function"],[4948,"core::marker"],[4949,"polars_core::datatypes::dtype"],[4950,"alloc::string"],[4951,"polars_core::datatypes::aliases"],[4952,"polars_core::series::arithmetic::borrowed::checked"],[4953,"polars_arrow::array"],[4954,"alloc::vec"],[4955,"core::iter::traits::double_ended"],[4956,"core::iter::traits::collect"],[4957,"core::fmt"],[4958,"core::result"],[4959,"polars_utils::iter::fallible"],[4960,"polars_arrow::bitmap::immutable"],[4961,"rayon::iter"],[4962,"polars_arrow::trusted_len"],[4963,"polars_core::datatypes::any_value"],[4964,"polars_core::series::series_trait"],[4965,"polars_core::chunked_array::logical::decimal"],[4966,"core::iter::traits::exact_size"],[4967,"bitflags::iter"],[4968,"core::slice::iter"],[4969,"core::iter::adapters::map"],[4970,"core::convert"],[4971,"core::ops::range"],[4972,"polars_arrow::legacy::kernels::rolling::no_nulls"],[4973,"polars_core::datatypes::field"],[4974,"polars_core::chunked_array::ops::rolling_window"],[4975,"polars_utils::index"],[4976,"ahash::random_state"],[4977,"polars_utils::hashing"],[4978,"ndarray::aliases"],[4979,"either"],[4980,"core::any"],[4981,"polars_core::chunked_array::arithmetic::numeric"],[4982,"polars_core::chunked_array::builder::string"],[4983,"polars_arrow::array::binview"],[4984,"polars_core::chunked_array::builder::boolean"],[4985,"polars_core::chunked_array::builder::null"],[4986,"polars_core::chunked_array::builder::primitive"],[4987,"core::clone"],[4988,"polars_core::chunked_array::builder::list::anonymous"],[4989,"polars_core::chunked_array::builder::list::boolean"],[4990,"polars_core::chunked_array::builder::list::primitive"],[4991,"polars_core::chunked_array::builder::list::binary"],[4992,"polars_core::chunked_array::builder::list::null"],[4993,"alloc::boxed"],[4994,"polars_arrow::array::boolean"],[4995,"polars_arrow::datatypes"],[4996,"polars_arrow::bitmap::utils::iterator"],[4997,"polars_arrow::bitmap::utils::zip_validity"],[4998,"alloc::sync"],[4999,"polars_arrow::offset"],[5000,"core::hash"],[5001,"polars_arrow::array::static_array"],[5002,"core::error"],[5003,"polars_arrow::array::primitive"],[5004,"polars_arrow::legacy::array::slice"],[5005,"polars_row::row"],[5006,"chrono::naive::datetime"],[5007,"alloc::borrow"],[5008,"polars_arrow::array::static_array_collect"],[5009,"bytemuck::zeroable"],[5010,"polars_core::chunked_array::logical::categorical"],[5011,"polars_core::chunked_array::logical::categorical::merge"],[5012,"polars_core::chunked_array::logical"],[5013,"polars_core::datatypes::time_unit"],[5014,"polars_arrow::datatypes::physical_type"],[5015,"polars_arrow::types"],[5016,"core::borrow"],[5017,"smartstring::alias"],[5018,"polars_arrow::pushable"],[5019,"core::cmp"],[5020,"polars_core::chunked_array::logical::categorical::builder"],[5021,"polars_core::chunked_array::logical::categorical::revmap"],[5022,"polars_core::chunked_array::logical::categorical::string_cache"],[5023,"polars_error::warning"],[5024,"polars_core::series::from"],[5025,"polars_utils::aliases"],[5026,"polars_arrow::datatypes::schema"],[5027,"polars_core::chunked_array::ndarray"],[5028,"polars_arrow::array::struct_"],[5029,"polars_arrow::record_batch"],[5030,"polars_utils::idx_vec"],[5031,"rayon::iter::plumbing"],[5032,"polars_core::frame::group_by::into_groups"],[5033,"core::iter::adapters::copied"],[5034,"core::iter::adapters::zip"],[5035,"polars_arrow::legacy::kernels::rolling"],[5036,"polars_utils::float"],[5037,"polars_arrow::types::native"],[5038,"polars_core::frame::group_by::aggregations::agg_list"],[5039,"polars_core::frame::row::av_buffer"],[5040,"polars_arrow::array::binary"],[5041,"polars_core::hashing::identity"],[5042,"hashbrown::map"],[5043,"polars_core::hashing::vector_hasher"],[5044,"core::alloc"],[5045,"std::os::fd::owned"],[5046,"std::os::fd::raw"],[5047,"core::mem::maybe_uninit"],[5048,"polars_arrow::legacy::kernels::time"],[5049,"core::default"],[5050,"polars_arrow::scalar"],[5051,"std::fs"],[5052,"std::io::error"],[5053,"simdutf8::basic"],[5054,"alloc::collections"],[5055,"regex::error"],[5056,"std::ffi::os_str"],[5057,"std::path"],[5058,"core::ffi::c_str"],[5059,"alloc::ffi::c_str"],[5060,"polars_arrow::legacy::array::default_arrays"],[5061,"polars_arrow::buffer::immutable"],[5062,"polars_arrow::array::list"],[5063,"polars_core::named_from"],[5064,"polars_arrow::legacy::array"],[5065,"polars_core::chunked_array::ops::aggregate"],[5066,"polars_core::chunked_array::ops::aggregate::quantile"],[5067,"polars_arrow::legacy::index"],[5068,"core::pin"],[5069,"core::io::borrowed_buf"],[5070,"std::io"],[5071,"polars_core::chunked_array::ops::aggregate::var"],[5072,"alloc::collections::btree::map"],[5073,"polars_arrow::legacy::array::list"],[5074,"polars_arrow::legacy::array::null"],[5075,"polars_arrow::bitmap::mutable"],[5076,"polars_arrow::array::utf8"],[5077,"polars_core::series::iterator"],[5078,"polars_arrow::legacy::utils"],[5079,"polars_arrow::legacy::trusted_len::rev"],[5080,"smartstring::config"],[5081,"smartstring"],[5082,"polars_error::constants"],[5083,"polars_arrow::legacy::prelude"],[5084,"polars_arrow::legacy::array::utf8"],[5085,"polars_core::utils::any_value"],[5086,"polars_core::utils::schema"],[5087,"polars_core::utils::supertype"],[5088,"polars_core::utils::series"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````````{{{f{c}}h}b{}}0{{{f{{l{j}}}}}d}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{}An}{{{f{{l{Al}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bh}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}42{{{f{Bj{l{c}}}}{f{{l{c}}}}}b{{C`{}{{Bl{Bn}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cd{B`}{{Cb{B`}}}}Cf}}{{{f{{l{j}}}}c}{{l{j}}}{{Cj{Ch}{{Cb{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{{l{Cl}}}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{{l{Cn}}}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}C`{}{{Cj{B`}{{Cb{{B`{e}}}}}}}C`}{{{l{c}}e}{{l{c}}}n{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}{f{Cd}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cd}}}{{l{e}}}nC`}{{{f{Bj{l{c}}}}e}bn{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{D`}}}}c}{{l{D`}}}{{Cj{{f{{Dd{Db}}}}}{{Cb{{f{{Dd{Db}}}}}}}}}}{{{f{{l{Df}}}}c}{{l{Df}}}{{Cj{{f{Bh}}}{{Cb{{f{Bh}}}}}}}}{{{f{{l{c}}}}Dhg}{{l{i}}}C`{}{{Cj{}{{Cb{e}}}}}C`}{{{f{{l{Df}}}}c}{{l{Df}}}{{Cj{{f{Bh}}{f{BjDj}}}}}}{{{f{{l{j}}}}{f{Cd}}}{{Af{Dl}}}}{{{f{{l{c}}}}g{f{Bj{Dd{e}}}}}bn{}{{Cd{B`{f{e}}}{{Cb{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}g}{{l{i}}}C`{}{{Cj{}{{Cb{e}}}}}C`}{{{f{{l{c}}}}Dn}E`n}{{{f{{l{c}}}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}n}{{{f{{l{c}}}}}{{Af{E`}}}n}`{{{f{{l{Df}}}}}Ed}{{{f{{l{c}}}}}{{f{{l{c}}}}}C`}{{{f{{l{c}}}}}{{f{Dh}}}C`}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEf{}}{{AnAn}An}{{{f{BjAn}}An}b}210{{{f{An}}}Db}0321{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00``{{{f{{l{c}}}}{f{Dh}}}{{Af{Ad}}}n}{{{f{{l{c}}}}e}{{l{g}}}n{{Cd{}{{Cb{}}}}Cf}n}1{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Eh}{{{f{{l{c}}}}e}{{Af{Ad}}}EhAb}{{{f{{l{c}}}}}EjC`}{{{f{{l{c}}}}}{{f{{En{El}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{En{El}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}C`}0{{{f{An}}}An}{{{f{c}}{f{Bje}}}b{}{}}0``{AnAn}{{{f{{l{c}}}}}{{Af{{f{Dd}}}}}n}{{{f{An}}An}d}{{{f{{l{c}}}}}{{`{{F`{}{{Bb{{f{Dd}}}}}}}}}n}{{}{{l{c}}}C`}{{}An}{Fb{{f{c}}}{}}00{Fb{{f{Bjc}}}{}}00{{AnAn}An}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bj{l{c}}}}}bC`}{Fbb}00{{{f{{l{c}}}}}{{f{Dh}}}C`};{{{f{An}}{f{An}}}d}{{{f{{l{c}}}}e}FdnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}01{{{f{Bj{l{c}}}}{f{{l{c}}}}}bn}{{{f{BjAn}}c}b{{Ff{}{{Bb{An}}}}}}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Fd}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}}{{B`{Fb}}}C`}`{{{f{{l{Al}}}}{f{BjFh}}}Fj}{{{f{{l{c}}}}{f{BjFh}}}Fjn}{{{f{An}}{f{BjFh}}}Fj}0000{{{f{{l{c}}}}e}bC`{{Cj{B`}}}}{{{f{{l{j}}}}c}b{{Cj{{B`{Ch}}}}}}{c{{l{e}}}Fl{{C`{}{{Fn{c}}}}}}{cc{}}00{Db{{B`{An}}}}{DbAn}00{{{f{Bh}}c}{{l{e}}}Ff{{C`{}{{Fn{}}}}C`}}{{{f{{l{c}}}}e}{{l{c}}}{{C`{}{{Fn{}}}}C`}Ff}{{{f{Bh}}{En{El}}}{{l{c}}}C`}{{{f{Bh}}{En{El}}Dh}{{l{c}}}C`}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}0{c{{l{e}}}{{Ff{}{{Bb{{Gf{En{B`{Gd}}}}}}}}}n}{c{{l{Al}}}{{Ff{}{{Bb{{B`{d}}}}}}}}{c{{l{e}}}{{Ff{}{{Bb{B`}}}}}n}{cAn{{Ff{}{{Bb{An}}}}}}{{{f{Bh}}c}{{l{e}}}{{Bf{}{{Bb{B`}}}}}n}23{{{f{Bh}}c}{{l{e}}}{{Bf{}{{Bb{}}}}}n}`{{{f{Bh}}}{{B`{An}}}}{c{{l{e}}}{{Gh{}{{Bb{B`}}}}}n}{{{f{Bh}}{f{Dd}}}{{l{c}}}n}{{{f{Bh}}{f{{Dd{B`}}}}}{{l{c}}}n}{c{{l{e}}}{{Gj{}{{Bb{B`}}}}}n}{{{f{Bh}}En}{{l{c}}}n}{{{f{Bh}}En{B`{Gd}}}{{l{c}}}n}{{{f{Bh}}Fb}{{l{c}}}n}0{{{f{{l{c}}}}Fb}{{l{c}}}C`}{{{f{Bh}}Fb{f{Dh}}}Dl}{{{f{{l{c}}}}Fb}B`C`}{{{f{{l{c}}}}Fb}{{Af{Gl}}}n}{{{f{{l{c}}}}Fb}Gln}{{{f{{l{j}}}}Fb}{{B`{Ad}}}}{{{f{{l{c}}}}}AnC`}{{{f{{l{j}}}}}Ad}{{{f{{l{{Gn{c}}}}}}Fb}{{B`{{f{H`}}}}}Hb}0{{{f{An}}}Hd}7{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}FbdFb}AjEf}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}{{{f{{l{c}}}}e}FdnAb}10{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}{B`{Fb}}}{{l{c}}}C`}{{}Fb}00{{FbHf{B`{Hh}}}{{l{c}}}n}{{{f{{l{j}}}}}Dh}{{{f{BjAn}}An}b}{{AnAn}An}{{{f{An}}An}d}{ce{}{}}00{{{l{Hj}}{B`{Fb}}Fb}{{Af{Hl}}}}{{{l{Hj}}{B`{Fb}}Fb}Hl}{{{f{{l{c}}}}}en{}}{Anc{}}{{{f{{l{c}}}}}{{`{HnI`{Ib{}{{Bb{}}}}F`Gj}}}n}{{{l{c}}}AdC`}{{{f{An}}}d}?0{{{f{{l{c}}}}}FdId}000{{{f{{l{c}}}}}FdC`}0{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}HdC`}{{{f{{l{c}}}}}{{`{{If{}{{Bb{B`}}}}}}}C`}{{{f{An}}}{{Ih{An}}}}{{{f{An}}}{{Ij{An}}}}{{{f{{l{j}}}}}{{`{{Bf{}{{Bb{Il}}}}}}}}{{{f{{l{c}}}}}{{Jb{{In{El}}{J`{{f{El}}}{{Cb{{B`{{f{Gd}}}}}}}}}}}C`}`{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Fb}}}C`}{{{f{{l{c}}}}}{{Jd{c}}}C`}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{c}}}}}FbC`}{{{f{{l{c}}}}e}{{l{c}}}n{A`Jf}}00{{{f{{l{c}}}}Fb}{{l{c}}}C`}{{{f{{l{c}}}}e}FdnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}01{{{f{{l{c}}}}}B`n}{{{f{{l{Al}}}}}{{B`{d}}}}{{{f{{l{c}}}}}Jhn}{{{f{{l{c}}}}}{{B`{Jj}}}n}{{{f{{l{Al}}}}}{{B`{Jj}}}}{{{f{{l{c}}}}}{{B`{Jj}}}Ef}{{{f{{l{c}}}}}JhEf}56{{{f{{l{c}}}}}{{B`{Gf}}}n}5{{{f{Bh}}{f{Dd}}}{{l{c}}}n}{{{f{Bh}}{f{{Dd{Db}}}}FbFb}{{l{Al}}}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}{{Af{Fb}}}n}{{{f{{l{c}}}}}{{f{Bh}}}C`}{{{f{Bh}}c}{{l{Jl}}}{{K`{{Dd{Jn}}}}}}{{{f{Bh}}c}{{l{Df}}}{{K`{{Dd{{B`{Dj}}}}}}}}{{{f{Bh}}c}{{l{Jl}}}{{K`{{Dd{{B`{Jn}}}}}}}}{{{f{Bh}}c}{{l{Cn}}}{{K`{{Dd{{B`{Jj}}}}}}}}{{{f{Bh}}c}{{l{Cn}}}{{K`{{Dd{Jj}}}}}}{{{f{Bh}}c}{{l{Kb}}}{{K`{{Dd{{B`{Hh}}}}}}}}{{{f{Bh}}c}{{l{Al}}}{{K`{{Dd{{B`{d}}}}}}}}{{{f{Bh}}c}{{l{D`}}}{{K`{{Dd{{En{Db}}}}}}}}{{{f{Bh}}{Kd{Il}}}{{l{Kf}}}}{{{f{Bh}}c}{{l{Kf}}}{{K`{{Dd{{B`{Il}}}}}}}}{{{f{Bh}}c}{{l{Kb}}}{{K`{{Dd{Hh}}}}}}{{{f{Bh}}c}{{l{D`}}}{{K`{{Dd{{B`{{En{Db}}}}}}}}}}{{{f{Bh}}c}{{l{Kf}}}{{K`{{Dd{Il}}}}}}{{{f{Bh}}c}{{l{Cl}}}{{K`{{Dd{Hf}}}}}}{{{f{Bh}}c}{{l{Cl}}}{{K`{{Dd{{B`{Hf}}}}}}}}{{{f{Bh}}c}{{l{Kh}}}{{K`{{Dd{{B`{Kj}}}}}}}}{{{f{Bh}}{Kd{Kj}}}{{l{Kh}}}}{{{f{Bh}}c}{{l{Df}}}{{K`{{Dd{Dj}}}}}}{{{f{Bh}}{Kd{Jn}}}{{l{Jl}}}}{{{f{Bh}}c}{{l{Kh}}}{{K`{{Dd{Kj}}}}}}{{{f{Bh}}c}{{l{Al}}}{{K`{{Dd{d}}}}}}{{{f{Bh}}{Kd{Hh}}}{{l{Kb}}}}{{{f{Bh}}}{{l{{Gn{c}}}}}Hb}{{{f{{l{c}}}}FbFb}{{l{c}}}n}{{{f{Bh}}{En{c}}}{{l{{Gn{c}}}}}Hb}{{{f{Bh}}{En{c}}Gd}{{l{{Gn{c}}}}}Hb}{{{f{Bh}}En}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Id}{AnAn}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}{{{f{{l{c}}}}e}FdnAb}01{{{f{{l{c}}}}}FbC`}``{{{f{{l{j}}}}}{{`{{Kl{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{{l{Df}}}}}{{`{{Kl{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{Bj{l{j}}}}}{{`{{Kn{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{{l{Df}}}}}{{`{{Kn{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{{l{c}}}}}Jhn}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}JjL`}{{Af{{B`{Jj}}}}}Ef}{{{f{{l{c}}}}JjL`}{{Af{Jh}}}Ef}{{{f{Bh}}FbJj}{{Af{{l{Al}}}}}}{{{f{Bh}}FbJjJj}{{Af{{l{c}}}}}n}{{{f{Bh}}Fb}{{l{c}}}n}{{{f{Bh}}FbJjJj}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{Lb}}}C`}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{BjAn}}An}b}{{{f{Bj{l{c}}}}{f{Bh}}}bC`}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cd}}Ld}{{Af{Ad}}}n}{{{f{{l{c}}}}Fbe}{{Af{{l{c}}}}}Id{{Cj{{f{Bj{l{c}}}}}{{Cb{B`}}}}}}{{{f{{l{c}}}}Jjdd{B`{Hh}}}{{Af{{l{c}}}}}C`}{{{f{{l{c}}}}Fbdd{B`{Hh}}}{{Af{{l{c}}}}}C`}{{{f{{l{c}}}}eB`}{{Af{{l{c}}}}}n{{Ff{}{{Bb{Lf}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Ff{}{{Bb{Lf}}}}}{{Cd{B`}{{Cb{B`}}}}}}{{{f{{l{c}}}}{f{Fd}}B`}{{Af{{l{c}}}}}n}{{{f{BjAn}}And}b}{{{f{Bj{l{j}}}}}b}{{{f{Bj{l{j}}}}Dh}b}{{{f{Bj{l{c}}}}Lf}bC`}{{{f{Bj{l{c}}}}Hd}bC`}{{{f{BjAn}}Hd}b}{{{f{{l{c}}}}Il}{{l{c}}}n}{{{f{{l{c}}}}IlB`}{{l{c}}}n}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}IlFb}{{l{c}}}C`}{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dn}{{l{c}}}n}{{{f{{l{c}}}}Db}{{B`{Jj}}}n}{{{f{{l{c}}}}Db}JhEf}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{AnAn}An}{{{f{BjAn}}An}b}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{Al}}}}}{{B`{Lf}}}}{{{f{{l{c}}}}}B`n}{{{f{{l{c}}}}}Jhn}5{{{f{{l{c}}}}{B`{Fb}}}{{l{c}}}C`}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}C`{{K`{{Dd{Lf}}}}Lh}}{{{f{{l{c}}}}{f{E`}}}{{Af{{l{c}}}}}C`}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{C`{}{{Lj{Bn}}}}C`}{{K`{{Dd{Lf}}}}Lh}}{{{f{{l{c}}}}{f{E`}}}{{l{c}}}{{C`{}{{Lj{Bn}}}}C`}}`{{{f{{l{c}}}}dLl}{{En{{En{Ln}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}Id}{{{f{{l{Df}}}}Fb}{{Af{Ad}}}}{{{f{Bj{l{j}}}}Dh}b}{{{f{{l{c}}}}}{{Af{M`}}}n}{{{f{{l{j}}}}}{{Af{Mb}}}}{{{f{c}}}e{}{}}0{{{f{{l{D`}}}}}Md}{{{f{{l{c}}}}}{{En{B`}}}n}{{{f{{l{c}}}}}{{Mf{En{En{B`}}}}}n}{{{f{BjAn}}An}b}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Cj{Ch}{{Cb{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Af{{B`{c}}}}}}}}Cf}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{B`}{{Cb{{G`{{B`{e}}g}}}}}}Cf}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{G`{eg}}}}}}}C`}{c{{G`{e}}}{}{}}00{{{f{Bh}}g}{{G`{{l{i}}e}}}Fl{}{{Ff{}{{Bb{{G`{ce}}}}}}}{{C`{}{{Fn{c}}}}C`}}111{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Af{{B`{Ad}}}}}}}}}}{{{f{c}}}Mh{}}00{{AnAn}An}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}C`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}Fb}{}C`}{{{f{{l{c}}}}Db}{{B`{Jj}}}n}{{{f{{l{c}}}}Db}JhEf}{ce{}{}}00{{{f{Bh}}c}{{l{e}}}Fl{{C`{}{{Fn{c}}}}C`}}{{{f{{l{c}}}}{En{El}}}{{l{c}}}C`}{{{l{c}}{f{Bh}}}{{l{c}}}C`}{{{f{{Dd{Mj}}}}e}c{}{{Ml{{f{E`}}}{{Cb{c}}}}}}{{{f{{l{c}}}}Hd}{{l{c}}}C`}{{{f{{l{c}}}}}en{}}{{{l{c}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}3201{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}453210542376542310543201{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Ad}}}}}}}}{{{f{{l{c}}}}{f{Fd}}{f{{l{c}}}}}{{Af{{l{c}}}}}C`}````{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}e{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}c}e{}{}{}}{{c{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}e{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}g{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}c}g{}{}{}}{{c{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}g{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BjNf}}}b}{{{f{Bj{Nh{c}}}}}b{NjLh}}{{{f{BjNl}}}b}{{{f{BjNn}}}b}{{{f{Bj{O`{c}}}}}bn}{{{f{Bj{Nh{c}}}}{B`{e}}}b{NjLh}{{K`{c}}}}{{{f{BjNf}}{B`{c}}}b{}}{{{f{BjNf}}c}b{}}{{{f{Bj{Nh{c}}}}e}b{NjLh}{{K`{c}}}}{{{f{BjNl}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bjc}}}{{f{Bje}}}{}{}}000{{{f{{Nh{c}}}}}{{Nh{c}}}{NjLh}}{{{f{Nl}}}Nl}{{{f{Nn}}}Nn}{{{f{{O`{c}}}}}{{O`{c}}}{nOb}}{{{f{c}}{f{Bje}}}b{}{}}000{Fb{{f{c}}}{}}000{Fb{{f{Bjc}}}{}}000{Fbb}000{Nf{{l{c}}}C`}{{{Nh{Bh}}}Md}{{{Nh{{Dd{Db}}}}}Ed}{OdMd}{OfEd}{NlFd}`{{{O`{c}}}{{l{c}}}n}{cc{}}000{{{f{Bh}}e}Oh{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}e}Oh{}{{Bf{}{{Bb{c}}}}}}{{{f{Bh}}{f{{Dd{c}}}}}Oh{}}{{{f{Bh}}{f{{Dd{{B`{c}}}}}}}Oh{}}{{}Fb}000{ce{}{}}000`{{{f{Bh}}Fb}{{Nh{c}}}{NjLh}}{{{f{Bh}}Fb}Nl}{{{f{Bh}}Fb}Nn}{{{f{Bh}}Fb}{{O`{c}}}n}{{{f{BjNf}}}b}{{{f{BjNl}}}b}{{{f{BjNn}}}b}{{{f{Bj{O`{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{G`{e}}}{}{}}0000000{{{f{c}}}Mh{}}000;;;;````````{{{f{BjOj}}{f{Fl}}}b}{{{f{BjOj}}}b}{{{f{BjOl}}}b}{{{f{BjOn}}c}b{{Bf{}{{Bb{{B`{d}}}}}}Gj}}{{{f{Bj{A@`{c}}}}e}bn{{Bf{}{{Bb{B`}}}}Gj}}{{{f{Bj{A@`{c}}}}e}bn{{Bf{}{{Bb{}}}}Gj}}{{{f{BjA@b}}}b}54{{{f{BjA@d}}}b}{{{f{BjA@f}}}b}{{{f{BjOn}}}b}{{{f{BjA@h}}}b}{{{f{Bj{A@`{c}}}}}bn}{{{f{BjOj}}{B`{{f{Fl}}}}}b}{{{f{BjOj}}{B`{{f{Ad}}}}}{{Af{b}}}}{{{f{BjA@b}}{B`{{f{Ad}}}}}{{Af{b}}}}{{{f{Bj{A@`{c}}}}{B`{{f{Dd}}}}}bn}{{{f{BjA@b}}{f{Ad}}}{{Af{b}}}}{{{f{BjOj}}{f{Ad}}}{{Af{b}}}}{{{f{BjOl}}{f{Ad}}}{{Af{b}}}}{{{f{BjA@d}}{f{Ad}}}{{Af{b}}}}{{{f{BjA@f}}{f{Ad}}}{{Af{b}}}}{{{f{BjOn}}{f{Ad}}}{{Af{b}}}}{{{f{BjA@h}}{f{Ad}}}{{Af{b}}}}{{{f{Bj{A@`{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bj{A@`{c}}}}{f{Dd}}}bn}{{{f{BjA@d}}c}b{{Bf{}{{Bb{{B`{{f{Bh}}}}}}}}Gj}}{{{f{BjA@f}}c}b{{Bf{}{{Bb{{B`{{f{{Dd{Db}}}}}}}}}}Gj}}{{{f{BjA@d}}c}b{{Bf{}{{Bb{{f{Bh}}}}}}}}{{{f{BjA@f}}c}b{{Bf{}{{Bb{{f{{Dd{Db}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bjc}}}{{f{Bje}}}{}{}}000000`{{}Oj}{{}Ol}{Fb{{f{c}}}{}}000000{Fb{{f{Bjc}}}{}}000000{Fbb}000000{{{f{A@d}}}d}{{{f{A@f}}}d}{{{f{On}}}d}{{{f{{A@`{c}}}}}dn}{{{f{A@b}}}d}{{{f{A@d}}}{{f{Lb}}}}{{{f{A@f}}}{{f{Lb}}}}{{{f{On}}}{{f{Lb}}}}{{{f{{A@`{c}}}}}{{f{Lb}}}n}{{{f{A@b}}}{{f{Lb}}}}{{{f{BjOj}}}Dl}{{{f{BjOl}}}Dl}{{{f{BjA@h}}}Dl}{{{f{BjA@b}}}Dl}{cc{}}000000{{{f{Dh}}FbFb{f{Bh}}}{{Af{{A@j{A@b}}}}}}{{}Fb}000000{{{f{BjA@d}}}El}{{{f{BjA@f}}}El}{{{f{BjOn}}}El}{{{f{Bj{A@`{c}}}}}Eln}{{{f{BjA@b}}}El}{ce{}{}}000000{{{f{Bh}}Fb{B`{Dh}}}Oj}{{{f{Bh}}Fb{B`{Dh}}}Ol}{{{f{Bh}}FbFb}A@d}{{{f{Bh}}FbFb}A@f}{{{f{Bh}}FbFb}On}{{{f{Bh}}Fb}A@h}{{{f{Bh}}FbFbDh}{{A@`{c}}}n}{{{f{Bh}}FbFbDhDh}{{A@`{c}}}n}{c{{G`{e}}}{}{}}0000000000000{{{f{c}}}Mh{}}000000:::::::``{{A@l{f{Bh}}}{{l{c}}}C`}{{A@n{f{{l{c}}}}}{{l{c}}}C`}10{{A@n{f{Bh}}Dh}{{l{c}}}C`}0{{A@l{f{Bh}}}{{G`{{l{c}}e}}}C`{}}{{A@n{f{{l{c}}}}}{{G`{{l{c}}e}}}C`{}}10{{A@n{f{Bh}}Dh}{{G`{{l{c}}e}}}C`{}}0`{AA`AA`}``{{AAb{f{Bh}}Dh}e{}{{AAd{c}}}}{{e{f{Bh}}Dh}AAd{}{{Gh{}{{Bb{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{cc{}}0{{}Fb}0{ce{}{}}000{{{f{AAf}}}AAh}{{{f{BjAAh}}}{{B`{c}}}{}}{{{f{Bj{AAj{c}}}}}{{B`{e}}}Bf{}}1{{{f{Bj{AAj{c}}}}}{{B`{e}}}F`{}}`{{{f{AAh}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{{AAj{c}}}}}{{Gf{Fb{B`{Fb}}}}}Bf}{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}088``````{{{f{c}}h}b{}}{e{{AAl{c}}}Hb{{Ff{}{{Bb{{B`{{f{c}}}}}}}}}}{e{{AAl{c}}}Hb{{Ff{}{{Bb{{f{c}}}}}}}}{{AAne}g{}{{Ff{}{{Bb{c}}}}}{}}0{{{f{H`}}}{{f{AB`}}}}{{{f{{AAl{c}}}}}{{f{AB`}}}Hb}{{{f{Bj{AAl{c}}}}}{{f{BjAB`}}}Hb}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}`{{{f{{AAl{c}}}}}{{AAl{c}}}{HbOb}}{{{f{c}}{f{Bje}}}b{}{}}{{{f{{AAl{c}}}}}{{f{AAn}}}Hb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{{f{H`}}}}{f{{f{H`}}}}}d}{{{f{H`}}{f{H`}}}d}{{{f{{AAl{c}}}}{f{BjFh}}}Fj{HbABb}}{cc{}}{{FbAAn}{{AAl{c}}}Hb}{{{f{{AAl{c}}}}Fb}{{B`{{f{c}}}}}Hb}{{}AAn}{{{f{Gd}}{f{{AAl{c}}}}{f{{AAl{c}}}}}{{AAl{c}}}Hb}{{AAn{f{Gd}}cc}{{AAl{e}}}{}Hb}{{{f{Gd}}{f{{AAl{c}}}}e}{{AAl{c}}}Hb{}}{{{f{Gd}}c{f{{AAl{e}}}}}{{AAl{e}}}{}Hb}{{}Fb}{ce{}{}}{{{f{{AAl{c}}}}}eHb{}}{{{f{{AAl{c}}}}Fb}dHb}{{{f{c}}Fb}d{}}1{{{f{{AAl{c}}}}}{{ABf{egABd}}}Hb{}{}}{{{f{{AAl{c}}}}}{{ABf{{f{c}}{ABh{c}}ABd}}}Hb}{{{f{{AAl{c}}}}}FbHb}0`{{{f{Bj{AAl{c}}}}{B`{Gd}}}bHb}{{{f{Bj{AAl{c}}}}FbFb}bHb}{{{f{c}}FbFb}e{}{}}01{{{f{H`}}}{{A@j{H`}}}}{{{f{{AAl{c}}}}}{{A@j{Fl}}}Hb}{{{f{c}}}e{}{}}{g{{G`{{AAl{c}}e}}}Hb{}{{Ff{}{{Bb{{G`{{f{c}}e}}}}}}}}{g{{G`{{AAl{c}}e}}}Hb{}{{Ff{}{{Bb{{G`{{B`{{f{c}}}}e}}}}}}}}{{AAng}{{G`{ie}}}{}{}{{Ff{}{{Bb{{G`{ce}}}}}}}{}}0{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}{{{f{H`}}}{{f{Bh}}}}{{}{{f{Bh}}}}{{{f{{AAl{c}}}}}{{B`{{f{Gd}}}}}Hb}{{{f{{AAl{c}}}}Fb}{{f{c}}}Hb}0{{{f{{AAl{c}}}}Fb}eHb{}}{{{f{{AAl{c}}}}}{{f{{ABj{{En{c}}}}}}}Hb}{{{f{{AAl{c}}}}}{{ABh{c}}}Hb}{{{f{{AAl{c}}}}}eHb{}}{ce{}{}}{{{AAl{c}}{B`{Gd}}}{{AAl{c}}}Hb}{{{f{{AAl{c}}}}{B`{Gd}}}{{A@j{Fl}}}Hb}1`{{{f{Bj{ABl{c}}}}}bHb}0{{{f{Bj{ABl{c}}}}{B`{c}}}bHb}{{{f{Bj{ABl{c}}}}{f{AB`}}}bHb}{{{f{Bj{ABl{c}}}}c}bHb}{{{f{Bj{ABl{c}}}}{f{AB`}}}{{Af{b}}}Hb}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{}{{ABl{c}}}Hb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{ABl{c}}}{{ABn{c}}}Hb}{cc{}}{{}Fb}{ce{}{}}{{{f{Bh}}Fb}{{ABl{c}}}Hb}{{{f{Bj{ABl{c}}}}}AdHb}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}4````{{{f{BjAC`}}}b}{{{f{BjAC`}}{B`{{f{AB`}}}}}b}{{{f{BjAC`}}{f{AB`}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}`?>={{{f{ACb}}{f{BjFh}}}Fj}<{{{f{Bh}}Fb}{{A@j{AC`}}}}{{}ACd}{{}AAn}>={{}d}`{{ACfACdAAn}b}{{{f{BjAC`}}}Ad}==<{ce{}{}}````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{ACj{}{{ACh{c}}}}}}g}{{ACj{}{{ACh{c}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{ACl}}{f{Cd}}}ACl}{{{f{ACl}}{f{Cd}}}{{l{c}}}C`}{{{f{{ACj{}{{ACh{c}}}}}}i{f{Bj{Dd{g}}}}}b{}{}{}{{Cd{{B`{e}}{f{g}}}{{Cb{g}}}}}}{{{f{{ACj{}{{ACh{c}}}}}}g}{{ACj{}{{ACh{c}}}}}{}{}{{Cd{e}{{Cb{c}}}}Cf}}{{{f{ACn}}Dn}E`}{{{f{ACn}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{AD`}}}{{Af{E`}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{ADb}}{f{Dh}}}{{Af{Ad}}}}0{{{f{ADd}}}ADd}{{{f{c}}{f{Bje}}}b{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{ADd}}{f{ADd}}}d}{{{f{{ADf{}{{Bb{c}}}}}}e}c{}{}}0{{{f{ADh}}}{{Af{Ad}}}}{{{f{ADh}}}{{Af{{Gf{Ad{ADj{Il}}}}}}}}`{{{f{ADl}}c}{{Af{ADl}}}{}}{{{f{ADn}}{f{Fd}}}{{Af{{l{c}}}}}C`}`{{{f{ADd}}{f{BjFh}}}Fj}{cc{}}`{{{f{Bh}}cFb}AE`{}}{{{f{Bh}}Fb}AEb}`{{{f{AEd}}Fb}{{Af{Gl}}}}{{{f{AEd}}Fb}Gl}::{{{f{ADd}}{f{Bjc}}}bAEf}{{}Fb}{ce{}{}}{{{f{AEh}}}{{Af{Fd}}}}{{{f{AEj}}}{{Af{Fd}}}}??{{{f{AEl}}}{{B`{c}}}{}}{{{f{AEl}}}{{B`{Jj}}}}{{{f{AEn}}}{{B`{c}}}{}}2{{{f{AEl}}}{{B`{{Gf{cc}}}}}{}}{{{f{AD`}}}{{Af{Fb}}}}{{{f{AF`}}FbFb}{{l{c}}}C`}{{{f{{ADf{}{{Bb{c}}}}}}e}c{}{}}0{{{f{ADh}}}{{Af{{ADj{Il}}}}}}{{{f{AEn}}JjL`}{{Af{{B`{c}}}}}{}}{{{f{AFb}}}AFb}{{{f{AFd}}{f{Cd}}Ld}{{Af{Ad}}}}{{{f{AFf}}c{B`{e}}}{{Af{AFf}}}{{Ff{}{{Bb{Lf}}}}}{}}{{{f{AFf}}ci}{{Af{AFf}}}{{Ff{}{{Bb{Lf}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{g}}}}}}}}`{{{f{AFf}}{f{Fd}}{B`{c}}}{{Af{AFf}}}{}}{{{f{AFh}}Il}{{l{c}}}C`}{{{f{AFj}}Ilc}{{l{e}}}{}C`}`{{{f{ACn}}d}{{l{c}}}C`}{{{f{ACn}}Dn}{{l{c}}}C`}{{{f{AFl}}Db}{{B`{Jj}}}}{{{f{AEl}}}{{B`{c}}}{}}{{{f{AFn}}{f{c}}}{{Af{AFn}}}Lh}{{{f{AG`}}{f{c}}}AG`Lh}{{{f{AGb}}}{{En{{f{{Dd{Db}}}}}}}}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}{{{f{AD`}}}{{Af{AD`}}}}8{ce{}{}}`{{{f{AGd}}{f{Fd}}{f{{l{c}}}}}{{Af{{l{c}}}}}C`}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}C`C`{{Cd{ff}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}C`}{{{l{c}}{l{e}}gik}{{l{m}}}C`C`{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`Fl{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}C`C`{{AGf{B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}g}bC`C`{{Cj{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`{}{{Cj{}{{Cb{g}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bh}}}{{l{k}}}C`C`{FlAGh}{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bh}}}{{l{k}}}C`C`Fl{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}C`C`Fl{{Cj{}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}C`C`{{Cj{ff}{{Cb{{A@j{Fl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}C`C`{{Cj{ff}{{Cb{{A@j{Fl}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{G`{{l{m}}i}}}C`C`{}{}{{Cj{B`B`}{{Cb{{G`{{B`{g}}i}}}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}C`C`C`{{AGj{B`B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}k}{{G`{{l{m}}i}}}C`C`FlAGl{{Cj{ff}{{Cb{{G`{gi}}}}}}}{{C`{}{{Fn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bh}}}{{G`{{l{m}}i}}}C`C`FlAGl{{Cj{ff}{{Cb{{G`{gi}}}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{G`{{l{c}}g}}}C`C`AGl{{Cj{ff}{{Cb{{G`{{A@j{Fl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{G`{{l{o}}k}}}C`C`C`{}{}{{Cj{B`B`B`}{{Cb{{G`{{B`{i}}k}}}}}}}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{B`}{{Cb{{G`{{B`{e}}g}}}}}}}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{G`{eg}}}}}}}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{FlAGh}AGl{{Cj{f}{{Cb{{G`{eg}}}}}}}{{C`{}{{Fn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}C`{{AGn{B`}}}C`}{{{f{{l{c}}}}e}{{l{g}}}C`AGnC`}{{{f{{l{c}}}}g}{{l{i}}}C`Fl{{Cj{f}{{Cb{e}}}}}{{C`{}{{Fn{e}}}}}}{{{l{c}}g}{{l{i}}}C`Fl{{Cj{}{{Cb{e}}}}}{{C`{}{{Fn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}C`{FlAGh}{{Cj{f}{{Cb{e}}}}}{{C`{}{{Fn{e}}}}}}0{{{f{{l{c}}}}}Fbn}0{{HdHd}Hd}{{{f{E`}}Lf}{{Af{b}}}}{{{f{{AH`{Lf}}}}Lf}{{Af{b}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAHbd}{{En{Lf}}}C`{{Bf{}{{Bb{B`}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{AHb}}}AHb}{{{f{c}}{f{Bje}}}b{}{}}{{}AHb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{AHb}}{f{AHb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AHb}}{f{BjFh}}}Fj}{cc{}}{{{f{AHb}}{f{Bjc}}}bAEf}{{}Fb}{ce{}{}}{{{f{{Dd{f}}}}cLfe}{{En{Lf}}}{{Bf{}{{Bb{B`}}}}}{{Cd{fFbf}{{Cb{d}}}}}}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}4`{{Fb{f{Bj{En{d}}}}}b}```{{{f{AHd}}FbFb}AHd}0{{Fb{f{{Dd{Ad}}}}{f{BjEb}}}{{Af{{AHf{E`}}}}}}{{{f{{Dd{Ad}}}}{f{{Dd{d}}}}d}{{Af{AHh}}}}{{{f{Bh}}{f{{Dd{Ad}}}}{f{{Dd{d}}}}d}{{Af{AHj}}}}{{{f{Bh}}{f{{Dd{Ad}}}}}{{Af{AHj}}}}{{{f{Ad}}}{{Af{El}}}}{{{f{{Dd{Ad}}}}}{{Af{AHh}}}}{{{f{{Dd{Ad}}}}}{{Af{AHj}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{{{f{Dn}}}Dn}{{{f{Eb}}}Eb}{{{f{c}}{f{Bje}}}b{}{}}0{{}Dn}{{}Eb}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0``{Fbb}0{{{f{Dn}}{f{Dn}}}d}{{{f{Eb}}{f{Eb}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dn}}{f{BjFh}}}Fj}{{{f{Eb}}{f{BjFh}}}Fj}{cc{}}{{{f{Eb}}}Dn}{{{f{Dn}}}Eb}2{{{f{Dn}}{f{Bjc}}}bAEf}{{{f{Eb}}{f{Bjc}}}bAEf}{{}Fb}0{ce{}{}}0````{{}Dn}{{}Eb}``{{{f{AHd}}FbFb}AHd}0{{{f{c}}}e{}{}}0{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}066{{Dnd}Dn}{{Ebd}Eb}101010{{Ebc}Eb{{Ff{}{{Bb{d}}}}}}{DnDn}{EbEb}`{AHlIl}00{{}d}>>0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000{{{f{Dl}}}d}{{{f{Hl}}{f{Hl}}}c{}}{{{f{Fd}}{f{Fd}}}c{}}{{FdFd}c{}}{{MdMd}c{}}{{{f{Md}}{f{Md}}}c{}}{{{f{Md}}{f{Bh}}}c{}}{{{f{Ed}}{f{Ed}}}c{}}{{EdEd}c{}}{{{f{Ed}}{f{{Dd{Db}}}}}c{}}{{{f{Gl}}{f{Gl}}}Gl}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{{{f{Md}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ed}}{f{Ad}}}{{Af{Ad}}}}{{{f{Fd}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dl}}{f{Aj}}}Ad}{{{f{Fd}}{f{Aj}}}Ad}{{{f{Md}}{f{Aj}}}Ad}{{{f{Ed}}{f{Aj}}}Ad}{{{f{{ABn{c}}}}{f{Aj}}}AdHb}{{{f{Fd}}}d}{{{f{Fd}}}{{B`{d}}}}{{{f{Dl}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{Dl}}{f{Bh}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Dl}}c}Dl{{Cd{{B`{Ad}}}{{Cb{{B`{Ad}}}}}}Cf}}{{{f{Fd}}c}Fd{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}Cf}}{{{f{Md}}c}Md{{Cd{{B`{{f{Bh}}}}}{{Cb{{B`{{AI`{Bh}}}}}}}}Cf}}{{{f{Ed}}c}Ed{{Cd{{B`{{f{{Dd{Db}}}}}}}{{Cb{{B`{{AI`{{Dd{Db}}}}}}}}}}Cf}}{{{f{{ABn{c}}}}e}{{ABn{c}}}Hb{{Cd{{B`{{f{c}}}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{Dl}}c}Dl{{Cj{Ch}{{Cb{Ad}}}}}}{{{f{Dl}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{AIb}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{AId}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{Fd}}{f{Cd}}}Fd}{{{f{Md}}{f{Cd}}}Md}{{{f{Ed}}{f{Cd}}}Ed}{{{f{Fd}}{f{Cd}}}{{l{c}}}C`}{{{f{Md}}{f{Cd}}}{{l{c}}}C`}{{{f{Ed}}{f{Cd}}}{{l{c}}}C`}{{{f{Md}}c}Md{{Cj{{f{Bh}}}{{Cb{{f{Bh}}}}}}}}{{{f{Ed}}c}Ed{{Cj{{f{{Dd{Db}}}}}{{Cb{{f{{Dd{Db}}}}}}}}}}{{{f{Md}}c}Md{{Cj{{f{Bh}}{f{BjDj}}}}}}{{{f{Dl}}{f{Cd}}}{{Af{Dl}}}}{{{f{Dl}}e{f{Bj{Dd{c}}}}}b{}{{Cd{{B`{Ad}}{f{c}}}{{Cb{c}}}}}}{{{f{Fd}}e{f{Bj{Dd{c}}}}}b{}{{Cd{{B`{d}}{f{c}}}{{Cb{c}}}}}}{{{f{Md}}e{f{Bj{Dd{c}}}}}b{}{{Cd{{B`{{f{Bh}}}}{f{c}}}{{Cb{c}}}}}}{{{f{Ed}}e{f{Bj{Dd{c}}}}}b{}{{Cd{{B`{{f{{Dd{Db}}}}}}{f{c}}}{{Cb{c}}}}}}{{{f{{ABn{c}}}}g{f{Bj{Dd{e}}}}}bHb{}{{Cd{{B`{{f{c}}}}{f{e}}}{{Cb{e}}}}}}{{{f{Dl}}c}Dl{{Cd{Ad}{{Cb{Ad}}}}Cf}}{{{f{Fd}}c}Fd{{Cd{d}{{Cb{d}}}}Cf}}{{{f{Md}}c}Md{{Cd{{f{Bh}}}{{Cb{{AI`{Bh}}}}}}Cf}}{{{f{Ed}}c}Ed{{Cd{{f{{Dd{Db}}}}}{{Cb{{AI`{{Dd{Db}}}}}}}}Cf}}{{{f{{ABn{c}}}}e}{{ABn{c}}}Hb{{Cd{{f{c}}}{{Cb{c}}}}Cf}}{{{f{Fd}}Dn}E`}{{{f{Md}}Dn}E`}{{{f{Ed}}Dn}E`}{{{f{AHj}}Dn}E`}{{{f{Fd}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Md}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Ed}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{AHj}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Fd}}}{{Af{E`}}}}{{{f{Md}}}{{Af{E`}}}}{{{f{Ed}}}{{Af{E`}}}}{{{f{{ABn{c}}}}}{{Af{E`}}}Hb}{eAIf{}{{Ff{}{{Bb{c}}}}}}0{{AAne}AIh{}{{Ff{}{{Bb{c}}}}}}0{{{f{Jh}}}Gl}{{{f{Md}}}Ed}{{{f{Gl}}}Gl}{{{f{Dh}}}{{f{Dh}}}}{{{f{Lb}}}{{f{Dh}}}}{{{f{AIj}}}{{f{Dh}}}}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}}{{B`{{f{{Dd{c}}}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dl}}{f{{l{c}}}}{f{{l{e}}}}g}DlC`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Ad}}}}}}}}{{{f{Fd}}{f{Fd}}}c{}}{{FdFd}c{}}1010{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bjc}}}{{f{Bje}}}{}{}}0000000000000000000000000000000000{Dh{{A@j{Dh}}}}{{{f{AJf}}{f{AJf}}c}{{Af{AJf}}}AJh}{{{f{AJj}}{f{Dh}}}{{Af{Ad}}}}{{{f{Hl}}{f{Dh}}}{{Af{Ad}}}}{{{f{Dl}}{f{Dh}}}{{Af{Ad}}}}{{{f{Fd}}{f{Dh}}}{{Af{Ad}}}}{{{f{Md}}{f{Dh}}}{{Af{Ad}}}}{{{f{Ed}}{f{Dh}}}{{Af{Ad}}}}{{{f{AHj}}{f{Dh}}}{{Af{Ad}}}}{{{f{Gl}}{f{Dh}}}Gl}54321`{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}0000{{{f{AIb}}{f{Ad}}}{{Af{Ad}}}}{{{f{AId}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AJl{ce}}}}}{{AJl{ce}}}C`C`}{{{f{Jh}}}Jh}{{{f{AJn}}}AJn}{{{f{Gl}}}Gl}{{{f{AK`}}}AK`}{{{f{Dh}}}Dh}{{{f{Lb}}}Lb}{{{f{AKb}}}AKb}{{{f{AKd}}}AKd}{{{f{AKf}}}AKf}{{{f{Jl}}}Jl}{{{f{Kb}}}Kb}{{{f{AKh}}}AKh}{{{f{AKj}}}AKj}{{{f{Kh}}}Kh}{{{f{Kf}}}Kf}{{{f{Cl}}}Cl}{{{f{Cn}}}Cn}{{{f{AKl}}}AKl}{{{f{AKn}}}AKn}{{{f{Df}}}Df}{{{f{D`}}}D`}{{{f{AL`}}}AL`}{{{f{Al}}}Al}{{{f{ALb}}}ALb}{{{f{ALd}}}ALd}{{{f{ALf}}}ALf}{{{f{ALh}}}ALh}{{{f{AAn}}}AAn}{{{f{ALj}}}ALj}{{{f{c}}{f{Bje}}}b{}{}}00000000000000000000000000000{{{f{BjLb}}Dh}b}{ALle{}{{AIf{c}}AGh}}0{{ALlAAn}e{}{{AIh{c}}AGh}}0{{{f{Dh}}}d}00{ALnDh}{{{f{Lb}}}{{f{Dh}}}}{{}Gl}{{}AK`}{{}Dh}{{}AAn}{Fb{{f{c}}}{}}{{{f{{AJl{ce}}}}}{{f{g}}}C`C`{}}1111111111111111111111111111111111{{{f{Bj{AJl{ce}}}}}{{f{Bjg}}}C`C`{}}{Fb{{f{Bjc}}}{}}0000000000000000000000000000000000{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{Fbb}0000000000000000000000000000000000{{{f{AJj}}}{{f{Dh}}}}{{{f{Hl}}}{{f{Dh}}}}{{{f{Jh}}}{{f{Dh}}}}{{{f{Gl}}}Dh}`{{{f{Gl}}{f{Gl}}}d}{{{f{AK`}}{f{AK`}}}d}{{{f{Dh}}{f{Dh}}}d}{{{f{Dh}}{f{AAn}}}d}{{{f{Lb}}{f{Lb}}}d}{{{f{AKb}}{f{AKb}}}d}{{{f{AAn}}{f{AAn}}}d}{{{f{ALj}}{f{ALj}}}d}{{{f{Gl}}{f{Gl}}d}d}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Bh}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Ed}}{f{{Dd{Db}}}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}543201{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{Dl}}}{{Af{{Gf{Ad{ADj{Il}}}}}}}}{{{f{Md}}}{{Af{{Gf{Ad{ADj{Il}}}}}}}}{{{f{{AJl{ce}}}}}LbC`C`}{{{f{Fd}}d}{{Af{Fd}}}}{{{f{Ed}}{f{{Dd{Db}}}}}{{Af{Ed}}}}{{{f{Dl}}{f{Fd}}}{{Af{Dl}}}}{{{f{Fd}}{f{Fd}}}{{Af{{l{Al}}}}}}{{{f{Md}}{f{Fd}}}{{Af{{l{Df}}}}}}{{{f{Ed}}{f{Fd}}}{{Af{{l{D`}}}}}}{{{f{AHj}}{f{Fd}}}{{Af{AHj}}}}{{{f{{ABn{c}}}}{f{Fd}}}{{Af{{l{{Gn{c}}}}}}}Hb}{{AJh{f{AM`}}{f{AM`}}}{{Af{AM`}}}}{{{f{Dl}}{f{BjFh}}}Fj}{{{f{Md}}{f{BjFh}}}Fj}{{{f{Ed}}{f{BjFh}}}Fj}{{{f{{ABn{c}}}}{f{BjFh}}}FjHb}{{{f{AJn}}{f{BjFh}}}Fj}{{{f{Gl}}{f{BjFh}}}Fj}0{{{f{AK`}}{f{BjFh}}}Fj}{{{f{Dh}}{f{BjFh}}}Fj}0{{{f{Lb}}{f{BjFh}}}Fj}{{{f{AKb}}{f{BjFh}}}Fj}0{{{f{AAn}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{ALj}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{Dl}}c}b{{Cj{{B`{Ch}}}}}}{cc{}}0000000{{{f{{Dd{Db}}}}}Gl}{{{f{Bh}}}Gl}2{cGlAMd}{{{B`{c}}}Gl{{AMf{Gl}}}}{dGl}55{{{f{Gl}}}Dh}{GlDh}{{{f{AAn}}}Dh}{{{f{Gl}}}Lb}{{{f{AMh}}}Lb}::{{{f{ALj}}}AKb};;;;;;;;;;;;;;;;;;;;{AMjAAn}{AMlAAn}=={{{f{AAn}}d}Dh}{cDl{{Ff{}{{Bb{{B`{{A@j{Fl}}}}}}}}}}{eDl{{AMn{Ad}}}{{Ff{}{{Bb{c}}}}}}{cDl{{Ff{}{{Bb{{B`{Ad}}}}}}}}{cFd{{Ff{}{{Bb{d}}}}}}{eMd{{K`{Bh}}}{{Ff{}{{Bb{{B`{c}}}}}}}}{eMd{{`{Bh}}}{{Ff{}{{Bb{c}}}}}}{eEd{{`{{Dd{Db}}}}}{{Ff{}{{Bb{c}}}}}}{eEd{{K`{{Dd{Db}}}}}{{Ff{}{{Bb{{B`{c}}}}}}}}{e{{ABn{c}}}Hb{{Ff{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}c}{{l{Al}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{{f{Bh}}e}Md{{K`{Bh}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}e}Ed{{K`{{Dd{Db}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}e}{{ABn{c}}}Hb{{Bf{}{{Bb{{B`{c}}}}}}}}:;97856{eAHj{{`{{Dd{Db}}}}}{{Ff{}{{Bb{c}}}}}}{eAHj{{K`{{Dd{Db}}}}}{{Ff{}{{Bb{{B`{c}}}}}}}}6{{{f{Bh}}c}{{l{Al}}}{{Bf{}{{Bb{d}}}}}}{{{f{Bh}}e}Md{{K`{Bh}}}{{Bf{}{{Bb{c}}}}}}{{{f{Bh}}e}Ed{{K`{{Dd{Db}}}}}{{Bf{}{{Bb{c}}}}}}{{{f{Bh}}e}{{ABn{c}}}Hb{{Bf{}{{Bb{c}}}}}}{{AN`Dh}Lb}{cDl{{Gh{}{{Bb{{B`{Ad}}}}}}}}{cFd{{Gh{}{{Bb{{B`{d}}}}}}}}{cFd{{Gh{}{{Bb{d}}}}}}{eMd{{K`{Bh}}HnI`}{{Gh{}{{Bb{{B`{c}}}}}}}}{eMd{{`{Bh}}HnI`ANb}{{Gh{}{{Bb{c}}}}}}{eEd{{`{{Dd{Db}}}}HnI`ANb}{{Gh{}{{Bb{c}}}}}}{eEd{{K`{{Dd{Db}}}}HnI`}{{Gh{}{{Bb{{B`{c}}}}}}}}{{c{f{Bh}}Dh}Dl{{Gh{}{{Bb{{B`{Ad}}}}}}}}{{{f{Bh}}{f{{Dd{d}}}}}Fd}{{{f{Bh}}{f{{Dd{c}}}}}Md{{K`{Bh}}}}{{{f{Bh}}{f{{Dd{c}}}}}Ed{{K`{{Dd{Db}}}}}}{{{f{Bh}}{f{{Dd{c}}}}}{{ABn{c}}}Hb}{{{f{Bh}}{f{{Dd{{B`{d}}}}}}}Fd}{{{f{Bh}}{f{{Dd{{B`{c}}}}}}}Md{{K`{Bh}}}}{{{f{Bh}}{f{{Dd{{B`{c}}}}}}}Ed{{K`{{Dd{Db}}}}}}{{{f{Bh}}{f{{Dd{{B`{c}}}}}}}{{ABn{c}}}Hb}{cFd{{Gj{}{{Bb{{B`{d}}}}}}}}{{{En{c}}AAn}{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{En{c}}AAn}{{AGh{}{{AIl{e}}{AIn{c}}{AJ`{g}}}}}{AJb{AJd{e}}}Ob{{F`{}{{Bb{e}}}}GjHnI`}}{{FbcAAn}{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Bh}}{f{Ad}}Fb}Dl}{{{f{Bh}}dFb}Fd}{{{f{Bh}}{f{Bh}}Fb}Md}{{{f{Bh}}{f{{Dd{Db}}}}Fb}Ed}{{{f{Bh}}{f{{Dd{Db}}}}Fb}AHj}{{{f{Bh}}cFb}{{ABn{c}}}Hb}{{FbAAn}{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Bh}}Fb}Dl}{{{f{Bh}}Fb}Fd}{{{f{Bh}}Fb}Md}{{{f{Bh}}Fb}Ed}{{{f{Bh}}Fb}AHj}{{{f{Bh}}Fb}{{ABn{c}}}Hb}{{{f{Bh}}Fb{f{Dh}}}Dl}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}Fb}{{B`{c}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Hl}}Fb}{{Af{Gl}}}}{{{f{AJj}}Fb}{{Af{Gl}}}}0{{{f{Dl}}Fb}{{Af{Gl}}}}{{{f{Fd}}Fb}{{Af{Gl}}}}{{{f{Md}}Fb}{{Af{Gl}}}}{{{f{Ed}}Fb}{{Af{Gl}}}}{{{f{AHj}}Fb}{{Af{Gl}}}}{{{f{{ABn{c}}}}Fb}{{Af{Gl}}}Hb}{{{f{Hl}}Fb}Gl}{{{f{AJj}}Fb}Gl}0{{{f{Dl}}Fb}Gl}{{{f{Fd}}Fb}Gl}{{{f{Md}}Fb}Gl}{{{f{Ed}}Fb}Gl}{{{f{AHj}}Fb}Gl}{{{f{{ABn{c}}}}Fb}GlHb}{{{f{Dl}}Fb}{{B`{Ad}}}}{{}Dh}00000000000000000000000{{{f{Dl}}}Ad}{{{f{{ABn{c}}}}Fb}{{B`{{f{H`}}}}}Hb}0{{{f{Gl}}}{{B`{{f{Bh}}}}}}{{{f{ANd}}Fb}Gl}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}Fb}{{B`{c}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dl}}}Fb}{{{f{Md}}}Fb}{{{f{AHj}}}Fb}{{{f{Dl}}dd}{{Af{Aj}}}}{{{f{Fd}}dd}{{Af{Aj}}}}{{{f{Md}}dd}{{Af{Aj}}}}{{{f{Ed}}dd}{{Af{Aj}}}}{{{f{AHj}}dd}{{Af{Aj}}}}{{{f{{ABn{c}}}}dd}{{Af{Aj}}}Hb}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Bh}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Ed}}{f{{Dd{Db}}}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}542310{{{f{Gl}}{f{Bjc}}}bAEf}{{{f{AK`}}{f{Bjc}}}bAEf}{{{f{Dh}}{f{Bjc}}}bAEf}{{{f{Lb}}{f{Bjc}}}bAEf}{{{f{AKb}}{f{Bjc}}}bAEf}{{{f{AAn}}{f{Bjc}}}bAEf}{{{f{ALj}}{f{Bjc}}}bAEf}{{{f{Gl}}{f{Bjc}}d}bAEf}{{}Fb}0000000000000000000000000000000000{{{f{Dl}}}Dh}{{{f{Dh}}}{{B`{{f{Dh}}}}}}{{{f{AAn}}}{{B`{{f{AAn}}}}}}{ce{}{}}0000000000000000000000000000000000{{ANf{B`{Fb}}Fb}{{Af{Hl}}}}{{ANf{B`{Fb}}Fb}Hl}{{{f{Dl}}}c{}}{{{f{Fd}}}c{}}{{{f{Md}}}c{}}{{{f{Ed}}}c{}}{{{f{AHj}}}c{}}{{{f{{ABn{c}}}}}eHb{}}{HlAd}{ANfAd}{{Jh{f{Bh}}}Ad}{Gl{{Af{Gl}}}}{{{f{Dh}}}d}00{{{f{Gl}}}d}111010111110101011110111101{{{f{AAn}}}d}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}}{{ABf{cgABd}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dl}}}{{`{{Bf{}{{Bb{Il}}}}}}}}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}}{{B`{c}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dh}}}{{f{Dh}}}}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Md}}{f{Bh}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}{{{f{Ed}}{f{{Dd{Db}}}}}Fd}542301{{{f{AJf}}{f{AJf}}}{{Af{{Gf{AJfAJf}}}}}}{{DlDl}{{Af{{Gf{DlDl}}}}}}{{{f{Dh}}{f{Dh}}}{{Af{d}}}}{{{f{Fd}}}{{B`{d}}}}{{{f{Fd}}}Jh}{{{f{Md}}}Jh}{{{f{Ed}}}Jh}{{{f{Fd}}}{{B`{Jj}}}}{{{f{AIb}}}{{B`{Hf}}}}{{{f{AId}}}{{B`{Jj}}}}{{{f{AIb}}}Jh}{{{f{AId}}}Jh}{{{f{Dh}}{f{Dh}}}{{Af{Dh}}}}9876{{{f{Bh}}{f{{Dd{Db}}}}FbFb}Fd}{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{{{f{Md}}}{{Af{Fb}}}}{{{f{Ed}}}{{Af{Fb}}}}{{{f{Lb}}}{{f{AN`}}}}`{{}c{}}00{{{f{Bh}}c}Md{{K`{{Dd{{B`{{AI`{Bh}}}}}}}}}}{{{f{Bh}}c}Md{{K`{{Dd{{f{Bh}}}}}}}}{{{f{Bh}}c}Md{{K`{{Dd{{AI`{Bh}}}}}}}}{{{f{Bh}}c}Md{{K`{{Dd{{B`{{f{Bh}}}}}}}}}}{{{f{Bh}}c}Ed{{K`{{Dd{{B`{{AI`{{Dd{Db}}}}}}}}}}}}{{{f{Bh}}c}Ed{{K`{{Dd{{f{{Dd{Db}}}}}}}}}}{{{f{Bh}}c}Ed{{K`{{Dd{{AI`{{Dd{Db}}}}}}}}}}{{{f{Bh}}c}Ed{{K`{{Dd{{B`{{f{{Dd{Db}}}}}}}}}}}}{{{f{Bh}}e}{{ABn{c}}}Hb{{K`{{Dd{{B`{c}}}}}}}}{{{f{Bh}}{f{{Dd{c}}}}}{{ABn{c}}}Hb}{{DhGl}Jh}{{{f{Bh}}Dh}Lb}{{{f{Bh}}}{{ABn{c}}}Hb}{{{f{Dl}}FbFb}Dl}{{{f{Fd}}FbFb}Fd}{{{f{Md}}FbFb}Md}{{{f{Ed}}FbFb}Ed}{{{f{AHj}}FbFb}AHj}{{{f{{ABn{c}}}}FbFb}{{ABn{c}}}Hb}{{{f{Bh}}{En{c}}}{{ABn{c}}}Hb}{{{f{Bh}}{En{c}}Gd}{{ABn{c}}}Hb}{{{f{Fd}}}c{}}{Fdc{}}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Bh}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}{{{f{Ed}}{f{{Dd{Db}}}}}Fd}543210{{{f{Dl}}}{{Af{{ADj{Il}}}}}}{{{f{Md}}}{{Af{{ADj{Il}}}}}}{{{f{Dl}}}{{`{{Kl{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{Md}}}{{`{{Kl{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{BjDl}}}{{`{{Kn{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{Md}}}{{`{{Kn{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{Gl}}{f{Gl}}}{{B`{ANh}}}}{{{f{AKb}}{f{AKb}}}{{B`{ANh}}}}{{{f{Hl}}}{{B`{Fb}}}}{{{f{{AJl{ALbHj}}}}}{{B`{Fb}}}}{{{f{AIb}}JjL`}{{Af{{B`{Hf}}}}}}{{{f{AId}}JjL`}{{Af{{B`{Jj}}}}}}{{{f{AIb}}JjL`}{{Af{Jh}}}}{{{f{AId}}JjL`}{{Af{Jh}}}}{{{f{Bh}}FbJj}{{Af{Fd}}}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{{{f{Dl}}}Dl}{{{f{Fd}}}Fd}{{{f{Md}}}Md}{{{f{Ed}}}Ed}{{{f{AHj}}}AHj}{{{f{{ABn{c}}}}}{{ABn{c}}}Hb}`{{{f{Hl}}}Fb}{{{f{{AJl{ALbHj}}}}}Fb}{{{f{Fd}}c{B`{d}}}{{Af{Fd}}}{{Ff{}{{Bb{Lf}}}}}}{{{f{Md}}c{B`{{f{Bh}}}}}{{Af{Md}}}{{Ff{}{{Bb{Lf}}}}}}{{{f{Ed}}c{B`{{f{{Dd{Db}}}}}}}{{Af{Ed}}}{{Ff{}{{Bb{Lf}}}}}}{{{f{Fd}}ce}{{Af{Fd}}}{{Ff{}{{Bb{Lf}}}}}{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}}}{{{f{Md}}ce}{{Af{Md}}}{{Ff{}{{Bb{Lf}}}}}{{Cd{{B`{{f{Bh}}}}}{{Cb{{B`{Dj}}}}}}}}{{{f{Ed}}ce}{{Af{Ed}}}{{Ff{}{{Bb{Lf}}}}}{{Cd{{B`{{f{{Dd{Db}}}}}}}{{Cb{{B`{{En{Db}}}}}}}}}}{{{f{Fd}}{f{Fd}}{B`{d}}}{{Af{Fd}}}}{{{f{Md}}{f{Fd}}{B`{{f{Bh}}}}}{{Af{Md}}}}{{{f{Ed}}{f{Fd}}{B`{{f{{Dd{Db}}}}}}}{{Af{Ed}}}}{{{f{BjDl}}}b}{{{f{BjDl}}Dh}b}{{{f{BjLb}}AN`}b}{{{f{Dl}}Il}Dl}{{{f{Fd}}Il}Fd}{{{f{Md}}Il}Md}{{{f{Ed}}Il}Ed}{{{f{AHj}}Il}AHj}{{{f{{ABn{c}}}}Il}{{ABn{c}}}Hb}{{{f{Dl}}Il{B`{{f{Ad}}}}}Dl}{{{f{Fd}}Il{B`{d}}}Fd}{{{f{Md}}Il{B`{{f{Bh}}}}}Md}{{{f{Ed}}Il{B`{{f{{Dd{Db}}}}}}}Ed}{{{f{AHj}}Il{B`{{f{{Dd{Db}}}}}}}AHj}{{{f{{ABn{c}}}}Il{B`{{Gn{c}}}}}{{l{{Gn{c}}}}}Hb}{{{f{Fd}}d}Fd}{{{f{Md}}d}Md}{{{f{Ed}}d}{{l{D`}}}}{{{f{AHj}}d}AHj}{{{f{Fd}}Dn}{{l{Al}}}}{{{f{Md}}Dn}{{l{Df}}}}{{{f{Ed}}Dn}{{l{D`}}}}{{{f{AHj}}Dn}AHj}{{{f{AIb}}Db}Jh}{{{f{AId}}Db}Jh}{{{f{Gl}}{f{Dh}}}{{B`{Gl}}}}`{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{{{f{Fd}}}{{B`{Lf}}}}{{{f{Fd}}}Jh}{{{f{Md}}}Jh}{{{f{Ed}}}Jh}{{{f{Md}}{f{c}}}Md{{K`{{Dd{Lf}}}}Lh}}{{{f{Md}}{f{E`}}}Md}{{{f{Ed}}{f{c}}}Ed{{K`{{Dd{Lf}}}}Lh}}{{{f{Ed}}{f{E`}}}Ed}{{{f{Dh}}d}AAn}{{{f{Lb}}d}AMh}{AKbALj}{{{f{Dh}}{f{Bh}}d}AMh}{AKb{{f{Bh}}}}{{{f{Md}}Fb}{{Af{Ad}}}}{{{f{BjDl}}Dh}b}{{{f{AAn}}}{{f{AAn}}}}{{{f{Dl}}}{{Af{Mb}}}}{{{f{c}}}e{}{}}00000000000000000000000000000{{{f{Dh}}}Dh}{{{f{AAn}}}ANj}{{{f{c}}}Dj{}}00{{{f{Ed}}}Md}{{{f{Gl}}{f{Gl}}}d}{{{f{Dl}}c}{{Af{Dl}}}{{Cj{Ch}{{Cb{{Af{Ad}}}}}}}}{{{f{Dl}}e}{{Af{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Af{{B`{c}}}}}}}}Cf}C`}{g{{G`{AIfe}}}{}{}{{Ff{}{{Bb{{G`{ce}}}}}}}}0{{AAng}{{G`{AIhe}}}{}{}{{Ff{}{{Bb{{G`{ce}}}}}}}}0{ALl{{G`{eg}}}{}{{AIf{c}}AGh}{}}0{{ALlAAn}{{G`{eg}}}{}{{AIh{c}}AGh}{}}0{{{f{Gl}}}{{Af{c}}}Jf}{c{{G`{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{Gl}}{f{Dh}}}{{Af{Gl}}}}{{{f{Dh}}d}{{Af{AAn}}}}{{{f{Dl}}{f{{l{c}}}}e}{{Af{Dl}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Af{{B`{Ad}}}}}}}}}}{{{f{c}}}Mh{}}0000000000000000000000000000000000{{{f{AAn}}}AAn}{{{f{Fd}}}{{Af{Fd}}}}{{{f{Md}}}{{Af{Md}}}}{{{f{Ed}}}{{Af{Ed}}}}{{{f{{ABn{c}}}}}{{Af{{l{{Gn{c}}}}}}}Hb}{{{f{BjJh}}Gl}b}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}Fb}cOb{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Jh}}}{{f{Gl}}}}1{{{f{Dh}}Gl}d}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}}gOb{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{AIb}}Db}Jh}{{{f{AId}}Db}Jh}{{{f{Fd}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{ANl}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{ANn}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AM`}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AO`}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOb}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOd}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOf}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOh}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{ANf}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AIb}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AId}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{Md}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{Ed}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AHj}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{{ABn{c}}}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}Hb}{{{f{Fd}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{ANl}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{ANn}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AM`}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AO`}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOb}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOd}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOf}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOh}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{ANf}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AIb}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AId}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{Md}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{Ed}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AHj}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{{ABn{c}}}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}Hb}{ce{}{}}0000000000000000000000000000000000{Fbc{}}0{Fb{{AOj{ce}}}{}{}}{{{f{{Dd{Mj}}}}e}c{}{{Ml{{f{E`}}}{{Cb{c}}}}}}{{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}{B`{Gd}}}{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dh}}}Gl}{{{f{Dl}}{f{{l{c}}}}e}DlC`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{AJf}}}d}{{AJfd}AJf}{{{f{BjAOl}}{B`{{f{Bh}}}}}b}{{{f{BjAJf}}{f{AJf}}}{{Af{b}}}}{{{f{BjAOl}}}b}{{{f{BjAOl}}{f{Bh}}}b}{{{f{AJf}}Dn}E`}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bjc}}}{{f{Bje}}}{}{}}000{{{f{AJf}}{f{AJf}}c}{{Af{AJf}}}AJh}{{{f{AJf}}{f{Dh}}}{{Af{Ad}}}}{{{f{AJf}}}AJf}{{{f{c}}{f{Bje}}}b{}{}}{{}AOn}{Fb{{f{c}}}{}}000{Fb{{f{Bjc}}}{}}000{{AOlc}AJf{{Ff{}{{Bb{{B`{{f{Bh}}}}}}}}}}{Fbb}000{{{f{AJf}}}{{f{Dh}}}}{{{f{AJf}}{f{Bh}}}c{}}{{{f{AJf}}{f{AJf}}}c{}}{{{f{AJf}}{f{Md}}}c{}}210{{AJh{f{AM`}}{f{AM`}}}{{Af{AM`}}}}{AOlAJf}{AOn{{ABj{B@`}}}}{cc{}}000{{AM`{ABj{B@`}}dB@b}AJf}{{AM`B@b}AJf}{{{f{Md}}{f{ALn}}B@b}{{Af{AJf}}}}{{{f{Bh}}dFbB@b}AJf}{{{f{AJf}}Fb}{{Af{Gl}}}}{{{f{AJf}}Fb}Gl}{{{f{AJf}}}{{f{{ABj{B@`}}}}}}=<;<=;{{}Fb}000{ce{}{}}0000{AJfAd}{{{f{AJf}}}d}0{{{f{AJf}}}B@d}{{{f{AJf}}}Fb}{{{f{AJf}}{f{Md}}}c{}}{{{f{AJf}}{f{AJf}}}c{}}{{{f{AJf}}{f{Bh}}}c{}}102{{{f{AJf}}{f{AJf}}}{{Af{{Gf{AJfAJf}}}}}}{{DlDl}{{Af{{Gf{DlDl}}}}}}{{{f{AJf}}}Jh}{{{f{BjAOn}}{f{{ABj{B@`}}}}}{{Af{b}}}}1{{{f{AJf}}}{{Af{Fb}}}}{{{f{AJf}}}{{f{Bh}}}}{{{f{Bh}}FbB@b}AOl}{{{ABj{B@`}}}AOn}{{{f{BjB@d}}}{{B`{c}}}{}}:9;9;:<{{{f{AJf}}}{{f{AM`}}}}{{{f{BjAOl}}{f{Bh}}}{{Gf{Jnd}}}}`{{{f{B@d}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{AJf}}d}AJf}{{{f{AJf}}Dn}AJf}`{{{f{AJf}}dd}El}{{{f{AJf}}{f{ALn}}B@f}AJf}{{{f{AJf}}}{{Af{AJf}}}}{{{f{AJf}}}AJf}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0000000{{{f{c}}}Mh{}}0004{{{f{AJf}}}d}{{{f{AJf}}}{{Af{B@h}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{ALnB@`}{{{f{B@b}}}B@b}{{{f{B@`}}}B@`}{{{f{c}}{f{Bje}}}b{}{}}0{{}B@b}{{}B@`}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{{{f{B@b}}{f{B@b}}}d}{{{f{B@`}}{f{Bh}}}{{B`{Jn}}}}{{{f{B@b}}{f{BjFh}}}Fj}{{{f{B@`}}{f{BjFh}}}Fj}{cc{}}0{{{f{B@`}}Jn}{{f{Bh}}}}{{{f{B@`}}}{{f{ALn}}}}{{{f{B@`}}Jn}{{B`{{f{Bh}}}}}}{{}Fb}0{ce{}{}}0{{{f{B@`}}}d}0{{{f{B@`}}}Fb}{{{f{B@`}}{f{B@`}}}d}{{{f{c}}}e{}{}}0{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{}B@j}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{{}b}{Fbb}{{{f{BjB@j}}}b}2{cc{}}6{{}Fb}{ce{}{}}<<;{{}d}1```````660````````````````````{{{f{B@l}}}{{f{Bh}}}}<<;;`99{{{f{B@l}}}f}9977`{{{f{B@n}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{B@l}}{f{BjFh}}}{{G`{bAMb}}}}07{cB@l{{AMf{{AI`{Bh}}}}}}8{{}{{J`{{f{Bh}}B@n}{{Cb{b}}}}}}8877{cAHnAGl}````{{{J`{{f{Bh}}B@n}{{Cb{b}}}}}b}{cAHnBA`}{{{f{c}}}Dj{}}{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BAb}}}BAb}{{{f{c}}{f{Bje}}}b{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BjFh}}BAdFb}Fj}{cc{}}{{}BAf}{{}BAb}{{}{{B`{Fb}}}}{{}Dj}{{}d}{{}Fb}{ce{}{}}{{{B`{BAf}}}b}{BAbb}{{{B`{Fb}}}b}2{{{B`{d}}}b}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}7```````````{{{f{c}}h}b{}}00{{{f{BjB@h}}{En{Ad}}{f{BAh}}}{{Af{b}}}}{{{f{B@h}}{f{Cd}}}{{En{Ad}}}}0{{{f{B@h}}{f{Fd}}}{{Af{B@h}}}}{{{f{B@h}}{f{{Dd{AN`}}}}}{{Af{B@h}}}}0{{{f{B@h}}IlFb}B@h}{{{f{B@h}}{f{B@h}}}c{}}{{B@h{f{Ad}}}c{}}{{{f{B@h}}{f{Ad}}}c{}}{{{f{BjB@h}}}{{f{BjB@h}}}}{{{f{BjB@h}}{f{Bh}}e}{{Af{{f{BjB@h}}}}}BAj{{Ml{{f{Ad}}}{{Cb{c}}}}}}{{{f{BjB@h}}Fbe}{{Af{{f{BjB@h}}}}}BAj{{Ml{{f{Ad}}}{{Cb{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bjc}}}{{f{Bje}}}{}{}}0000{{{f{B@h}}}B@h}{{{f{BAl}}}BAl}{{{f{BAn}}}BAn}2{{{f{c}}{f{Bje}}}b{}{}}00{{{f{B@h}}{f{Bh}}}{{Af{{f{Ad}}}}}}{{{f{B@h}}e}{{Af{{En{{f{Ad}}}}}}}{{K`{Bh}}}{{Ff{}{{Bb{c}}}}}}{{}BAn}{{}B@h}{Fb{{f{c}}}{}}0000{Fb{{f{Bjc}}}{}}0000{{{f{B@h}}{f{B@h}}}c{}}{{B@h{f{Ad}}}c{}}{{{f{B@h}}{f{Ad}}}c{}}{Fbb}000{{{f{B@h}}{f{Bh}}}{{Af{B@h}}}}1{{{f{BjB@h}}{f{Bh}}}{{Af{Ad}}}}{{{f{B@h}}{f{{Dd{c}}}}}B@h{{K`{Bh}}}}{{{f{B@h}}{f{{BB`{{f{Bh}}}}}}}B@h}{{{f{B@h}}{B`{{f{{Dd{c}}}}}}}{{Af{B@h}}}{{K`{Bh}}}}{{{f{B@h}}}{{En{Dh}}}}<{{{f{BAn}}{f{BAn}}}d}{{{f{B@h}}{f{B@h}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{B@h}}}Fb}`{{{f{B@h}}e}{{Af{B@h}}}{{K`{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{B@h}}{En{Ad}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{B@h}}}{{Af{b}}}}{{{f{B@h}}}{{En{Lb}}}}{{{f{B@h}}ADd}{{Af{B@h}}}}{{{f{B@h}}{f{Fd}}}{{Af{B@h}}}}{{{f{BAl}}{f{BjFh}}}Fj}{{{f{BAn}}{f{BjFh}}}Fj}{{{f{B@h}}{f{BjFh}}}Fj}0{cc{}}000{{{f{BAh}}}B@h}1{{{f{BBb}}}B@h}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{cB@h{{Ff{}{{Bb{Ad}}}}}}{{{f{{Dd{BBd}}}}}{{Af{B@h}}}}{{{f{{Dd{BBd}}}}{f{BAh}}}{{Af{B@h}}}}{{c{f{BAh}}}{{Af{B@h}}}{{Bf{}{{Bb{{f{BBd}}}}}}}}{{{f{B@h}}Fb}{{B`{{En{Gl}}}}}}{{{f{B@h}}{f{Bh}}}{{B`{Fb}}}}{{{f{B@h}}}{{En{{f{Bh}}}}}}{{{f{B@h}}}{{En{AN`}}}}{{{f{B@h}}}{{f{{Dd{Ad}}}}}}{{{f{BjB@h}}}{{f{Bj{En{Ad}}}}}}{{{f{B@h}}Fb}{{Af{BBd}}}}{{{f{B@h}}Fb{f{BjBBd}}}{{Af{b}}}}{{{f{B@h}}Fb{f{BjBBd}}}b}{{{f{B@h}}}{{B`{{Af{Dh}}}}}}`{{{f{B@h}}e}{{Af{BBf}}}{{K`{Bh}}}{{Ff{}{{Bb{c}}}}}}0{{{f{B@h}}{En{Ad}}dd}{{Af{BBf}}}}{{{f{BAn}}{f{Bjc}}}bAEf}{{{f{BjB@h}}{B`{Ll}}}{{Af{AO`}}}}{{{f{B@h}}{B`{Fb}}}B@h}{{{f{B@h}}}Fb}{{{f{B@h}}{f{{Dd{Ad}}}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{{Dd{Ad}}}}}{{Af{{f{BjB@h}}}}}}{{{f{BjB@h}}{f{{Dd{Ad}}}}}{{f{BjB@h}}}}{{{f{B@h}}{f{Bh}}}{{f{c}}}{}}{{{f{B@h}}Fb}{{f{c}}}{}}{{{f{B@h}}{Kd{Fb}}}{{f{c}}}{}}{{{f{B@h}}{BBh{Fb}}}{{f{c}}}{}}{{{f{B@h}}{BBj{Fb}}}{{f{c}}}{}}{{{f{B@h}}BBl}{{f{c}}}{}}{{{f{B@h}}{BBn{Fb}}}{{f{c}}}{}}{{{f{B@h}}{BC`{Fb}}}{{f{c}}}{}}{{}Fb}0000{{{f{BjB@h}}Fbc}{{Af{{f{BjB@h}}}}}BAj}{ce{}{}}000000{{{f{B@h}}}{{Af{Fd}}}}{{{f{B@h}}}d}1{{{f{B@h}}}{{In{Ad}}}}{{{f{B@h}}d}BCb}{{{f{B@h}}}BCd}{{{f{B@h}}}{{Af{{B`{Ad}}}}}}{{{f{B@h}}BAl}{{Af{{B`{Ad}}}}}}{{{f{B@h}}ce}{{Af{B@h}}}{{BCf{AN`}}}{{BCf{AN`}}}}{{{f{B@h}}BCh}{{Af{B@h}}}}3{{{f{B@h}}{f{Ad}}}c{}}{{{f{B@h}}{f{B@h}}}c{}}{{B@h{f{Ad}}}c{}}{{{f{B@h}}}Fb}{{{En{c}}}{{Af{B@h}}}BAj}{{{En{Ad}}}B@h}{{{En{Ad}}}{{Af{B@h}}}}{{{f{BjBCb}}}{{B`{c}}}{}}{{{f{BjBCd}}}{{B`{c}}}{}}{{{f{B@h}}}B@h}{{{f{B@h}}cd}{{Af{{En{B@h}}}}}{{BCf{Dj}}}}0{{B@he}{{Af{c}}}{}{{Cd{B@h}{{Cb{{Af{c}}}}}}}}{{{f{BjB@h}}e}{{Af{c}}}{}{{Cd{{f{BjB@h}}}{{Cb{{Af{c}}}}}}}}{{B@hgc}{{Af{e}}}{}{}{{Cd{B@hc}{{Cb{{Af{e}}}}}}}}{{{f{BjB@h}}}{{B`{Ad}}}}{{{f{B@h}}{f{B@h}}}d}?>={{{f{BjB@h}}{f{Bh}}{f{Bh}}}{{Af{{f{BjB@h}}}}}}{{{f{BjB@h}}{f{Bh}}c}{{Af{{f{BjB@h}}}}}BAj}{{{f{BjB@h}}Fbc}{{Af{{f{BjB@h}}}}}BAj}19`{{{f{B@h}}{f{Ad}}dd{B`{Hh}}}{{Af{B@h}}}}0{{{f{B@h}}Fbdd{B`{Hh}}}{{Af{B@h}}}}{{{f{B@h}}}BAh}{{{f{B@h}}{f{B@h}}}{{Af{b}}}}{{{f{B@h}}e}{{Af{B@h}}}{{K`{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{B@h}}Fb}{{B`{{f{Ad}}}}}}{{{f{B@h}}c}{{Af{B@h}}}{{BCj{Fb}}}}2{{{f{B@h}}c}{{Af{{En{Ad}}}}}{{BCf{AN`}}}}{{{f{B@h}}e{f{BCl}}}{{Af{B@h}}}{{K`{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{B@h}}e{f{BAh}}}{{Af{B@h}}}{{K`{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{BjB@h}}{f{{Dd{c}}}}}{{Af{b}}}{{K`{Bh}}}}{{{f{B@h}}}{{Gf{FbFb}}}}{{{f{B@h}}Il}B@h}{{{f{B@h}}}d}{{{f{BjB@h}}}b}{{{f{BCb}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{BCd}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{B@h}}IlFb}B@h}0{{{f{B@h}}cEb}{{Af{B@h}}}{{BCf{AN`}}}}{{{f{BjB@h}}cEb}{{Af{{f{BjB@h}}}}}{{BCf{AN`}}}}{{{f{BjB@h}}}{{`{{Bf{}{{Bb{B@h}}}}}}}}{{B@hFbd}{{En{B@h}}}}{{{f{B@h}}{f{Ad}}}c{}}{{{f{B@h}}{f{B@h}}}c{}}{{B@h{f{Ad}}}c{}}{{{f{B@h}}BAl}{{Af{{B`{Ad}}}}}}{{{f{B@h}}{B`{Fb}}}B@h}{{{f{B@h}}{f{E`}}}{{Af{B@h}}}}{{{f{B@h}}{f{E`}}}B@h}{{{f{B@h}}{f{E`}}d}B@h}{{{f{B@h}}BCn}{{Af{Mb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Dj{}}{{{f{B@h}}FbcEb}{{Af{B@h}}}{{BCf{AN`}}}}{{{f{BjB@h}}{B`{{f{Bh}}}}{B`{{Mf{Dj{En{Dj}}}}}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{Bh}}e}{{Af{{f{BjB@h}}}}}BAj{{Ml{{f{Ad}}}{{Cb{{Af{c}}}}}}}}{{{f{BjB@h}}Fbe}{{Af{{f{BjB@h}}}}}BAj{{Ml{{f{Ad}}}{{Cb{{Af{c}}}}}}}}{c{{G`{e}}}{}{}}000{BD`{{Af{B@h}}}}{{{Gf{BDb{f{{Dd{AMh}}}}}}}{{Af{B@h}}}}2{{c{f{BAh}}}{{Af{B@h}}}{{Bf{}{{Bb{{Af{{f{BBd}}}}}}}}}}{{{f{B@h}}{f{Bh}}}{{Af{Fb}}}}44444{{{f{c}}}Mh{}}0000{{{f{B@h}}{B`{{f{{Dd{Dj}}}}}}BAn{B`{{Gf{IlFb}}}}}{{Af{B@h}}}}{{{f{B@h}}d{B`{{f{{Dd{Dj}}}}}}BAn{B`{{Gf{IlFb}}}}}{{Af{B@h}}}}1{{{f{B@h}}{f{B@h}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{B@h}}}{{Af{{f{BjB@h}}}}}}{ce{}{}}0000{{{f{B@h}}}Fb}{{{f{BjB@h}}c}{{Af{{f{BjB@h}}}}}BAj}{{{f{BjB@h}}c{f{BAh}}}{{Af{{f{BjB@h}}}}}BAj}{{{f{BjB@h}}Ad}{{f{BjB@h}}}}{{{f{B@h}}{f{Bh}}{B`{Lf}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{Bh}}{B`{Lf}}}{{f{BjB@h}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BCh}}}BCh}{{{f{c}}{f{Bje}}}b{}{}}{{}BCh}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BCh}}{f{BCh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCh}}{f{BjFh}}}Fj}{cc{}}{{{f{BCh}}{f{Bjc}}}bAEf}`{{}Fb}{ce{}{}}`{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BBf}}}{{Af{B@h}}}}`{{{f{BDd}}}{{f{{Dd{BDf}}}}}}{{{f{BBf}}c}{{Af{B@h}}}{{Cj{B@h}{{Cb{{Af{B@h}}}}}}HnI`}}{{{f{Aj}}}Dl}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bjc}}}{{f{Bje}}}{}{}}0000000{{{f{BDd}}}BDd}{{{f{Aj}}}Aj}{{{f{BBf}}}BBf}{{{f{BDh}}}BDh}{{{f{c}}{f{Bje}}}b{}{}}000:{{}BDd}{{}Aj}{Fb{{f{c}}}{}}00{{{f{BDj}}}{{f{c}}}{}}11111{Fb{{f{Bjc}}}{}}0000000`{{BDle}{}{}{{BDn{c}}}}{Fbb}000{{{f{BjBDd}}}b}1111{{{f{BDd}}{f{BDd}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BE`}}}Lf}{{{f{BDd}}}{{f{{Dd{Lf}}}}}}{{{f{BBf}}}{{Af{B@h}}}}{{{f{BjBDd}}}{{f{Bj{En{Lf}}}}}}{{{f{BDd}}{f{BjFh}}}Fj}{{{f{Aj}}{f{BjFh}}}Fj}{{{f{BBf}}{f{BjFh}}}Fj}{{{f{BDh}}{f{BjFh}}}Fj}0{{{f{Bh}}BDh}Dj}{cc{}}000{{{En{BEb}}}BDd}1{{{En{{En{BEb}}}}}BDd}{{{En{{Gf{{En{Lf}}{En{BDf}}}}}}}BDd}{BDdAj}444{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{cBDd{{Ff{}{{Bb{BEb}}}}}}{cBDd{{Gh{}{{Bb{BEb}}}}}}{{{f{Aj}}Fb}BE`}{{{f{BBf}}}{{f{Aj}}}}{{{f{BjBBf}}}{{f{BjAj}}}}{{{f{Aj}}}E`}{{{f{BEd}}dd}{{Af{Aj}}}}0{{{f{BBf}}}{{Af{B@h}}}}{{{f{BjAj}}}{{f{BjBDd}}}}{{}Fb}0000000{ce{}{}}0000000{AjBDd}1{BDdc{}}{{{f{BDd}}}c{}}301{{{f{BE`}}}d}{{{f{Aj}}}d}{{{f{BDd}}}d}{{{f{BDd}}}{{BEh{{BEf{{In{Lf}}}}{In{BDf}}}}}}{{{f{Aj}}}BEj}{{{f{BBf}}}{{En{Ad}}}}{{{f{BBf}}{B`{{Gf{IlFb}}}}}{{En{Ad}}}}={{{f{BE`}}}Fb}{{{f{Aj}}}Fb}?????{{{En{Lf}}{En{BDf}}d}BDd}{{{f{B@h}}{En{Ad}}Aj{B`{{En{Dj}}}}}BBf}{{{f{BjBEj}}}{{B`{c}}}{}}{{{f{BjBEj}}Fb}{{B`{c}}}{}}{{{f{BBf}}c}{{Af{B@h}}}{{Cd{B@h}{{Cb{{Af{B@h}}}}}}HnI`}}{{{f{c}}}{}{}}{{{f{Aj}}}BDl}{{{f{BBf}}JjL`}{{Af{B@h}}}}{{BBfe}BBf{{K`{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{Aj}}IlFb}BDj}{{{f{BjBDd}}}b}{{{f{BjAj}}}b}{{{f{BBf}}Db}{{Af{B@h}}}}{{{f{BBf}}}{{Af{B@h}}}}{Aj{{En{Lf}}}}0{BBfAj}{{{f{BjBBf}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}Dj{}}{c{{G`{e}}}{}{}}000000000000000{{{f{c}}}Mh{}}0000000{AjAj}{{{f{Aj}}}{{f{BDd}}}}{{{f{Aj}}}{{f{BEl}}}};{ce{}{}}0000000`````{{{f{BDd}}c}Ad{{Cd{{Gf{Lf{f{BDf}}}}}{{Cb{B`}}}}HnI`}}{{{f{BDd}}c}Ad{{Cd{{Gf{Lf{f{BDf}}}}}{{Cb{}}}}HnI`}}{{{f{{Dd{{BEn{Lf}}}}}}c}Ad{{Cd{{BEn{Lf}}}{{Cb{B`}}}}HnI`}}{{{f{{Dd{{BEn{Lf}}}}}}c}Ad{{Cd{{BEn{Lf}}}{{Cb{}}}}HnI`}}{{{f{{Dd{c}}}}eBF`}{{AH`{c}}}{BFbBFd}{{Bf{}{{Bb{{Gf{LfLf}}}}}}Gj}}{{{f{{Dd{c}}}}{f{Gd}}eBF`}{{AH`{c}}}{BFbBFd}{{Bf{}{{Bb{{Gf{LfLf}}}}}}Gj}}{{{f{{l{c}}}}LfLf}{{l{c}}}C`}{{{f{BEl}}{f{{Dd{El}}}}}d}{{{f{BFf}}{f{Aj}}}Ad}{{BFhBFh}BFh}0`{{{f{BFj}}{f{B@h}}{f{Aj}}}{{Af{Ad}}}}{{{f{BFj}}}{{Af{{f{Bh}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BjBFl}}Gl}{{B`{b}}}}{{{f{BjBFn}}{f{Gl}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00{{{f{BFl}}}BFl}{{{f{BFn}}}BFn}{{{f{BBd}}}BBd}{{{f{c}}{f{Bje}}}b{}{}}00{{{f{{Dd{c}}}}}Dh{{AMn{Dh}}}}{{}BBd}{Fb{{f{c}}}{}}00{Fb{{f{Bjc}}}{}}00{Fbb}00{{{f{BBd}}{f{BBd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBd}}{f{BjFh}}}Fj}{{{Gf{{f{Dh}}Fb}}}BFl}{cc{}}0{{{Gf{{f{Dh}}Fb}}}BFn}1{{eFb}BAh{{AMf{Dh}}}{{Bf{}{{Bb{{En{{Gf{Djc}}}}}}}}}}{{}Fb}00{ce{}{}}00{BFlAd}{BFnAd}{{{f{Dh}}Fb}BFl}{{{f{Dh}}Fb}BFn}{{{En{Gl}}}BBd}{{{f{BjBFl}}Fb}Ad}{{{f{BjBFn}}Fb}Ad}{{{f{{Dd{BBd}}}}{B`{Fb}}}{{Af{BAh}}}}0{{{f{{Dd{BBd}}}}{B`{Fb}}}{{Af{{En{Dh}}}}}}{{{f{c}}}e{}{}}00{c{{G`{e}}}{}{}}00000{{{f{c}}}Mh{}}00<<<{{{f{{Dd{B@h}}}}}{{Af{B@h}}}}0`````{{HhHh}Hh}{{{f{{Dd{B@h}}}}{B`{Ll}}}{{Af{{Gf{{En{AO`}}Ll}}}}}}{{{f{{BG`{Il}}}}Ll{f{Bj{En{Hh}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{{}BGb}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{{{f{BGb}}}Hh}{{{f{BGd}}{f{BjFh}}}Fj}{cc{}}0{{{f{BGd}}{f{Bjc}}}bAEf}``{{}Fb}0{ce{}{}}0{{{f{Bj{BGf{BGdce}}}}LfHh{f{B@h}}gi}b{}BGh{{Cd{}{{Cb{c}}}}}{{Cj{{f{Bjc}}}}}}{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}0{{{f{BGj}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}0{{{f{BGj}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}055{{{f{BjBGb}}{f{{Dd{Db}}}}}b}{{{f{BjBGb}}Kj}b}{{{f{BjBGb}}Il}b}{{{f{BjBGb}}Jn}b}{{{f{BjBGb}}Hh}b}`````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{ABj{ce}}}}}{{f{e}}}{}BGl}{{{f{{ABj{c}}}}}BGn{BH`Lh}}{{{f{{ABj{ce}}}}}{}LhBGl}{{{f{{ABj{c}}}}}KjBHb}{{{f{{ABj{ce}}}}}{{f{c}}}LhBGl}{{{ABj{{BHd{c}}e}}}{{ABj{ce}}}{}BGl}{{{ABj{{Dd{{BHd{c}}}}e}}}{{ABj{{Dd{c}}e}}}{}BGl}{{{f{c}}}{{f{e}}}{}{}}0003000000000{{{f{Bjc}}}{{f{Bje}}}{}{}}000000000000{{{f{AJf}}{f{AJf}}c}{{Af{AJf}}}AJh}{{{f{{ABj{c}}}}}{{B`{{f{AGl}}}}}{AGlLh}}`{{{f{BHf}}{f{Ad}}}{{Af{Ad}}}}{{{f{BHf}}c}{{Af{Ad}}}Ab}{{{f{Mj}}}Mj}{{{f{BHh}}}BHh}{{{f{{ABj{ce}}}}}{{ABj{ce}}}Lh{BGlOb}}{{{f{Ld}}}Ld}{{{f{BCn}}}BCn}{{{f{AMh}}}AMh}{{{f{BBb}}}BBb}{{{f{L`}}}L`}{{{f{BHj}}}BHj}{{{f{BHl}}}BHl}{{{f{BHn}}}BHn}{{{f{c}}{f{Bje}}}b{}{}}0000000000{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}ANh{BI`Lh}BGl}{ALle{}{{AIf{c}}AGh}}0{{ALlAAn}e{}{{AIh{c}}AGh}}0{{{f{c}}{f{e}}}ANh{}{}}{{AHnB@l}AHn}{AHnAHn}{{{f{Fl}}{f{AAn}}}{{A@j{Fl}}}}{{{f{AMh}}}{{f{AAn}}}}```{{}b}{cbBGl}{{}{{ABj{c}}}BIb}{{}Ld}{{}BCn}{{}AMh}{{}BBb}{{}L`}`{Fb{{f{c}}}{}}00{{{f{{ABj{ce}}}}}{{f{c}}}LhBGl}1111111111{Fb{{f{Bjc}}}{}}000000000000{{{f{{ABj{c}}}}}{{f{Bh}}}{AGlLh}}`{{{ABj{AB`c}}}{{G`{{ABj{ec}}{ABj{AB`c}}}}}BGl{AB`HnI`}}{{{ABj{AB`c}}}{{ABj{ec}}}BGl{AB`HnI`}}{{{f{{ABj{ce}}}}}{{BId{ce}}}Lh{ObBGl}}{Fbb}00{{{f{Bj{ABj{ce}}}}}bLhBGl}1111111111{{{f{Mj}}{f{Mj}}}d}{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}d{BIfLh}BGl}{{{f{{ABj{BIh}}}}{f{BIh}}}d}{{{f{{ABj{Fl}}}}{f{Fl}}}d}{{{f{Ld}}{f{Ld}}}d}{{{f{BCn}}{f{BCn}}}d}{{{f{AMh}}{f{AMh}}}d}{{{f{BBb}}{f{BBb}}}d}{{{f{L`}}{f{L`}}}d}{{{f{BHn}}{f{BHn}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BHh{{Gf{JnJn}}}}`{{BBbc}BBb{{Cd{Fb{f{AMh}}}{{Cb{d}}}}}}{{AJh{f{AM`}}{f{AM`}}}{{Af{AM`}}}}{{{f{Bj{ABj{BIj}}}}}{{G`{bBIl}}}}{{{f{AHn}}{f{BjFh}}}{{G`{bAMb}}}}0{{{f{Mj}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BHh}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{{ABj{ce}}}}{f{BjFh}}}{{G`{bAMb}}}{ABbLh}BGl}{{{f{{ABj{ce}}}}{f{BjFh}}}{{G`{bAMb}}}LhBGl}{{{f{{ABj{ce}}}}{f{BjFh}}}{{G`{bAMb}}}{BA`Lh}BGl}{{{f{Ld}}{f{BjFh}}}Fj}{{{f{BCn}}{f{BjFh}}}Fj}{{{f{AMh}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BBb}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{L`}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BHj}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BHl}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BHn}}{f{BjFh}}}{{G`{bAMb}}}}`{cc{}}{BInAHn}{BIlAHn}{BJ`AHn}{BJbAHn}4{JnMj}5{{{f{BJd}}}{{ABj{BJd}}}}{{{BEn{c}}}{{ABj{{Dd{c}}}}}{}}{{{En{ce}}}{{ABj{{Dd{c}}e}}}{}{BGlOb}}{Dj{{ABj{Bh}}}}9{BJf{{ABj{BJh}}}}{{{f{BJj}}}{{ABj{BJj}}}}{{{f{Bh}}}{{ABj{Bh}}}}{{{A@j{ce}}}{{ABj{ce}}}LhBGl}{BJl{{ABj{BJj}}}}{{{f{{Dd{c}}}}}{{ABj{{Dd{c}}}}}Ob}{BJnc{}}{c{{ABj{c}}}{}}{BK`{{ABj{BJd}}}}{{{f{BJh}}}{{ABj{BJh}}}}{{{ABj{Bh}}}{{ABj{{Dd{Db}}}}}}{{{AI`{c}}}{{ABj{c}}}{BKbLh}}{cc{}}000{{{En{AMh}}}BBb}11111{{c{B`{Gd}}}BKd{}}{{{BKf{Il}}{BKf{Db}}{B`{Gd}}}BKh}{{{BKf{Il}}{BKf{Db}}{B`{Gd}}}BKj}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{e{{ABj{{Dd{c}}}}}{}{{Ff{}{{Bb{c}}}}}}{{gFb}{{BKl{Il}}}K`{{Ff{}{{Bb{{B`{c}}}}}}}{{Ff{}{{Bb{{B`{e}}}}}}}}0{e{{BKl{Il}}}{{Ff{}{{Bb{{B`{d}}}}}}}{{Ff{}{{Bb{{B`{c}}}}}}}}{{gAAn}{{BKl{Il}}}BFd{{Ff{}{{Bb{{B`{c}}}}}}}{{Ff{}{{Bb{{B`{e}}}}}}}}2{e{{ABj{{Dd{c}}}}}Hn{{Gh{}{{Bb{c}}}}}}{{}{{ABj{c}}}Lh}{c{{ABj{ec}}}BGlLh}{{{f{Bh}}}{{G`{BKn}}}}{{{f{Bh}}c}BL`{}}{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}d{BLbLh}BGl}{{{f{Bj{ABj{ce}}}}}{{B`{{f{Bjc}}}}}LhBGl}{{{f{Bj{ABj{ce}}}}}{{f{Bjc}}}LhBGl}{{{f{BBb}}}{{En{{f{Bh}}}}}}{{{f{El}}Fb}Gl}4{{{f{BLd}}}d}{{{f{{ABj{ce}}}}{f{Bjg}}}b{BLfLh}BGlAEf}{{{f{BCn}}{f{Bjc}}}bAEf}{{{f{AMh}}{f{Bjc}}}bAEf}{{{f{L`}}{f{Bjc}}}bAEf}{{{f{BHn}}{f{Bjc}}}bAEf}{{{f{Mj}}}Jn}{{}b}{cb{ObBGl}}{{{f{BBb}}{f{Bh}}}{{B`{Fb}}}}{{{f{{Dd{Jn}}}}}{{`{{Bf{}{{Bb{Fb}}}}}}}}{{}Fb}000000000000`{{{f{BjBHh}}}{{f{BjHh}}}}`{ce{}{}}000000000000{{{ABj{ce}}}{{B`{c}}}{}BGl}{{{ABj{ce}}}{}LhBGl}{{{ABj{BLh}}}Ad}{{{f{BBb}}}d}{{{f{BHh}}}d}{{{f{Mj}}}d}`{{{f{{ABj{BIj}}}}}d}{{{f{c}}}d{}}1{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}d{BLbLh}BGl}{{{f{BBb}}}Fb}`1{{{f{AJf}}{f{AJf}}}{{Af{{Gf{AJfAJf}}}}}}{{DlDl}{{Af{{Gf{DlDl}}}}}}{{{f{Bj{ABj{ce}}}}}{{f{Bjc}}}Ob{BGlOb}}{{{f{BLj}}}Jh}0{{{f{BLl}}}Jh}```11`{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}d{BIfLh}BGl}{{BLnFb}{{B`{Fb}}}}{{{f{Bh}}c}BM`{}}{c{{ABj{c}}}{}}{{cAAnd}AMh{{AMf{Dj}}}}{e{{ABj{c}}}{}{{Ml{{f{{BId{c}}}}}{{Cb{c}}}}}}{{ce}{{ABj{ce}}}{}BGl}{{}{{ABj{{BHd{c}}}}}{}}{c{{ABj{{BHd{e}}c}}}BGl{}}{Fb{{ABj{{Dd{{BHd{c}}}}}}}{}}{{Fbc}{{ABj{{Dd{{BHd{e}}}}c}}}BGl{}}3210`{{}Mj}{{}BHh}{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}{{B`{ANh}}}{BLbLh}BGl}{c{{BMb{{ABj{c}}}}}{}}{{ce}{{BMb{{ABj{ce}}}}}{}BGl}`````{{{f{BLj}}}Jh}0{{{f{{ABj{c}}}}{f{BjBMd}}}b{AGlLh}}{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}dLhBGl}{{{f{BLl}}JjL`}{{Af{Jh}}}}{{{f{Bj{ABj{BIj}}}}{f{Bj{Dd{Db}}}}}{{G`{FbBIl}}}}{{{f{Bj{ABj{BIj}}}}BMf}{{G`{bBIl}}}}{{{f{Bj{ABj{BIj}}}}{f{Bj{En{Db}}}}}{{G`{FbBIl}}}}{{{f{Bj{ABj{BIj}}}}{f{BjDj}}}{{G`{FbBIl}}}}{{{f{Bj{ABj{BIj}}}}{f{Bj{Dd{BMh}}}}}{{G`{FbBIl}}}}`{{{f{Bj{ABj{BIj}}}}BMj}{{G`{HhBIl}}}}`{{{f{AHd}}FbFb}AHd}0{{{f{{ABj{c}}}}}{{B`{{f{AGl}}}}}{AGlLh}}{{{f{BMl}}Db}Jh}{{JnJn}BHh}`{{{f{{ABj{ce}}}}}FbLhBGl}>>{{{f{Mj}}}{{B`{Jn}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}Dj{}}0{ALl{{G`{eg}}}{}{{AIf{c}}AGh}{}}0{{ALlAAn}{{G`{eg}}}{}{{AIh{c}}AGh}{}}0{c{{G`{e}}}{}{}}00{{{ABj{{Dd{c}}e}}}{{G`{{ABj{{BEn{c}}e}}}}}{}BGl}11111111111111111111111{{BLnFb}{{G`{FbAHn}}}}{c{{G`{{ABj{c}}BMn}}}{}}{{ce}{{G`{{ABj{ce}}BMn}}}{}BGl}{{}{{G`{{ABj{{BHd{c}}}}BMn}}}{}}{c{{G`{{ABj{{BHd{e}}c}}BMn}}}BGl{}}10{c{{G`{{BMb{{ABj{c}}}}BMn}}}{}}{{ce}{{G`{{BMb{{ABj{ce}}}}BMn}}}{}BGl}{{{ABj{ce}}}{{G`{c{ABj{ce}}}}}{}BGl}{{{f{c}}}Mh{}}000000000000{{{ABj{ce}}}cObBGl}`{{{f{BMl}}Db}Jh}{ce{}{}}000000000000{{{f{{ABj{ce}}}}}FbLhBGl}``{{AMh{BN`{DjDj}}}AMh}{{BBb{BN`{DjDj}}}BBb}{{{f{Bj{ABj{BIj}}}}{f{{Dd{Db}}}}}{{G`{FbBIl}}}}{{{f{Bj{ABj{BIj}}}}{f{{Dd{BNb}}}}}{{G`{FbBIl}}}}```````{{c{B`{Gd}}}BKd{}}{{{BKf{Il}}{BKf{Db}}{B`{Gd}}}BKh}{{{BKf{Il}}{BKf{Db}}{B`{Gd}}}BKj}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{BNd{B`{{f{AAn}}}}}{{G`{{BKl{Il}}AHn}}}}{cc{}}{{}Fb}{ce{}{}}{{{f{BNd}}}d}{FbBNd}{{{f{BNd}}}{{f{{Dd{Il}}}}}}{{{f{BjBNd}}{f{Fl}}}b}{{{f{BjBNd}}}b}{{{f{BjBNd}}{f{{Dd{{A@j{Fl}}}}}}}b}1{{{f{BjBNd}}{B`{{f{Fl}}}}}b}{BNd{{BNf{Il}}}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}:`{{{f{c}}h}b{}}{{{f{BNh}}}{{f{AB`}}}}{{{f{BjBNh}}}{{A@j{Fl}}}}{{{f{BjBNh}}}{{f{BjAB`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BNh}}}BNh}{{{f{c}}{f{Bje}}}b{}{}}{{{f{BNh}}}{{f{AAn}}}}{{}BNh}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BjBNh}}Fb}b}{{{f{BNh}}{f{BjFh}}}{{G`{bAMb}}}}{cc{}}{{}Fb}{ce{}{}}{{{f{BNh}}}Fb}{FbBNh}{{{f{BjBNh}}}b}70{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}{{{f{BNh}}}{{B`{{f{BNj}}}}}}7```````{{{f{AHd}}FbFb}AHd}0`{{}b}0{{}d}``{{eFbFb}{{BNl{Il}}}{{K`{Bh}}}{{Bf{}{{Bb{c}}}}}}{{eFbFb}{{BG`{Il}}}{{K`{{Dd{Db}}}}}{{Bf{}{{Bb{c}}}}}}{Hhb}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BAh}}}BAh}{{{f{c}}{f{Bje}}}b{}{}}{{{f{BAh}}{f{Bh}}}d}{{}BAh}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BAh}}{f{BAh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BAh}}{f{BjFh}}}Fj}{cc{}}{{{f{BBb}}}BAh}{{{f{{Dd{Ad}}}}}BAh}{{{f{BBd}}}BAh}{BBbBAh}{{{f{BNn}}}BAh}{BNnBAh}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{eBAh{{AMf{Lb}}}{{Ff{}{{Bb{c}}}}}}{{{f{BAh}}{f{Bh}}}{{B`{{f{Dh}}}}}}{{{f{BAh}}Fb}{{B`{{Gf{{f{AN`}}{f{Dh}}}}}}}}{{{f{BjBAh}}Fb}{{B`{{Gf{{f{BjAN`}}{f{BjDh}}}}}}}}{{{f{BAh}}{f{Bh}}}{{B`{Lb}}}}{{{f{BAh}}{f{Bh}}}{{B`{{Gf{Fb{f{AN`}}{f{Dh}}}}}}}}{{{f{BO`}}}{{En{{f{Bh}}}}}}{{{f{BAh}}}{{En{{f{Bh}}}}}}{{{f{BAh}}{f{Bjc}}}bAEf}{{{f{BO`}}{f{Bh}}}{{B`{Fb}}}}{{{f{BAh}}{f{Bh}}}{{B`{Fb}}}}{{}Fb}{{{f{BjBAh}}FbAN`Dh}{{Af{{B`{Dh}}}}}}{ce{}{}}{BAhc{}}{{{f{BAh}}}d}{{{f{BAh}}}{{`{{Bf{}{{Bb{{Gf{{f{AN`}}{f{Dh}}}}}}}}}}}}{{{f{BAh}}}{{`{{Ib{}{{Bb{{f{Dh}}}}}}}}}}{{{f{BjBAh}}}{{`{{Ib{}{{Bb{{f{BjDh}}}}}}}}}}{{{f{BAh}}}{{`{{Ib{}{{Bb{Lb}}}}}}}}{{{f{BAh}}}{{`{{Ib{}{{Bb{{f{AN`}}}}}}}}}}{{{f{BAh}}}Fb}{{{f{BjBAh}}BAh}b}{{{f{BjBAh}}{f{BAh}}}b}{{}BAh}{{{f{BAh}}FbAN`Dh}{{Af{BAh}}}}{{{f{BjBAh}}{f{Bh}}}{{B`{Dh}}}}{{{f{BjBAh}}{f{Bh}}AN`}{{B`{AN`}}}}{{{f{BjBAh}}Fb}b}{{{f{BjBAh}}{f{Bh}}Dh}{{B`{Dh}}}}{{{f{BjBAh}}FbDh}{{B`{Dh}}}}4{{{f{BjBAh}}Fb}{{B`{{Gf{AN`Dh}}}}}}{{{f{BAh}}d}BBb}{{{f{c}}}e{}{}}{{{f{BjBAh}}{f{BAh}}}{{Af{d}}}}{c{{G`{e}}}{}{}}{{{f{BAh}}{f{Bh}}}{{Af{{f{Dh}}}}}}{{{f{BAh}}Fb}{{Af{{Gf{{f{AN`}}{f{Dh}}}}}}}}{{{f{BAh}}{f{Bh}}}{{Af{Lb}}}}{{{f{BAh}}{f{Bh}}}{{Af{{Gf{Fb{f{AN`}}{f{Dh}}}}}}}}{{{f{BjBAh}}{f{Bh}}}{{Af{{f{BjDh}}}}}}{{{f{BO`}}{f{Bh}}}{{Af{Fb}}}}6{{{f{c}}}Mh{}}{ce{}{}}{FbBAh}{{{f{BjBAh}}AN`Dh}{{B`{Dh}}}}``````````````{{{f{c}}h}b{}}0{{{f{Bh}}{En{El}}{f{AAn}}}{{Af{Ad}}}}{{{f{Bh}}{En{El}}{f{AAn}}{B`{{f{BOb}}}}}{{Af{Ad}}}}{{AdAd}c{}}{{{f{Ad}}c}e{A`Jf}{}}{{Adc}e{A`Jf}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{BjAd}}{f{Ad}}}{{Af{{f{BjAd}}}}}}{{{f{BLh}}Dn}E`}0{{{f{BLh}}}{{Af{E`}}}}0`{{{f{Ad}}Fb}{{f{El}}}}{{{f{BLh}}}{{f{AB`}}}}{{{f{BjBLh}}}{{f{BjAB`}}}}0{{{f{Ad}}}Dl}{{{f{BjBLh}}}{{f{Bj{l{c}}}}}C`}{{{f{BLh}}}{{f{{l{c}}}}}C`}{{{f{Ad}}}{{f{BLh}}}}{{{f{BjBLh}}}{{Af{Fb}}}}0{{{f{BjAd}}}{{Af{Fb}}}}{{{f{Ad}}}{{Af{{f{Ed}}}}}}{{{f{Ad}}}{{Af{{f{AHj}}}}}}{{{f{BLh}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Fd}}}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00{{{f{BLh}}{f{Dh}}}{{Af{Ad}}}}{{{f{Ad}}{f{Dh}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{{f{AJf}}}}}}66{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BLh}}}Ej}{{{f{BLh}}}{{f{{En{El}}}}}}{{{f{BjBLh}}}{{f{Bj{En{El}}}}}}{{{f{BjAd}}}{{f{Bj{En{El}}}}}}{{{f{Ad}}}Ad}{{{f{Hd}}}Hd}1{{{f{BLh}}}{{ABj{BLh}}}}{{{f{c}}{f{Bje}}}b{}{}}0{{{f{BjAd}}}b}{{{f{Ad}}}{{Af{{f{Hl}}}}}}{{}Ad}{Fb{{f{c}}}{}}0{{{f{Ad}}}{{f{c}}}{}}1{Fb{{f{Bjc}}}{}}00{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Jf}{}}{{Adc}e{A`Jf}{}}{{{f{Ad}}{f{Ad}}}{{Af{Jj}}}}{Fbb}00{{{f{BLh}}}Ad}0{{{f{BLh}}}{{f{Dh}}}}0{{{f{Hd}}{f{Hd}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}{f{Bh}}}{{Af{Fd}}}}{{{f{Ad}}c}{{Af{Fd}}}AMd}2{{{f{Ad}}{f{Bh}}}c{}}{{{f{Ad}}c}eAMd{}}55{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}Fb}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BjAd}}{f{Ad}}}{{Af{{f{BjAd}}}}}}{{{f{Ad}}GlFb}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AIb}}}}}}{{{f{Ad}}}{{Af{{f{AId}}}}}}{{{f{BLh}}}{{AI`{Lb}}}}0{{{f{Ad}}ADd}{{Af{Ad}}}}{{{f{BLh}}{f{Fd}}}{{Af{Ad}}}}{{{f{Ad}}{f{Fd}}d}{{Af{Ad}}}}{{{f{Hd}}{f{BjFh}}}Fj}{{{f{Ad}}{f{BjFh}}}Fj}0{{{f{Ad}}}Dj}{cc{}}0{{{l{c}}}AdC`}1{{{f{Bh}}{f{{Dd{Gl}}}}d}{{Af{Ad}}}}{{{f{Bh}}{f{{Dd{Gl}}}}{f{Dh}}d}{{Af{Ad}}}}{{{f{Bh}}El}{{Af{Ad}}}}{{{f{Bh}}{En{El}}{f{Dh}}}Ad}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{cAd{{Ff{}{{Bb{{f{Hh}}}}}}}}{cAd{{Ff{}{{Bb{{f{Jj}}}}}}}}{cAd{{Ff{}{{Bb{Jj}}}}}}{cAd{{Ff{}{{Bb{{f{Jn}}}}}}}}{cAd{{Ff{}{{Bb{{B`{d}}}}}}}}{cAd{{Ff{}{{Bb{{f{Bh}}}}}}}}{cAd{{Ff{}{{Bb{Il}}}}}}{cAd{{Ff{}{{Bb{{f{Kj}}}}}}}}{cAd{{Ff{}{{Bb{{B`{Il}}}}}}}}{cAd{{Ff{}{{Bb{{f{d}}}}}}}}{cAd{{Ff{}{{Bb{{f{Il}}}}}}}}{cAd{{Ff{}{{Bb{Jn}}}}}}{cAd{{Ff{}{{Bb{Hf}}}}}}{cAd{{Ff{}{{Bb{Hh}}}}}}{cAd{{Ff{}{{Bb{{B`{Kj}}}}}}}}{cAd{{Ff{}{{Bb{{B`{Jj}}}}}}}}{cAd{{Ff{}{{Bb{{f{Hf}}}}}}}}{cAd{{Ff{}{{Bb{{B`{Hh}}}}}}}}{cAd{{Ff{}{{Bb{Dj}}}}}}{cAd{{Ff{}{{Bb{d}}}}}}{cAd{{Ff{}{{Bb{{B`{Hf}}}}}}}}{cAd{{Ff{}{{Bb{{B`{Jn}}}}}}}}{cAd{{Ff{}{{Bb{Kj}}}}}}{{{f{Bh}}{En{Jn}}}Ad}{{{f{Bh}}{En{Hf}}}Ad}{{{f{Bh}}{En{Kj}}}Ad}{{{f{Bh}}{En{Jj}}}Ad}{{{f{Bh}}{En{Il}}}Ad}{{{f{Bh}}{En{Hh}}}Ad}{{{f{Bh}}Fb{f{Dh}}}Ad}{{{f{Ad}}FbFb}Ad}{{{f{BLh}}Fb}{{Af{Gl}}}}{{{f{Ad}}}Fb}{{{f{Ad}}}An}{{{f{BLh}}Fb}{{B`{{f{H`}}}}}}0{{{f{BLh}}FbFb}{{B`{{f{H`}}}}}}0{{{f{BLh}}Fb}Gl}0{{{f{Ad}}c}{{Af{Fd}}}AMd}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}{f{Bh}}}{{Af{Fd}}}}2{{{f{Ad}}{f{Bh}}}c{}}2{{{f{BLh}}}d}{{{f{Hd}}{f{Bjc}}}bAEf}{{{f{Ad}}{B`{Fb}}}Ad}{{{f{Ad}}}{{Af{{f{AOd}}}}}}{{{f{Ad}}}{{Af{{f{AOf}}}}}}{{{f{Ad}}}{{Af{{f{AOh}}}}}}{{{f{Ad}}}{{Af{{f{AOb}}}}}}{{{f{Ad}}}{{Af{{f{E`}}}}}}`{{}Fb}00{ce{}{}}00{AdB@h}1{BAjAd}{AdAd}<<{{{f{Ad}}}{{Af{Fd}}}}000{{{f{BLh}}}Fd}0{{}d}00{{{f{Ad}}}Hd}{{{f{Ad}}}BOd}{{{f{BLh}}}Fb}{{{f{BLh}}Fb}Ad}0{{{f{Ad}}}{{Af{{f{Dl}}}}}}{{{f{Ad}}{f{Bh}}}c{}}{{{f{Ad}}c}{{Af{Fd}}}AMd}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}021{{{f{Ad}}}{{Af{{B`{c}}}}}Jf}{{{f{BLh}}}{{Af{Jh}}}}0{{{f{BLh}}}{{B`{Jj}}}}0{{{f{Ad}}}Jh}1122322{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jf}{}}{{{f{Ad}}c}e{A`Jf}{}}=={{{f{BLh}}}{{Af{Fb}}}}0{{{f{BLh}}}{{f{Bh}}}}{{{f{Bh}}c}Ad{{K`{{Dd{{B`{{AI`{{Dd{Db}}}}}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{{B`{Jj}}}}}}}}{{{f{Bh}}{Kd{Il}}}Ad}{{{f{Bh}}c}Ad{{K`{{Dd{{B`{{f{Bh}}}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{{B`{Hh}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{Jj}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{{En{Db}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{{B`{Hf}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{{B`{Ad}}}}}}}}{{{f{Bh}}{Kd{Jn}}}Ad}{{{f{Bh}}c}Ad{{K`{{Dd{{B`{{En{Db}}}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{Jn}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{{B`{Dj}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{Il}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{{B`{{f{{Dd{Db}}}}}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{Gl}}}}}}{{{f{Bh}}{f{Ad}}}Ad}{{{f{Bh}}c}Ad{{K`{{Dd{{AI`{{Dd{Db}}}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{{B`{Jn}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{Hh}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{{B`{{AI`{Bh}}}}}}}}}}{{{f{Bh}}{Kd{Kj}}}Ad}{{{f{Bh}}c}Ad{{K`{{Dd{{B`{d}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{{B`{Kj}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{d}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{{B`{Il}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{{f{{Dd{Db}}}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{Kj}}}}}}{{{f{Bh}}{Kd{Hh}}}Ad}{{{f{Bh}}c}Ad{{K`{{Dd{{AI`{Bh}}}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{Hf}}}}}}{{{f{Bh}}c}AdBAj}{{{f{Bh}}c}Ad{{K`{{Dd{Ad}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{Dj}}}}}}{{{f{Bh}}c}Ad{{K`{{Dd{{f{Bh}}}}}}}}{{{f{Bh}}{f{Dh}}}Ad}{{{f{BLh}}FbFb}Ad}{{{f{Bh}}Fb}Ad}{{{f{BjBOd}}}{{B`{c}}}{}}{{{f{Ad}}{f{Bh}}}{{Af{Fd}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}c}{{Af{Fd}}}AMd}{{{f{Ad}}c}eAMd{}}{{{f{Ad}}{f{Bh}}}c{}}3{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BLh}}}Fb}`{{{f{Ad}}}BOf}{{{f{Ad}}}{{Af{Jh}}}}{{{f{BLh}}JjL`}{{Af{Jh}}}}0{{{f{BLh}}}Ad}{{{f{Ad}}c}e{A`Jf}{}}{{Adc}e{A`Jf}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{BjBLh}}{f{Bh}}}b}{{{f{BjAd}}{f{Bh}}}{{f{BjAd}}}}{{{f{Ad}}{En{El}}}Ad}{{{f{Ad}}El}Ad}7{HdHd}{{{f{BLh}}{f{Cd}}Ld}{{Af{Ad}}}}0{{{f{Ad}}Jjdd{B`{Hh}}}{{Af{Ad}}}}{{{f{Ad}}Fbdd{B`{Hh}}}{{Af{Ad}}}}{{{f{BjAd}}Hd}b}{{{f{BLh}}Il}Ad}{{{f{BjBLh}}}b}0{{{f{BjAd}}}b}{{{f{Ad}}{B`{Hh}}}Ad}{{{f{BOd}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{BLh}}IlFb}Ad}{{{f{Ad}}Dn}{{Af{Ad}}}}{{{f{BLh}}Dn}{{Af{Ad}}}}0{{{f{BLh}}Db}{{B`{Jj}}}}0{{{f{BLh}}Db}{{Af{Jh}}}}0{{{f{Ad}}}{{Af{{f{Md}}}}}}{{{f{Ad}}Fb}{{Af{{AI`{Bh}}}}}}{{{f{Ad}}{f{Dh}}}{{Af{Ad}}}}{{Adc}e{A`Jf}{}}{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}{{{f{Ad}}c}e{A`Jf}{}}{{{f{Ad}}}{{Af{c}}}Jf}{{{f{BLh}}}{{Af{Jh}}}}0{{{f{Ad}}}{{Af{Jh}}}}{{{f{Ad}}{B`{Fb}}}Ad}{{{f{BLh}}{f{E`}}}{{Af{Ad}}}}{{{f{BLh}}{f{{Dd{Lf}}}}}{{Af{Ad}}}}{{{f{BLh}}{f{{Dd{Lf}}}}}Ad}{{{f{Ad}}{f{{Dd{Lf}}}}d}Ad}{{{f{Ad}}{f{E`}}d}{{Af{Ad}}}}{{{f{BLh}}{f{E`}}}Ad}{{{f{Ad}}{f{{Dd{Lf}}}}}Ad}{{{f{Ad}}{f{E`}}d}Ad}{{{f{Ad}}Fbd}El}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AI`{Ad}}}}{{{f{c}}}Dj{}}{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{c{{G`{e}}}{}{}}0{{{Gf{{f{Bh}}{En{El}}}}}{{Af{Ad}}}}1{{{Gf{{f{AMh}}{En{El}}}}}{{Af{Ad}}}}{{{Gf{{f{AMh}}El}}}{{Af{Ad}}}}{{{Gf{{f{Bh}}El}}}{{Af{Ad}}}}444{{{f{c}}}Mh{}}00{{{f{Ad}}}{{Af{{f{ANn}}}}}}{{{f{Ad}}}{{Af{{f{AM`}}}}}}{{{f{Ad}}}{{Af{{f{AO`}}}}}}{{{f{Ad}}}{{Af{{f{ANl}}}}}}{{{f{BLh}}}{{Af{Ad}}}}0?{{{f{BLh}}}{{Af{{f{{l{c}}}}}}}C`}`{{{f{BLh}}Db}{{B`{Jj}}}}0{{{f{BLh}}Db}{{Af{Jh}}}}0{ce{}{}}00{{Ad{f{Bh}}}Ad}{{{f{Ad}}c}Ad{A`Jf}}{{{f{Ad}}{f{Fd}}{f{Ad}}}{{Af{Ad}}}}````{{{BOh{}{{Cb{c}}}}{f{Ad}}}c{}}{{{f{BOj}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BHf}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Eh}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BHf}}c}{{Af{Ad}}}Ab}{{{f{{l{Eh}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BOl}}}BOl}{{{f{c}}{f{Bje}}}b{}{}}{{}BOl}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BOl}}{f{BOl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BOl}}{f{BjFh}}}Fj}{cc{}}{{{f{BOl}}{f{Bjc}}}bAEf}{{}Fb}{ce{}{}}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}3``{{{f{c}}h}b{}}{{{f{BjCh}}}{{f{BjAd}}}}{{{f{Ch}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{Ch}}}Ch}{{{f{c}}{f{Bje}}}b{}{}}{{{f{Ch}}}Ad}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{cc{}}{{}Fb}{ce{}{}}{{{f{BjAd}}}Ch}{{{f{BjCh}}{f{BjEl}}}b}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}5{{{f{BjCh}}{f{BjEl}}e}c{}{{Cd{{f{Ch}}}{{Cb{c}}}}}}````````{{{f{c}}h}b{}}8{{{En{B@h}}}{{Af{B@h}}}}{c{{Af{B@h}}}{{Ff{}{{Bb{B@h}}}}}}{cB@h{{Ff{}{{Bb{B@h}}}}}}{c{{B`{B@h}}}{{Ff{}{{Bb{B@h}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gf{{AI`{{l{c}}}}{AI`{{l{e}}}}}}}C`C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gf{{AI`{{l{c}}}}{AI`{{l{e}}}}{AI`{{l{g}}}}}}}C`C`C`}{{{f{BjBOn}}}d}{c{{Af{Dh}}}{{Ff{}{{Bb{{f{Gl}}}}}}}}{c{{Af{{Gf{DhFb}}}}}{{Ff{}{{Bb{{f{Gl}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{Gd}}}C`C`}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00{{{f{{C@`{ec}}}}}{{C@`{ec}}}Ob{Ob{Bf{}{{Bb{c}}}}}}{{{f{c}}{f{Bje}}}b{}{}}{{{f{{l{c}}}}{f{{l{c}}}}}{{Gf{{AI`{{l{c}}}}{AI`{{l{c}}}}}}}C`}{{{f{Ad}}{f{Ad}}}{{Gf{AdAd}}}}{BOne{}{{C@b{c}}}}{BOne{}{{C@d{c}}}}{c{{Af{B@h}}}{{Ff{}{{Bb{{f{B@h}}}}}}}}{cB@h{{Ff{}{{Bb{{f{B@h}}}}}}}}{{{f{BjBOn}}{f{c}}}dBIf}{{{f{{C@f{c}}}}}{{f{e}}}{}{}}{Fb{{f{c}}}{}}0{{{f{{AHf{c}}}}}{{f{e}}}{}{}}1{Fb{{f{Bjc}}}{}}{{{f{Bj{AHf{c}}}}}{{f{Bje}}}{}{}}11{Fbb}00{cBAh{{Ff{}{{Bb{Dh}}}}}}{c{{Af{Dh}}}{{Ff{}{{Bb{{f{Dh}}}}}}}}{{{f{Ad}}{f{Bh}}}{{Af{b}}}}{{{f{{C@f{Ad}}}}{f{{C@f{Ad}}}}}d}{{{f{c}}{f{e}}}d{}{}}00`{{{f{BjBOn}}cg}{{B`{c}}}{}{}{{Cj{ce}{{Cb{c}}}}}}{cc{}}00{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{c{{AHf{Fd}}}{{Ff{}{{Bb{d}}}}}}{c{{AHf{{l{e}}}}}{{Ff{}{{Bb{}}}}}n}{eC@d{}{{Ff{}{{Bb{c}}}}}}12{c{{AHf{{l{e}}}}}{{Gh{}{{Bb{}}}}}n}{c{{AHf{Fd}}}{{Gj{}{{Bb{d}}}}}}{c{{AHf{{l{e}}}}}{{Gj{}{{Bb{}}}}}n}{{{f{Dh}}{f{Dh}}}{{B`{Dh}}}}{{{f{AKb}}{f{AKb}}}AKb}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{C@f{Ad}}}}{f{Bjc}}}bAEf}{{}Fb}00{ce{}{}}00{{{AHf{c}}}c{}}1{BCf{{En{c}}}{}}{c{{En{{C@j{C@h}}}}}{}}{c{{En{Dj}}}{}}{BAdGl}{c{{AHf{c}}}{}}{{eFb}{{C@`{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{C@`{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{C@`{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}F`}}`{{{f{{C@`{ec}}}}}{{Gf{Fb{B`{Fb}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{{Dd{c}}}}IlFb}{{f{{Dd{c}}}}}{}}{{{f{{l{c}}}}Fb}{{Af{{En{{l{c}}}}}}}C`}{{{f{B@h}}Fbd}{{En{B@h}}}}{{{f{c}}}e{}{}}{{BOnFb}{{C@`{BOnc}}}{}}{c{{G`{e}}}{}{}}00{{{f{Dh}}{f{Dh}}}{{Af{Dh}}}}111{{{f{c}}}Mh{}}00{ce{}{}}00{{{f{Dh}}e}c{}{{Cd{{f{BjCh}}}{{Cb{c}}}}}}{{{f{{Dd{{En{c}}}}}}}{{Gf{Fb{En{Fb}}}}}{}}{{{f{B@h}}}{{`{{Bf{}{{Bb{B@h}}}}}}}}{{{f{{Dd{c}}}}}{{AH`{Lf}}}{{K`{{Dd{Mj}}}}HnI`}}{{{f{{Dd{e}}}}}{{En{c}}}{HnI`Cf}{{K`{{Dd{c}}}}}}{{{f{Ad}}}{{En{Ad}}}}","D":"IHb","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",4939],[5,"ListType",1231],[5,"ChunkedArray",39],[10,"PolarsNumericType",1231],[10,"Num",4940],[10,"ToPrimitive",4941],[5,"Series",4360],[8,"PolarsResult",3651,4942],[10,"NumOpsDispatchInner",4741,4943],[6,"GroupsProxy",3253,4944],[5,"BooleanType",1231],[5,"Settings",39],[6,"Option",4945],[17,"Item"],[8,"ArrayBox",4800],[10,"Iterator",4946],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1231],[10,"PolarsDataType",1231],[17,"Output"],[10,"Fn",4947],[10,"Copy",4948],[5,"UnstableSeries",4800],[10,"FnMut",4947],[5,"Float32Type",1231],[5,"Float64Type",1231],[5,"BinaryType",1231],[1,"u8"],[1,"slice"],[5,"StringType",1231],[6,"DataType",1231,4949],[5,"String",4950],[8,"ListChunked",1231],[5,"SortOptions",1149],[8,"IdxCa",1231,4951],[5,"SortMultipleOptions",1149],[8,"BinaryChunked",1231],[10,"PolarsIntegerType",1231],[10,"NumOpsDispatchCheckedInner",4766,4952],[8,"ChunkLenIter",39],[8,"ArrayRef",3651,4953],[5,"Vec",4954],[10,"DoubleEndedIterator",4955],[1,"usize"],[8,"BooleanChunked",1231],[10,"IntoIterator",4956],[5,"Formatter",4957],[8,"Result",4957],[10,"Array",4953],[17,"Array"],[6,"Result",4958],[10,"FallibleIterator",4959],[5,"Bitmap",4960],[1,"tuple"],[10,"IntoParallelIterator",4961],[10,"TrustedLen",4962],[6,"AnyValue",1231,4963],[5,"ObjectType",1231],[10,"PolarsObjectSafe",822],[10,"PolarsObject",822],[6,"IsSorted",4360,4964],[1,"f32"],[1,"u64"],[5,"Int128Type",1231],[8,"DecimalChunked",1231,4965],[10,"Send",4948],[10,"Sync",4948],[10,"ExactSizeIterator",4966],[10,"PolarsFloatType",1231],[10,"PolarsIterator",783],[5,"Iter",4967],[5,"IterNames",4967],[1,"i64"],[5,"Iter",4968],[1,"fn"],[5,"Map",4969],[6,"ChunkedArrayLayout",39],[10,"NumCast",4941],[5,"Scalar",1231,4963],[1,"f64"],[5,"UInt32Type",1231],[1,"u32"],[10,"AsRef",4970],[5,"UInt64Type",1231],[5,"Range",4971],[5,"Int64Type",1231],[5,"Int32Type",1231],[1,"i32"],[10,"ParallelIterator",4961],[10,"IndexedParallelIterator",4961],[6,"QuantileInterpolOptions",3651,4972],[5,"Field",1231,4973],[5,"RollingOptionsFixedWindow",3651,4974],[8,"IdxSize",3651,4975],[10,"Sized",4948],[17,"HasViews"],[5,"RandomState",4976],[5,"BytesHash",4977],[8,"ArrayView1",4978],[8,"Array2",4978],[8,"StringChunked",1231],[6,"Either",4979],[5,"TypeId",4980],[5,"NullableIdxSize",3651,4975],[10,"FnOnce",4947],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",477,4981],[10,"ChunkedBuilder",505],[5,"BinViewChunkedBuilder",505,4982],[10,"ViewType",4983],[5,"BooleanChunkedBuilder",505,4984],[5,"NullChunkedBuilder",505,4985],[5,"PrimitiveChunkedBuilder",505,4986],[10,"Clone",4987],[8,"StringChunkedBuilder",505,4982],[8,"BinaryChunkedBuilder",505,4982],[10,"NewChunkedArray",505],[5,"AnonymousListBuilder",609,4988],[5,"AnonymousOwnedListBuilder",609,4988],[5,"ListBooleanChunkedBuilder",609,4989],[5,"ListPrimitiveChunkedBuilder",609,4990],[10,"ListBuilderTrait",609],[5,"ListStringChunkedBuilder",609,4991],[5,"ListBinaryChunkedBuilder",609,4991],[5,"ListNullChunkedBuilder",609,4992],[5,"Box",4993],[10,"ChunkedCollectInferIterExt",763],[10,"ChunkedCollectIterExt",763],[10,"Canonical",777],[10,"ChunkedCollectParIterExt",779],[10,"FromParIterWithDtype",779],[5,"BooleanArray",4994],[5,"BoolIterNoNull",783],[5,"SomeIterator",783],[5,"ObjectArray",822],[6,"ArrowDataType",1231,4995],[10,"Any",4980],[10,"Debug",4957],[5,"BitmapIter",4996],[6,"ZipValidity",4997],[8,"ObjectValueIter",822],[5,"Arc",3651,4998],[5,"ObjectChunkedBuilder",893],[8,"ObjectChunked",1231],[10,"AnonymousObjectBuilder",916],[5,"ObjectRegistry",916],[8,"ObjectConverter",916],[8,"BuilderConstructor",916],[17,"FuncRet"],[10,"ChunkApply",944],[10,"ChunkApplyKernel",944],[10,"ChunkSort",944],[10,"ChunkUnique",944],[10,"ChunkCast",944],[6,"FillNullStrategy",944],[10,"ChunkCompare",944],[10,"ChunkExplode",944],[5,"OffsetsBuffer",4999],[10,"ChunkFillNullValue",944],[10,"ChunkFilter",944],[10,"ChunkFull",944],[10,"ChunkFullNull",944],[10,"ChunkAnyValue",944],[10,"Hasher",5000],[10,"IsFirstDistinct",944],[10,"IsLastDistinct",944],[10,"ChunkAgg",944],[10,"ChunkQuantile",944],[10,"ChunkExpandAtIndex",944],[10,"ChunkReverse",944],[10,"ChunkRollApply",944],[10,"ChunkSet",944],[10,"ChunkShift",944],[10,"ChunkShiftFill",944],[10,"ChunkVar",944],[10,"ChunkTake",944],[10,"ChunkTakeUnchecked",944],[10,"ChunkBytes",944],[10,"ChunkZip",944],[10,"BinaryFnMut",1065],[10,"StaticArray",1231,5001],[10,"TernaryFnMut",1065],[10,"Error",5002],[10,"UnaryFnMut",1065],[5,"PrimitiveArray",5003],[6,"SearchSortedSide",1105],[10,"SlicedArray",3651,5004],[5,"NoNull",4824],[5,"RowsEncoded",5005],[8,"BinaryOffsetChunked",1231],[5,"NaiveDateTime",5006],[6,"PolarsError",3651,4942],[6,"Cow",5007],[8,"Float32Chunked",1231],[8,"Float64Chunked",1231],[10,"ArrayFromIter",1231,5008],[10,"ArrayFromIterDtype",1231,5008],[10,"AsRefDataType",1231,4949],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5009],[10,"From",4970],[5,"CategoricalChunked",2635,5010],[10,"CategoricalMergeOperation",2635,5011],[10,"LogicalType",1231,5012],[5,"Logical",1231,5012],[5,"OwnedObject",1231,4963],[6,"UnknownKind",1231,4949],[6,"TimeUnit",1231,5013],[5,"UInt8Type",1231],[5,"UInt16Type",1231],[5,"Int8Type",1231],[5,"Int16Type",1231],[5,"DateType",1231],[5,"TimeType",1231],[5,"BinaryOffsetType",1231],[5,"DecimalType",1231],[5,"DatetimeType",1231],[5,"DurationType",1231],[5,"CategoricalType",1231],[6,"ArrowTimeUnit",1231],[10,"ArrayCollectIterExt",3651,5008],[8,"Utf8ViewArray",4983],[8,"UInt32Chunked",1231],[5,"Error",4957],[10,"NumericNative",1231],[10,"Into",4970],[5,"ArrowField",3651],[6,"IntegerType",5014],[6,"PrimitiveType",5015],[10,"Borrow",5016],[8,"String",5017],[10,"NoOption",5018],[10,"GetAnyValue",1231,4963],[8,"Int128Chunked",1231],[6,"Ordering",5019],[6,"PhysicalType",5014],[8,"UInt8Chunked",1231],[8,"UInt16Chunked",1231],[8,"UInt64Chunked",1231],[8,"Int8Chunked",1231],[8,"Int16Chunked",1231],[8,"Int32Chunked",1231],[8,"Int64Chunked",1231],[8,"PlIdHashMap",1231,4951],[5,"CategoricalChunkedBuilder",2635,5020],[5,"GlobalRevMapMerger",2635,5011],[6,"RevMapping",2775,5021],[6,"CategoricalOrdering",2775,5021],[5,"CatIter",2635,5010],[1,"u128"],[5,"DataFrame",2962],[5,"StringCacheHolder",2827,5022],[5,"ErrString",2856,4942],[6,"PolarsWarning",2856,5023],[10,"Display",4957],[6,"FloatFmt",2932],[1,"i128"],[1,"char"],[5,"Schema",4286],[10,"IntoSeries",4360,5024],[6,"NullStrategy",2962],[6,"UniqueKeepStrategy",2962],[8,"PlHashSet",1231,5025],[5,"ArrowSchema",3651,5026],[5,"Row",3507],[5,"GroupBy",3253],[5,"RangeToInclusive",4971],[5,"RangeInclusive",4971],[5,"RangeFull",4971],[5,"RangeFrom",4971],[5,"RangeTo",4971],[5,"RecordBatchIter",2962],[5,"PhysRecordBatchIter",2962],[10,"IntoVec",4824],[5,"MeltArgs",3224],[10,"RangeBounds",4971],[8,"SchemaRef",4286],[6,"IndexOrder",3651,5027],[5,"StructArray",5028],[8,"RecordBatch",5029],[5,"GroupsIdx",3253,4944],[8,"IdxVec",5030],[6,"GroupByMethod",3253],[5,"SlicedGroups",3253,4944],[5,"GroupsProxyParIter",3253,4944],[10,"UnindexedConsumer",5031],[6,"GroupsIndicator",3253,4944],[8,"IdxItem",3253,4944],[10,"IntoGroupsProxy",3253,5032],[5,"Copied",5033],[5,"Zip",5034],[5,"GroupsProxyIter",3253,4944],[8,"GroupsSlice",3253,4944],[1,"array"],[8,"DynArgs",3651,5035],[10,"IsFloat",5036],[10,"NativeType",5037],[10,"AggList",3491,5038],[10,"TakeExtremum",3491],[10,"PhysicalAggExpr",3504],[6,"AnyValueBuffer",3507,5039],[6,"AnyValueBufferTrusted",3507,5039],[5,"BinaryArray",5040],[5,"IdHasher",3603,5041],[5,"IdxHash",3603,5041],[5,"HashMap",5042],[10,"BuildHasher",5000],[10,"VecHash",3603,5043],[10,"Allocator",5044],[5,"BorrowedFd",5045],[10,"AsFd",5045],[10,"AsRawFd",5046],[20,"MaybeUninit",5047],[10,"NumOpsDispatchChecked",3651,4952],[5,"ChunkId",3651,4975],[5,"RollingVarParams",3651,5035],[5,"RollingQuantileParams",3651,5035],[6,"NonExistent",3651,5048],[10,"Ord",5019],[10,"Default",5049],[5,"Weak",4998],[10,"PartialEq",5019],[10,"Scalar",5050],[5,"File",5051],[5,"Error",5052],[5,"Utf8Error",5053],[5,"TryReserveError",5054],[6,"Error",5055],[5,"OsStr",5056],[5,"PathBuf",5057],[5,"Path",5057],[5,"CStr",5058],[5,"CString",5059],[1,"never"],[5,"OsString",5056],[10,"ToOwned",5007],[10,"FromData",4209,5060],[5,"Buffer",5061],[10,"FromDataUtf8",4209,5060],[10,"FromDataBinary",4209,5060],[5,"ListArray",5062],[6,"Ambiguous",3651,5048],[10,"NamedFromOwned",3651,5063],[10,"PartialOrd",5019],[10,"PolarsArray",3651,5064],[10,"Hash",5000],[10,"SeriesTrait",4360,4964],[10,"ChunkAggSeries",3651,5065],[10,"QuantileAggSeries",3651,5066],[10,"IndexToUsize",3651,5067],[10,"NamedFrom",3651,5063],[5,"Pin",5068],[5,"Request",5002],[5,"BorrowedCursor",5069],[5,"IoSliceMut",5070],[6,"SeekFrom",5070],[10,"VarAggSeries",3651,5071],[5,"AllocError",5044],[5,"BTreeMap",5072],[5,"IoSlice",5070],[5,"AnonymousBuilder",4215,5073],[5,"Offsets",4999],[5,"MutableNullArray",4238,5074],[5,"MutableBitmap",5075],[5,"Utf8Array",5076],[8,"ArrowSchemaRef",5026],[10,"IndexOfSchema",4286],[8,"Metadata",4995],[5,"SeriesIter",4360,5077],[8,"SeriesPhysIter",4360,5077],[10,"LhsNumOps",4741,4943],[10,"NumOpsDispatch",4741,4943],[6,"NullBehavior",4774],[10,"CustomIterTools",4824,5078],[5,"TrustMyLength",4824,4962],[10,"FromIteratorReversed",5079],[10,"FromTrustedLenIterator",4824,5078],[5,"Wrap",4824],[5,"LazyCompact",5080],[5,"SmartString",5081],[10,"InitHashMaps",1231],[10,"InitHashMaps2",1231],[5,"TrueT",1231],[15,"IO",2917],[15,"Context",2917],[15,"Count",3488],[15,"Slice",3489],[10,"ListFromIter",3651],[10,"Utf8FromIter",4281],[10,"BinaryFromIter",4281]],"r":[[0,5041],[4,5022],[13,5022],[16,5022],[31,5022],[477,4981],[505,4982],[506,4982],[507,4984],[510,4985],[511,4986],[512,4982],[609,4988],[610,4988],[611,4991],[612,4989],[614,4992],[615,4990],[616,4991],[1134,5004],[1149,5004],[1232,4963],[1234,5008],[1235,5008],[1236,5008],[1237,4995],[1239,4949],[1255,5010],[1258,5010],[1259,5020],[1260,5011],[1261,5021],[1263,4949],[1264,4949],[1265,4949],[1276,4965],[1286,4973],[1287,4973],[1302,4963],[1304,5011],[1308,4951],[1309,5067],[1310,4951],[1311,4951],[1312,5025],[1313,4951],[1349,5012],[1350,5012],[1368,4963],[1371,5025],[1372,5025],[1373,4951],[1374,5025],[1375,5025],[1381,5021],[1382,4963],[1384,5001],[1396,5013],[1397,4949],[1424,4949],[1623,5011],[1637,5012],[1713,4949],[2232,5011],[2233,5011],[2244,4949],[2328,5010],[2366,5010],[2635,5010],[2636,5010],[2637,5020],[2638,5011],[2639,5021],[2641,5011],[2645,5021],[2662,5011],[2727,5011],[2728,5011],[2746,5010],[2750,5010],[2775,5021],[2780,5021],[2827,5022],[2833,5022],[2836,5022],[2844,5022],[2846,5021],[2851,5021],[2852,5022],[2853,5022],[2854,5022],[2855,5022],[2861,4942],[2867,4942],[2868,4942],[2869,5023],[2881,4942],[2889,4942],[2896,5023],[2901,4942],[2902,4942],[2903,4942],[2904,4942],[2905,4942],[2906,5023],[2907,4942],[2921,5082],[2922,5082],[2923,5082],[2924,3603],[3253,4944],[3259,4944],[3260,4944],[3261,4944],[3262,4944],[3263,4944],[3264,4944],[3267,4944],[3269,5032],[3281,4944],[3491,5038],[3509,5039],[3510,5039],[3603,5041],[3604,5041],[3605,5041],[3606,5043],[3609,5043],[3610,5043],[3651,5048],[3652,4998],[3653,4981],[3654,5008],[3655,4953],[3657,5026],[3658,4982],[3659,4984],[3661,5010],[3662,5010],[3663,5020],[3664,5011],[3665,5021],[3666,5065],[3667,4975],[3668,39],[3669,505],[3670,763],[3671,763],[3675,2962],[3677,5035],[3680,5060],[3681,5060],[3682,5060],[3684,5011],[3687,5067],[3688,4975],[3689,5027],[3690,5067],[3691,5024],[3692,4824],[3694,5083],[3695,5083],[3696,5083],[3699,4943],[3701,4991],[3702,4989],[3703,609],[3704,5064],[3705,4990],[3706,4991],[3709,3224],[3711,5063],[3712,5063],[3714,505],[3716,5048],[3719,4975],[3720,4975],[3721,4943],[3722,4952],[3725,5064],[3726,4942],[3727,783],[3728,822],[3729,4942],[3730,4986],[3731,5066],[3732,4972],[3735,5021],[3736,4974],[3737,5035],[3738,5035],[3741,4360],[3742,4964],[3744,5004],[3745,5022],[3747,4982],[3749,2962],[3750,5071],[3751,5043],[3797,5011],[3832,5064],[3835,0],[3845,5064],[3874,0],[4010,5067],[4052,5064],[4054,5011],[4055,5011],[4081,5064],[4087,4942],[4088,4942],[4089,4942],[4090,4942],[4102,5010],[4104,5064],[4110,5010],[4183,5064],[4209,5060],[4210,5060],[4211,5060],[4215,5073],[4238,5074],[4268,5021],[4273,5021],[4274,5004],[4277,5022],[4278,5022],[4279,5022],[4280,5022],[4281,5084],[4282,5084],[4362,944],[4365,5024],[4366,4964],[4367,4964],[4371,5077],[4372,5077],[4373,4964],[4741,4943],[4742,4943],[4743,4943],[4749,4943],[4766,4952],[4767,4952],[4825,5078],[4826,5078],[4827,5078],[4830,4962],[4841,5085],[4842,5085],[4872,5086],[4873,5087],[4874,5088],[4893,5087],[4895,5088],[4908,5087],[4923,5087],[4933,5088]],"b":[[53,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[54,"impl-Add-for-ChunkedArray%3CT%3E"],[55,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[56,"impl-Add-for-%26ChunkedArray%3CT%3E"],[70,"impl-ChunkedArray%3CFloat32Type%3E"],[71,"impl-ChunkedArray%3CFloat64Type%3E"],[76,"impl-ChunkedArray%3CT%3E"],[77,"impl-ChunkedArray%3CBinaryType%3E"],[78,"impl-ChunkedArray%3CStringType%3E"],[99,"impl-Flags-for-Settings"],[100,"impl-Settings"],[140,"impl-Div-for-%26ChunkedArray%3CT%3E"],[141,"impl-Div-for-ChunkedArray%3CT%3E"],[142,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[143,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[152,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[153,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[154,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[155,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[162,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[163,"impl-Debug-for-ChunkedArray%3CT%3E"],[164,"impl-Binary-for-Settings"],[165,"impl-UpperHex-for-Settings"],[166,"impl-Octal-for-Settings"],[167,"impl-Debug-for-Settings"],[168,"impl-LowerHex-for-Settings"],[176,"impl-Flags-for-Settings"],[177,"impl-Settings"],[185,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[186,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[187,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[190,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[191,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[217,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[218,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[260,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[261,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[262,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[263,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[264,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[265,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[271,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[272,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[273,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[274,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[275,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[276,"impl-ChunkedArray%3CBooleanType%3E"],[278,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[279,"impl-ChunkedArray%3CBooleanType%3E"],[282,"impl-ChunkedArray%3CBooleanType%3E"],[283,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[286,"impl-ChunkedArray%3CT%3E"],[287,"impl-ChunkedArray%3CBooleanType%3E"],[288,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[289,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[290,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[291,"impl-Mul-for-ChunkedArray%3CT%3E"],[295,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[296,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[297,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[298,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[299,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[300,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[301,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[302,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[303,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[304,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[305,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[306,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[307,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[308,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[309,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[310,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[311,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[312,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[313,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[314,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[315,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[316,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[324,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[325,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[326,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[327,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[331,"impl-ChunkedArray%3CListType%3E"],[332,"impl-ChunkedArray%3CStringType%3E"],[333,"impl-ChunkedArray%3CListType%3E"],[334,"impl-ChunkedArray%3CStringType%3E"],[345,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[346,"impl-Rem-for-ChunkedArray%3CT%3E"],[347,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[348,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[374,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[375,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[376,"impl-Sub-for-ChunkedArray%3CT%3E"],[377,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[381,"impl-ChunkedArray%3CBooleanType%3E"],[382,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[386,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[387,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[388,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[389,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[395,"impl-ChunkedArray%3CT%3E"],[396,"impl-ChunkedArray%3CListType%3E"],[403,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[444,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[445,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[446,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[447,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[448,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[449,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[450,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[451,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[452,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[453,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[454,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[455,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[456,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[457,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[463,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[464,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[465,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[466,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[467,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[468,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[469,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[470,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[471,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[472,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[473,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[474,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[557,"impl-BinViewChunkedBuilder%3Cstr%3E"],[558,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[827,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[828,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[860,"impl-StaticArray-for-ObjectArray%3CT%3E"],[861,"impl-ObjectArray%3CT%3E"],[873,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[874,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[884,"impl-ObjectArray%3CT%3E"],[885,"impl-StaticArray-for-ObjectArray%3CT%3E"],[887,"impl-ObjectArray%3CT%3E"],[888,"impl-StaticArray-for-ObjectArray%3CT%3E"],[890,"impl-ObjectArray%3CT%3E"],[891,"impl-Array-for-ObjectArray%3CT%3E"],[894,"impl-ObjectChunkedBuilder%3CT%3E"],[895,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[897,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[898,"impl-ObjectChunkedBuilder%3CT%3E"],[1463,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1464,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1465,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1466,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1467,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1468,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1469,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1470,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1546,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1547,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1548,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1549,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1550,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1551,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1841,"impl-PartialEq-for-DataType"],[1842,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[1850,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1851,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1852,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1853,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1856,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1857,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1858,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1859,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1898,"impl-Display-for-AnyValue%3C\'_%3E"],[1899,"impl-Debug-for-AnyValue%3C\'a%3E"],[1901,"impl-Display-for-DataType"],[1902,"impl-Debug-for-DataType"],[1904,"impl-Debug-for-TimeUnit"],[1905,"impl-Display-for-TimeUnit"],[1917,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[1918,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[1920,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[1921,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[1922,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[1925,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[1926,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[1927,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[1928,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[1929,"impl-From%3C%26Field%3E-for-Field"],[1953,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[1954,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[1958,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[1959,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1960,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1962,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1963,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1964,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1965,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1971,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1972,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1974,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1975,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1976,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1977,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1978,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1979,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1987,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[1988,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[1989,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1990,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1991,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1992,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2081,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2082,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2083,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2084,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2087,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2088,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2089,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2090,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2222,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2223,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2224,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2225,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2228,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2229,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2230,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2231,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2265,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2266,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2267,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2268,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2269,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2270,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2271,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2272,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2273,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2274,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2286,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2287,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2290,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2291,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2292,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2293,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2296,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2297,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2298,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2299,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2379,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2380,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2381,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2382,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2681,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2682,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2683,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2684,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2685,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2686,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2701,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2702,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2703,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2704,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2705,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2706,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2721,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2722,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2723,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2724,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2725,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2726,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2737,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2738,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2739,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2740,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2741,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2742,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2891,"impl-Display-for-ErrString"],[2892,"impl-Debug-for-ErrString"],[2983,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[2984,"impl-Add%3C%26Series%3E-for-DataFrame"],[2985,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3022,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3023,"impl-Div%3C%26Series%3E-for-DataFrame"],[3024,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3054,"impl-Display-for-DataFrame"],[3055,"impl-Debug-for-DataFrame"],[3060,"impl-From%3C%26Schema%3E-for-DataFrame"],[3062,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3089,"impl-Index%3C%26str%3E-for-DataFrame"],[3090,"impl-Index%3Cusize%3E-for-DataFrame"],[3091,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3092,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3093,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3094,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3095,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3096,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3121,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3122,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3123,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3138,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3139,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3140,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3172,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3173,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3174,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3193,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3194,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3365,"impl-Display-for-GroupByMethod"],[3366,"impl-Debug-for-GroupByMethod"],[3372,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3374,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3375,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3409,"impl-IntoIterator-for-GroupsIdx"],[3410,"impl-IntoIterator-for-%26GroupsIdx"],[3412,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3413,"impl-IntoParallelIterator-for-GroupsIdx"],[3768,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[3769,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[3893,"impl-PartialEq-for-Arc%3CT,+A%3E"],[3894,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[3895,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[3928,"impl-Debug-for-PolarsError"],[3929,"impl-Display-for-PolarsError"],[3932,"impl-Debug-for-Arc%3CT,+A%3E"],[3933,"impl-Pointer-for-Arc%3CT,+A%3E"],[3934,"impl-Display-for-Arc%3CT,+A%3E"],[3945,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3946,"impl-From%3CError%3E-for-PolarsError"],[3947,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3948,"impl-From%3CError%3E-for-PolarsError"],[3952,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[3953,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[3954,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[3955,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[3957,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[3958,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[3959,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[3960,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[3961,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[3962,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[3964,"impl-From%3CT%3E-for-Arc%3CT%3E"],[3965,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[3966,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[3967,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[3968,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4305,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4306,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4307,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4308,"impl-From%3CArrowSchema%3E-for-Schema"],[4309,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4310,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4378,"impl-Add-for-Series"],[4379,"impl-Add%3CT%3E-for-%26Series"],[4380,"impl-Add%3CT%3E-for-Series"],[4381,"impl-Add-for-%26Series"],[4442,"impl-Div-for-Series"],[4443,"impl-Div-for-%26Series"],[4444,"impl-Div%3CT%3E-for-%26Series"],[4445,"impl-Div%3CT%3E-for-Series"],[4456,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4457,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4458,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4459,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4460,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4461,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4479,"impl-Debug-for-Series"],[4480,"impl-Display-for-Series"],[4491,"impl-FromIterator%3C%26u64%3E-for-Series"],[4492,"impl-FromIterator%3C%26f64%3E-for-Series"],[4493,"impl-FromIterator%3Cf64%3E-for-Series"],[4494,"impl-FromIterator%3C%26u32%3E-for-Series"],[4495,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4496,"impl-FromIterator%3C%26str%3E-for-Series"],[4497,"impl-FromIterator%3Ci64%3E-for-Series"],[4498,"impl-FromIterator%3C%26i32%3E-for-Series"],[4499,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4500,"impl-FromIterator%3C%26bool%3E-for-Series"],[4501,"impl-FromIterator%3C%26i64%3E-for-Series"],[4502,"impl-FromIterator%3Cu32%3E-for-Series"],[4503,"impl-FromIterator%3Cf32%3E-for-Series"],[4504,"impl-FromIterator%3Cu64%3E-for-Series"],[4505,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4506,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4507,"impl-FromIterator%3C%26f32%3E-for-Series"],[4508,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4509,"impl-FromIterator%3CString%3E-for-Series"],[4510,"impl-FromIterator%3Cbool%3E-for-Series"],[4511,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4512,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4513,"impl-FromIterator%3Ci32%3E-for-Series"],[4514,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4515,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4516,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4517,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4518,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4519,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4531,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4532,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4533,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4534,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4535,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4536,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4573,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4574,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4575,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4576,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4577,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4578,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4592,"impl-Mul-for-Series"],[4593,"impl-Mul-for-%26Series"],[4594,"impl-Mul%3CT%3E-for-Series"],[4595,"impl-Mul%3CT%3E-for-%26Series"],[4601,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[4602,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[4603,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[4604,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[4605,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[4606,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[4607,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[4608,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[4609,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[4610,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[4611,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[4612,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[4613,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[4614,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[4615,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[4616,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[4617,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[4618,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[4619,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[4620,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[4621,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[4622,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[4623,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[4624,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[4625,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[4626,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[4627,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[4628,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[4629,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[4630,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[4631,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[4632,"impl-NamedFrom%3CT,+T%3E-for-Series"],[4633,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[4634,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[4635,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[4640,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4641,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4642,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4643,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4644,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4645,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4654,"impl-Rem%3CT%3E-for-%26Series"],[4655,"impl-Rem%3CT%3E-for-Series"],[4656,"impl-Rem-for-%26Series"],[4685,"impl-Sub%3CT%3E-for-Series"],[4686,"impl-Sub-for-%26Series"],[4687,"impl-Sub-for-Series"],[4688,"impl-Sub%3CT%3E-for-%26Series"],[4711,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4713,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4714,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4715,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4885,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4886,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4888,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4889,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4891,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4892,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAANoMIQ1eDWENYg1jDWQNZQ1qDW0Ncg1zDZgN","e":"OzAAAAEAAIoO4gEAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoAEQBEAAAARwACAEsABABTAAMAWAAAAFoABABhAAAAZAAAAGYAAABpAAYAcQAAAHMAAgB5AAQAfwAAAIQABwCNAAgAmAAEAJ8AAQCiAAoAsQAAALQAAQC4AAQAvgACAMQAAwDKAAMAzwADANYAAADYAAUA4AADAOsABQD0AAMA+wABAAEBAQAEAQYAEAEOACEBBQAoARkARQEDAEoBAABMAQQAUgEBAFgBAABaAQQAYQEAAGYBAgBqAQEAbgECAHMBBwB9AQMAiAEBAI4BAQCUAQgAngEKAKoBAACsAQAArgEFALYBAAC4ASMA3QEpAAsCAgARAiMAOwIFAEUCAABHAiYAcAJMAMQCDADYAjcAEwMJAB8DAQAjAwEAJgMSADsDEwBQAwcAWQMAAFsDAABdAwAAXwMBAGMDDgBzAwAAdgMAAHgDAgB8AwIAgAMCAIQDBwCNAwAAjwMFAJcDAQCaAwAAnAMBAJ8DAwCkAwMAqQMCAK0DAwCzAwAAtgMAAL4DAADDAwAAxgMBAMsDAQDOAwAA0QMAANkDAADiAwIA5wMFAO8DAgD0AwEA9wMAAPkDAQD/AwEAAgQBAAkEAQAPBAAAEgQAABUEAAAXBAAAGQQAABsEAAAgBAQAJwQBACoEBwAzBAIAOQQAADsEAwBABAEAQwQFAE8EFQBmBAEAagQEAHAEAwB3BAYAgQQPAJMECwCgBAEAowQDALMECQDIBA0A2AQCANwEBQDkBAAA5gQMAPYEAAD4BAAA/QQBAAAFAAACBQIABgUAAAgFAAALBQAADgUAABAFAQATBQAAFQUCABkFDAAnBQAAKQUBACwFAAAuBQEAMQUAADMFAQA2BQAAOAUBADsFAAA/BQAAQwUBAEcFAABKBQAATAUAAE4FAwBTBQAAVgUHAF8FAQBiBQUAaQUBAG0FAABvBQAAdAUCAHgFAQB7BQAAfQUBAIAFAACCBQEAhQUAAIcFAQCKBQAAjAUBAI8FAACRBQAAlAU7ANYFBADdBQkA6QUEAO8FCAD5BQAA+wWuAKsGBwC0BnYALAcBAC8HRgB+BwEAgQcCAIYHBACNBwAAogcBAKYHFwDCByQA6QcGAPIHHgAXCD8AWQgAAH0ICgCKCAAAjAgBAI8IAQCSCAAAlwgFAJ4IAAChCAIApggDAKsIAACtCBwAywgJANYIDgDmCBwABAkGAAwJGgAoCRUAPwkMAE0JAABSCQAAVAkAAFkJHQB5CQIAfQlRANAJLAD+CUwATAoEAFIKAQBVCgIAWQoEAF8KIwCKCgIAjgoJAJwKAwChChcAuwoBAL4KBADECg0A0woFANoKAADcChUA8woBAPkKAgD+CgEAAgsJAA0LBAATCwEAGAsAABoLAgAeCwEAIQsAACMLAQApCxgAQwsKAE8LAABRCwIAVgsEAFwLJACCCwUAiQsJAJYLAACZCwoApQsFALALEADDCxIA1wsAAN4LAQDiCwIA5gsAAOgLAADtCwMA9QsAAPcLAQAHDAAACgwBABIMDAAlDAEAMgwCADkMAQBDDAIASwwAAE4MAABUDAAAXQwBAGAMAABjDAQAbgwEAHYMBgB/DAkAigwAAI4MBACaDA0AqQwCAK4MCgC6DAEAvQwDAMIMAwDHDAkA0gwHANsMAQDeDBgA+AwoACINBgAtDQAALw0CADUNAwA7DQAAQA0HAFANDQBfDQEAZg0DAGsNAQBvDQIAdA0AAHYNHwCZDQwAqA0FAK8NBwC4DRYA0Q0LAN4NDwDwDQAA8g0DAPkNBgADDg4AFA4BABcOEQArDgQAMw4FADsOCQBGDgIASw4HAFQODwBlDhYAfQ4jAKMOEAC1DgAAtw4BALsOHADaDgIA3g4SAPIOBgD8DgEAAQ8iACcPAgArDwoANw8dAFcPEQBqDwMAbw8AAHwPAACGDwAAjA8AAI8PAACWDwAAmQ8AAJ4PAQChDwYAqg8RAMsPAwDQDwIA1A8BANcPAQDyDwIA+A8EAP8PAAACEAcADBAAAA4QAQATEC0AShAMAFgQAABaEAwAbBAJAHgQBgCAEAAAghAcAKAQAACiEAsArxAAALEQAQC6EAQAwRAFAMgQCADSEAcA4BABAOMQAQDnEAEA+xAAAP0QAAD/EAAAAxEDAAkRBAAPEQMAFBEEABsRAwAkEQAAKhECADIRBQA5EQYAQxEDAEsRAgBPEQEAUxEPAGcRAQBqEQEAbREBAHERAgB/EQMAhREAAIkRAACLER4ArREAALQRAAC2EQIAuxEAAMERBADJEQMA1REDAN4RAQDiEQEA6REAAPERAwD6EQ4AChISAB8SAgAjEgIAKRIBAC8SAgA3EgAAOxIBAEESAQBFEgEATBIAAE4SAwBhEgEAZBIOAHoSAQCAEgIAhBIAAIYSGgCkEgIAqRIOALkSAQC8EgUAwxIKAM8SAADREgAA0xIEANkSBADfEgQA5hIAAOkSAADsEgkA9xICAPwSDAALEwYAFRMIAB8TBQAoEw0ANxMAADkTAgA9EwgARxMEAA=="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNCMCNNNNNNNNNONNNNNNNNMMMNNNNNNNNNNCCCOCMMMOCCCCCONNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNHONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNHNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPFPFPPGFFIPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNKKEMMMMNNNJJJJHHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","finish","finish","fmt","fmt","from","from","hash","hash","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","is_compressed","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_create_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","clone","clone_into","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","take_validity","to_boxed","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_rechunk","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_schema","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compression","data_pagesize_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_and_compress","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_writer","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","maintain_order","new","row_group_size","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","is_cloud_url","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[80,"polars_io::avro"],[146,"polars_io::cloud"],[216,"polars_io::cloud::options"],[395,"polars_io::csv"],[397,"polars_io::csv::read"],[651,"polars_io::csv::read::schema_inference"],[675,"polars_io::csv::write"],[815,"polars_io::ipc"],[1068,"polars_io::json"],[1164,"polars_io::mmap"],[1186,"polars_io::ndjson"],[1188,"polars_io::ndjson::core"],[1268,"polars_io::parquet"],[1271,"polars_io::parquet::metadata"],[1323,"polars_io::parquet::read"],[1459,"polars_io::parquet::write"],[1641,"polars_io::partition"],[1657,"polars_io::pl_async"],[1678,"polars_io::predicates"],[1732,"polars_io::prelude"],[1742,"polars_io::utils"],[1754,"dyn_clone::sealed"],[1755,"polars_io::options"],[1756,"polars_io::shared"],[1757,"alloc::boxed"],[1758,"std::io"],[1759,"core::result"],[1760,"serde::de"],[1761,"std::path"],[1762,"polars_core::frame"],[1763,"polars_error"],[1764,"core::fmt"],[1765,"core::hash"],[1766,"polars_arrow::record_batch"],[1767,"core::option"],[1768,"serde::ser"],[1769,"core::any"],[1770,"polars_io::avro::read"],[1771,"polars_arrow::datatypes::schema"],[1772,"polars_io::avro::write"],[1773,"polars_core::schema"],[1774,"alloc::string"],[1775,"alloc::vec"],[1776,"polars_io::cloud::glob"],[1777,"object_store"],[1778,"alloc::sync"],[1779,"polars_io::cloud::polars_object_store"],[1780,"polars_io::cloud::adaptors"],[1781,"std::io::error"],[1782,"crossterm::command"],[1783,"url"],[1784,"object_store::path"],[1785,"bytes::bytes"],[1786,"core::ops::range"],[1787,"core::ops::function"],[1788,"parquet_format_safe::thrift::varint::decode"],[1789,"object_store::aws::builder"],[1790,"object_store::azure::builder"],[1791,"object_store::gcp::builder"],[1792,"core::convert"],[1793,"core::iter::traits::collect"],[1794,"polars_io::csv::read::reader"],[1795,"polars_io::csv::read::read_impl::batched"],[1796,"polars_io::csv::read::options"],[1797,"std::fs"],[1798,"polars_core::datatypes::dtype"],[1799,"polars_io::csv::write::writer"],[1800,"polars_io::csv::write::options"],[1801,"core::num::nonzero"],[1802,"polars_io::ipc::ipc_stream"],[1803,"polars_io::ipc::write"],[1804,"futures_io::if_std"],[1805,"core::marker"],[1806,"polars_io::ipc::ipc_file"],[1807,"polars_io::ipc::ipc_reader_async"],[1808,"polars_arrow::io::ipc::read::file"],[1809,"polars_arrow::array::struct_"],[1810,"polars_arrow::array"],[1811,"polars_arrow::datatypes"],[1812,"polars_arrow::datatypes::field"],[1813,"polars_arrow::array::struct_::mutable"],[1814,"polars_arrow::array::growable::structure"],[1815,"polars_arrow::bitmap::immutable"],[1816,"polars_arrow::scalar"],[1817,"polars_arrow::array::struct_::iterator"],[1818,"polars_arrow::bitmap::utils::iterator"],[1819,"polars_arrow::bitmap::utils::zip_validity"],[1820,"polars_parquet::parquet::metadata::file_metadata"],[1821,"polars_parquet::parquet::metadata::column_order"],[1822,"polars_parquet::parquet::metadata::row_metadata"],[1823,"polars_parquet::arrow::read::statistics"],[1824,"parquet_format_safe::parquet_format"],[1825,"polars_parquet::parquet::metadata::schema_descriptor"],[1826,"polars_parquet::parquet::error"],[1827,"polars_io::parquet::read::reader"],[1828,"polars_io::parquet::read::read_impl"],[1829,"polars_io::parquet::read::options"],[1830,"polars_core::series"],[1831,"polars_io::parquet::write::writer"],[1832,"polars_io::parquet::write::batched_writer"],[1833,"polars_io::parquet::write::options"],[1834,"polars_parquet::parquet::write"],[1835,"core::iter::traits::iterator"],[1836,"polars_parquet::arrow::write::file"],[1837,"std::sync::mutex"],[1838,"core::future::future"],[1839,"tokio::runtime::task::join"],[1840,"polars_core::datatypes::field"],[1841,"avro_schema::file"],[1842,"polars_io::cloud::object_store_setup"],[1843,"polars_io::csv::read::parser"],[1844,"polars_io::csv::read::utils"],[1845,"polars_io::parquet::read::utils"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,0,7,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,7,16,8,5,6,5,6,5,6,5,6,5,6,0,0,0,5,0,16,8,23,5,0,0,0,0,0,6,5,6,5,6,5,6,5,6,5,6,0,5,6,0,0,0,0,31,31,31,31,31,28,28,32,31,28,32,31,31,31,28,32,31,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,31,28,32,31,28,32,31,28,32,28,28,31,28,32,31,28,32,31,28,32,31,28,32,31,28,32,28,32,28,0,0,0,43,44,39,43,44,39,43,39,0,43,43,39,44,39,43,44,39,43,44,44,39,43,39,44,39,44,39,43,44,39,43,39,43,43,43,0,43,44,39,43,44,39,43,44,39,43,44,0,39,44,39,44,43,44,39,43,44,39,43,44,39,43,44,39,43,44,44,59,58,59,0,60,59,61,61,0,58,60,58,58,59,60,59,59,0,0,58,58,59,58,58,58,59,58,58,59,59,61,61,0,61,58,58,59,59,59,58,58,59,58,60,60,58,59,58,59,58,59,59,59,58,38,58,59,60,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,38,58,59,60,38,58,59,60,38,38,61,58,59,60,38,61,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,58,58,58,59,59,59,60,60,60,38,58,59,60,38,61,58,59,60,61,58,59,60,38,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,0,0,76,76,0,0,0,0,0,0,74,75,76,0,0,75,74,72,73,74,75,76,66,66,66,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,72,73,74,75,76,72,73,74,75,76,72,73,0,73,72,73,74,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,73,72,73,74,75,76,72,72,72,73,73,73,74,74,74,75,75,75,76,76,76,66,72,73,74,75,76,71,70,66,72,73,74,75,75,76,72,72,72,73,74,75,76,72,0,72,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,0,72,72,73,72,72,66,75,75,75,71,70,73,72,72,72,73,72,72,72,72,72,0,72,73,72,73,74,75,76,72,72,72,73,74,75,76,73,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,71,70,66,72,73,74,75,76,72,71,70,66,72,73,74,75,76,72,72,73,73,72,73,73,72,72,72,72,73,72,72,73,72,72,72,73,72,72,72,72,72,72,73,72,72,73,73,0,79,79,79,79,79,79,79,79,79,79,79,79,79,0,79,79,79,79,79,79,79,79,79,86,0,0,0,86,86,86,0,0,84,85,86,84,82,82,83,84,85,86,82,83,84,85,86,84,85,86,84,85,86,85,85,84,85,86,82,83,84,85,86,82,83,84,85,86,84,85,86,82,83,84,85,86,84,85,86,84,84,84,85,85,85,86,86,86,82,83,85,84,85,86,82,83,84,85,86,84,85,86,82,84,82,84,82,83,84,85,86,82,83,84,85,86,85,84,82,82,85,85,85,85,84,85,86,84,85,84,85,86,82,83,84,85,86,82,83,84,85,86,82,83,84,85,86,82,83,84,85,86,82,82,82,82,82,82,82,82,82,82,83,0,0,0,0,0,0,0,0,0,0,0,0,97,97,94,95,96,97,88,89,89,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,94,95,96,97,94,95,96,97,96,98,101,102,98,101,102,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,94,96,97,103,98,88,104,101,89,90,102,94,95,96,97,94,96,97,96,96,96,97,97,97,101,102,103,88,104,89,90,103,94,96,97,103,98,88,104,101,89,90,102,94,95,96,97,98,94,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,96,94,103,98,103,88,104,101,89,102,89,103,88,94,96,97,103,88,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,88,104,101,89,102,101,102,103,88,104,89,95,103,88,95,103,88,95,95,90,0,110,0,110,0,0,0,106,110,107,109,108,106,110,107,109,108,106,106,106,106,110,107,109,108,106,110,107,109,108,106,106,110,107,109,108,106,106,106,106,106,107,108,106,110,107,109,108,106,106,108,110,107,109,108,106,110,107,109,108,106,106,107,109,108,106,108,106,110,107,109,108,106,110,107,109,108,106,110,107,109,108,106,110,107,109,108,106,108,108,107,108,108,108,108,109,81,81,0,81,0,81,81,81,81,81,81,81,81,81,81,68,68,0,81,81,81,81,0,0,0,0,113,113,113,113,118,113,118,113,113,113,113,113,118,113,118,113,118,113,113,113,113,118,113,118,113,113,113,118,113,118,118,113,118,113,113,113,113,113,118,118,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,118,113,118,113,113,118,113,113,113,113,113,118,113,118,118,118,118,118,118,118,118,113,113,0,0,0,0,0,0,127,130,127,130,127,127,127,127,127,127,130,127,130,127,0,130,130,127,130,130,127,130,130,127,130,127,130,127,127,127,127,130,130,130,127,127,127,127,127,130,127,127,130,127,130,127,127,130,127,140,0,140,140,0,0,0,0,140,139,140,136,138,137,136,138,139,140,137,136,138,139,140,139,140,139,140,140,137,136,138,139,140,137,136,138,139,140,139,140,137,136,138,139,140,139,140,139,139,139,140,140,140,136,138,137,139,140,137,136,138,139,140,138,136,138,139,140,137,136,138,139,140,137,136,138,139,140,137,137,137,139,0,137,136,137,136,138,139,136,138,137,136,138,139,140,136,136,138,139,140,137,136,138,139,140,137,136,138,139,140,137,136,138,139,140,136,138,139,137,136,138,139,140,136,136,138,136,138,136,138,136,138,136,138,136,0,146,0,146,0,146,146,0,0,0,0,146,146,146,0,145,146,147,148,149,143,144,143,145,146,147,148,149,144,143,145,146,147,148,149,145,146,147,148,149,145,146,147,148,149,145,145,145,146,144,143,145,146,147,148,149,144,143,145,146,147,148,149,145,146,147,148,149,144,143,145,146,147,148,149,144,145,146,147,148,149,145,145,145,146,146,146,147,147,147,148,148,148,149,149,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,144,145,146,147,148,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,145,143,145,145,146,147,148,149,143,145,145,146,147,148,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,147,148,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,143,143,143,143,144,144,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,0,159,159,159,159,159,159,159,159,0,159,159,161,159,159,159,0,159,159,0,0,0,0,0,0,67,165,164,165,164,164,165,164,165,164,165,164,165,164,165,67,165,164,165,164,165,165,165,165,165,164,165,164,165,164,165,164,165,164,164,165,164,163,165,165,165,165,164,165,164,165,164,165,164,0,0,0,16,8,16,8,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0`{{{b{n}}c}{{Ab{A`}}}Ad}`{{}l}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{j}}}Aj}{c{{Ah{l}}}Aj}{Aff}0`{{{b{j}}{b{j}}}Al}{{{b{l}}{b{l}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{n}}}An}{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{{{b{j}}{b{hBf}}}Bh}{{{b{l}}{b{hBf}}}Bh}{cc{}}0{{{b{j}}{b{hc}}}fBj}{{{b{l}}{b{hc}}}fBj}{{}Af}0{ce{}{}}0`````{cB`Bl}{cA`Ad}{{{b{hBn}}}{{Bd{{Cb{C`}}}}}}```````{{{b{j}}c}AhCd}{{{b{l}}c}AhCd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0`88````````{{{b{c}}d}f{}}{{{b{h{Ch{c}}}}}{{Bd{Cj}}}{BlCl}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cn}}}Cn}{{{b{c}}{b{he}}}f{}{}}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}00{{{b{Cn}}{b{Cn}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{Ch{c}}}{{Bd{Bb}}}{BlCl}}{{{b{h{D`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{Cn}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}00{{{b{Cn}}{b{hc}}}fBj}{{}Af}00{ce{}{}}00{c{{Ch{c}}}{BlCl}}{c{{D`{c}}}Ad}{{{b{h{Ch{c}}}}}{{Bd{Dd}}}{BlCl}}{{{Ch{c}}Al}{{Ch{c}}}{BlCl}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00777{{{Ch{c}}{Cb{{Dh{Df}}}}}{{Ch{c}}}{BlCl}}{{{D`{c}}{Cb{Cn}}}{{D`{c}}}Ad}{{{Ch{c}}{Cb{Af}}}{{Ch{c}}}{BlCl}}{{{D`{c}}Df}{{D`{c}}}Ad}{{{Ch{c}}{Cb{{Dh{Af}}}}}{{Ch{c}}}{BlCl}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Ed{Dn{Eb{E`}}}}}}}}{{{b{Ef}}}Ef}{{{b{c}}{b{he}}}f{}{}}{{}Dn}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{{{b{hEh}}}f}{Aff}00{{{b{Dn}}{b{Dn}}}Al}{{{b{hc}}e}{{Ah{{b{hg}}Ej}}}{}El{}}`{{{b{hEh}}}{{En{f}}}}{{{b{Dn}}{b{hBf}}}Bh}{{{b{Ef}}{b{hBf}}}Bh}{cc{}}00{{{b{F`}}}{{Bd{Dn}}}}{{{b{Ef}}{b{Fb}}}{{Bd{Fd}}}}{{{b{Ef}}{b{Fb}}{Ff{Af}}}{{Bd{Fd}}}}{{{b{Ef}}{b{Fb}}{b{{Fh{{Ff{Af}}}}}}}{{Bd{{Dh{Fd}}}}}}{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Dh{Df}}}}}}{{{b{Ef}}{b{Fb}}}{{Bd{Fj}}}}{{}Af}00{ce{}{}}00{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Eh}}}}{{{b{Dj}}}{{Bd{Dn}}}}{{{Eb{E`}}}Ef}{{{Eb{E`}}Fb}{{Bd{Eh}}}}``{{{b{hc}}e}{{Ah{{b{hg}}Ej}}}{}El{}}`{{{b{hc}}i}{{Ah{gEj}}}{}{}{}{{Fn{{b{he}}}{{Fl{g}}}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00999{{{b{hEh}}{b{{Fh{G`}}}}}{{En{Af}}}}{{{b{hc}}e}{{Ah{AfEj}}}{}Gb}``````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gd}}}{{b{Dj}}}}{{{b{Gf}}}{{b{Dj}}}}{{{b{Gh}}}{{b{Dj}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dl}}{b{Dj}}}{{Bd{{`{E`}}}}}}00{{{b{Dl}}}Dl}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{c}}{b{he}}}f{}{}}000{{}Dl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Dl}}}Aj}{c{{Ah{Gd}}}Aj}{c{{Ah{Gf}}}Aj}{c{{Ah{Gh}}}Aj}{Aff}0000{{{b{Dl}}{b{Dl}}}Al}{{{b{Gj}}{b{Gj}}}Al}{{{b{Gd}}{b{Gd}}}Al}{{{b{Gf}}{b{Gf}}}Al}{{{b{Gh}}{b{Gh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000{{{b{Dl}}{b{hBf}}}Bh}{{{b{Gd}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gf}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gh}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000{{{b{Dj}}}{{Ah{Gjc}}}{}}{{{b{Dj}}}{{Ah{Gd}}}}{{{b{Dj}}}{{Ah{Gf}}}}{{{b{Dj}}}{{Ah{Gh}}}}{{{b{Dj}}g}{{Bd{Dl}}}{{Gl{Dj}}}{{Gn{Df}}}{{Hb{}{{H`{{Ed{ce}}}}}}}}{{{b{Dl}}{b{hc}}}fBj}{{{b{Gd}}{b{hc}}}fBj}{{{b{Gf}}{b{hc}}}fBj}{{{b{Gh}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000`{{{b{Dl}}c}AhCd}{{{b{Gd}}c}AhCd}{{{b{Gf}}c}AhCd}{{{b{Gh}}c}AhCd}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000077777{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Gdc}}}}}}}}{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Gfc}}}}}}}}{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Ghc}}}}}}}}`````````````````{{{b{c}}d}f{}}0000{{{Hd{c}}{Cb{{Eb{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Ab{Hh}}}}{Cb{Hj}}}{{Bd{Hl}}}}{{{b{h{Hd{c}}}}}{{Bd{Hn}}}Hh}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000`{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{c}}{b{he}}}f{}{}}0000``{{{b{An}}G`{Cb{G`}}{Cb{{b{If}}}}G`Al}{{Bd{Af}}}}`{{}I`}{{}Ib}{{}Id}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{I`}}}Aj}{c{{Ah{Ib}}}Aj}{c{{Ah{Id}}}Aj}{c{{Ah{If}}}Aj}{c{{Ah{Ih}}}Aj}{Aff}0000000```{{{b{I`}}{b{I`}}}Al}{{{b{Ib}}{b{Ib}}}Al}{{{b{Id}}{b{Id}}}Al}{{{b{If}}{b{If}}}Al}{{{b{Ih}}{b{Ih}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{Hd{c}}}{{Bd{Bb}}}Hh}{{{b{I`}}{b{hBf}}}Bh}{{{b{Ib}}{b{hBf}}}Bh}{{{b{Id}}{b{hBf}}}Bh}{{{b{If}}{b{hBf}}}Bh}{{{b{Ih}}{b{hBf}}}Bh}{cc{}}00000{{{b{Dj}}}If}11{{{b{I`}}}{{Eb{Ib}}}}`{{{b{I`}}{b{hc}}}fBj}{{{b{Ib}}{b{hc}}}fBj}{{{b{Id}}{b{hc}}}fBj}{{{b{If}}{b{hc}}}fBj}{{{b{Ih}}{b{hc}}}fBj}```{{}Af}0000000{ce{}{}}0000000{{I`c}{{Hd{c}}}Hh}{{{b{{Fh{G`}}}}}Al}`{{I`c}I`{{Ij{Ib}{{Fl{Ib}}}}}}```{c{{Hd{c}}}Hh}<{DfIf}{G`If}{{{b{hHn}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{hHl}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}`````````````{{{b{I`}}c}AhCd}{{{b{Ib}}c}AhCd}{{{b{Id}}c}AhCd}{{{b{If}}c}AhCd}{{{b{Ih}}c}AhCd}``{{{b{c}}}e{}{}}0000`{c{{Ah{e}}}{}{}}000000000000000{{I`{Cb{An}}}{{Bd{{Hd{Il}}}}}}`{{{b{c}}}Cf{}}0000000{{{b{hI`}}{b{In}}}f}{ce{}{}}0000000{{I`Af}I`}{{I`{Cb{{Eb{{Dh{Df}}}}}}}I`}{{Ib{Cb{c}}}Ib{{Gn{If}}}}{{IbAl}Ib}{{I`{Cb{{Eb{{Dh{J`}}}}}}}I`}{{IbId}Ib}{{IbG`}Ib}{{I`Al}I`}0{{I`{Cb{Af}}}I`}1500{{Ib{Cb{Ih}}}Ib}{{I`Ib}I`}{{I`{Cb{c}}}I`{{Gn{An}}}}{{I`{Cb{{Eb{{Dh{Af}}}}}}}I`}{{Ib{Cb{G`}}}Ib}66{{I`{Cb{j}}}I`}>{{I`{Cb{Hj}}}I`}09??<<`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{In}}}In}{{{b{c}}{b{he}}}f{}{}}{{}In}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{In}}{b{hBf}}}Bh}{cc{}}{{{b{In}}}Af}{{{b{In}}}Hj}{{{b{Jb}}G`{Cb{Af}}Al{Cb{{b{Dd}}}}AfAf{Cb{{b{If}}}}{Cb{G`}}G`{Cb{{b{Ih}}}}AlAl{b{h{Cb{Af}}}}Al}{{Bd{{Ed{DdAfAf}}}}}}{{}Af}{ce{}{}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}{{{b{Jb}}{b{I`}}}{{Bd{In}}}}1{{{b{c}}}Cf{}}4{{InHj}In}`````````{{{b{c}}d}f{}}00`{{{Jd{c}}{b{Dd}}}{{Bd{{Jf{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Jh}}}Jh}{{{b{Jj}}}Jj}{{{b{Jl}}}Jl}{{{b{c}}{b{he}}}f{}{}}00``{{}Jh}{{}Jj}{{}Jl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Jh}}}Aj}{c{{Ah{Jj}}}Aj}{c{{Ah{Jl}}}Aj}{Aff}0000{{{b{Jh}}{b{Jh}}}Al}{{{b{Jj}}{b{Jj}}}Al}{{{b{Jl}}{b{Jl}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000{{{b{h{Jd{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Jf{c}}}}}{{Bd{f}}}Ad}`{{{b{Jh}}{b{hBf}}}Bh}{{{b{Jj}}{b{hBf}}}Bh}{{{b{Jl}}{b{hBf}}}Bh}{cc{}}0000{{{b{Jh}}{b{hc}}}fBj}{{{b{Jj}}{b{hc}}}fBj}{{{b{Jl}}{b{hc}}}fBj}{{{Jd{c}}Al}{{Jd{c}}}Ad}`0`{{}Af}0000{ce{}{}}0000``{{{Jd{c}}Af}{{Jd{c}}}Ad}{c{{Jd{c}}}Ad}````{{{b{Jh}}c}AhCd}{{{b{Jj}}c}AhCd}{{{b{Jl}}c}AhCd}``{{{b{c}}}e{}{}}00{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Jd{c}}Jn}{{Jd{c}}}Ad}{{{Jd{c}}{Cb{Df}}}{{Jd{c}}}Ad}0{{{Jd{c}}{Cb{Af}}}{{Jd{c}}}Ad}{{{Jd{c}}Df}{{Jd{c}}}Ad}0{{{Jd{c}}G`}{{Jd{c}}}Ad}{{{Jd{c}}Jl}{{Jd{c}}}Ad}14{{{b{h{Jf{c}}}}{b{Bb}}}{{Bd{f}}}Ad}``````````````{{{b{c}}d}f{}}000{{{b{h{K`{c}}}}}{{Bd{Cj}}}Bl}{{{Kb{c}}{b{Dd}}}{{Bd{{Kd{c}}}}}Ad}{{{Kb{c}}{b{Dd}}}{{Bd{{`{c}}}}}{KfKhKj}}{{{b{c}}}{{b{e}}}{}{}}00000000000{{{b{hc}}}{{b{he}}}{}{}}00000000000{{{b{Kl}}}Kl}{{{b{Kn}}}Kn}{{{b{L`}}}L`}{{{b{Lb}}}Lb}{{{b{c}}{b{he}}}f{}{}}000`{{{b{Ld}}{Cb{{b{Lf}}}}}{{Bd{Lh}}}}{{{b{Lj}}c}{{Ab{A`}}}Ad}{{{b{Ll}}c}{{Ab{A`}}}Ad}{{{b{Ld}}{Cb{{b{Lf}}}}KnAl}{{Bd{Bb}}}}{{}Lj}{{}Ll}{{}Kn}{{}L`}{{}Lb}{Af{{b{c}}}{}}00000000000{Af{{b{hc}}}{}}00000000000{c{{Ah{Kl}}}Aj}{c{{Ah{L`}}}Aj}{c{{Ah{Lb}}}Aj}{Aff}00000000000{{{b{Kl}}{b{Kl}}}Al}{{{b{L`}}{b{L`}}}Al}{{{b{Lb}}{b{Lb}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{Lj}}}An}{{{b{Ll}}}An}{{{Ln{c}}}{{Bd{Bb}}}Hh}{{{K`{c}}}{{Bd{Bb}}}Bl}{{{b{h{M`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kb{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kd{c}}}}}{{Bd{f}}}Ad}{{{Ln{c}}{Cb{{Eb{Hf}}}}Al}{{Bd{Bb}}}Hh}{{{b{Kl}}{b{hBf}}}Bh}{{{b{L`}}{b{hBf}}}Bh}{{{b{Lb}}{b{hBf}}}Bh}{cc{}}00000000000{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Ld}}}}{{{b{Kl}}{b{hc}}}fBj}{{{b{L`}}{b{hc}}}fBj}{{{b{Lb}}{b{hc}}}fBj}{{}Af}00000000000{ce{}{}}00000000000``{{{Ln{c}}{Cb{An}}}{{Ln{c}}}Hh}{{{b{Ld}}}{{Bd{Lf}}}}{c{{Ln{c}}}Hh}{c{{K`{c}}}Bl}{c{{M`{c}}}Ad}{{}Lj}{c{{Kb{c}}}Ad}{{}Ll}{c{{Kb{c}}}{KfKhKj}}{{{b{h{Ln{c}}}}}{{Bd{Mb}}}Hh}{{{b{h{K`{c}}}}}{{Bd{Dd}}}Bl}{{{b{Kl}}c}AhCd}{{{b{L`}}c}AhCd}{{{b{Lb}}c}AhCd}{{{Ln{c}}Al}{{Ln{c}}}Hh}{{{K`{c}}Al}{{K`{c}}}Bl}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}00000000000000000000000{{{b{c}}}Cf{}}00000000000{ce{}{}}00000000000{{{Ln{c}}{Cb{{Dh{Df}}}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{{Dh{Df}}}}}{{K`{c}}}Bl}{{{M`{c}}{Cb{Lb}}}{{M`{c}}}{}}{{Lj{Cb{Lb}}}Lj}{{{Kb{c}}{Cb{Lb}}}{{Kb{c}}}Ad}{{Ll{Cb{Lb}}}Ll}{{LjAn}Lj}{{LlAn}Ll}{{{Ln{c}}{Cb{Af}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{Af}}}{{K`{c}}}Bl}{{{M`{c}}Al}{{M`{c}}}{}}{{{Kb{c}}Al}{{Kb{c}}}Ad}{{Knc}Kn{{Gn{{Cb{{Eb{Hf}}}}}}}}{{{Ln{c}}{Cb{{Dh{Af}}}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{{Dh{Af}}}}}{{K`{c}}}Bl}{{Knc}Kn{{Gn{{Cb{{Dh{Df}}}}}}}}{{{Ln{c}}{Cb{j}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{j}}}{{K`{c}}}Bl}{{Knc}Kn{{Gn{{Cb{j}}}}}}{{Knc}Kn{{Gn{{Cb{Af}}}}}}{{{b{h{Kd{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Md}}}Md}{{{b{c}}{b{he}}}f{}{}}{{}Md}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Md}}}Aj}{Aff}0000{{{b{Md}}{b{Md}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{b{h{Mf{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{Mh{c}}}{{Bd{Bb}}}Hh}{{{b{Md}}{b{hBf}}}Bh}{cc{}}0000{{{b{Md}}{b{hc}}}fBj}{{{Mh{c}}{Cb{Af}}}{{Mh{c}}}Hh}{{}Af}0000{ce{}{}}0000`{c{{Mf{c}}}Ad}{c{{Mj{c}}}Ad}{c{{Mh{c}}}Hh}{{{b{Md}}c}AhCd}{{{Mh{c}}Al}{{Mh{c}}}Hh}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Mh{c}}Jn}{{Mh{c}}}Hh}4{{{Mf{c}}Ml}{{Mf{c}}}Ad}{{{Mh{c}}Ml}{{Mh{c}}}Hh}{{{Mh{c}}{Cb{{Dh{Df}}}}}{{Mh{c}}}Hh}{{{Mh{c}}Hj}{{Mh{c}}}Hh}{{{Mh{c}}{b{Dd}}}{{Mh{c}}}Hh}{{{b{h{Mj{c}}}}{b{Bb}}}{{Bd{f}}}Ad}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jb}}}{{b{{Fh{G`}}}}}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{c}}}JbHh}{cc{}}{{}Af}{ce{}{}}{{{b{Hh}}}{{Cb{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Cb{{b{Il}}}}}}{{{b{Mn}}}{{Bd{Il}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}5`{{{b{hc}}{Cb{Af}}}{{Bd{Dd}}}N`}``{{{b{c}}d}f{}}{Nb{{Eb{Nd}}}}{{{b{Nb}}}{{b{Nf}}}}{{{b{hNb}}}{{b{hNf}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nb{{Ab{Nd}}}}{{{b{Nb}}}Nb}{{{b{c}}{b{he}}}f{}{}}{{{b{Nb}}}{{b{Nh}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{Aff}0{{{b{Nb}}{b{{b{Nd}}}}}Al}{{{b{Nb}}{b{Nb}}}Al}{{{b{Nb}}}{{b{{Fh{Nj}}}}}}{{{Nl{c}}}{{Bd{Bb}}}Hh}{{{b{Nb}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{NnNb}{O`Nb}2{c{{Bd{{Nl{Il}}}}}{{Gn{An}}}}{{{b{Nh}}}{{b{{Fh{Nj}}}}}}{{{Nl{c}}{Cb{Af}}}{{Nl{c}}}Hh}{{}Af}0{ce{}{}}0{Nb{{Ed{{Dh{Nj}}{Dh{{Ab{Nd}}}}{Cb{Ob}}}}}}{{{b{Nb}}}}{{{b{Nb}}}{{Oj{{Dh{{Ab{Od}}}}OfOh}}}}{{{b{Nb}}}Af}{{{Nl{c}}Al}{{Nl{c}}}Hh}{c{{Nl{c}}}Hh}{{Nh{Dh{{Ab{Nd}}}}{Cb{Ob}}}Nb}{NhNb}{{NhAf}Nb}{{{b{hNb}}{Cb{Ob}}}f}{{{b{hNb}}AfAf}f}0{{{b{c}}AfAf}e{}{}}011{{NbAfAf}Nb}0{{{b{hNb}}}{{Cb{Ob}}}}{{{b{Nb}}}{{Ab{Nd}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000{{Nh{Dh{{Ab{Nd}}}}{Cb{Ob}}}{{Ah{NbOl}}}}{{{b{c}}}Cf{}}0{{{b{Nb}}}{{Cb{{b{Ob}}}}}}0{{{b{Nb}}}{{b{{Fh{{Ab{Nd}}}}}}}}{{{b{Nb}}}Of}{ce{}{}}0{{{Nl{c}}{Cb{Jn}}}{{Nl{c}}}Hh}{{{Nl{c}}Al}{{Nl{c}}}Hh}{{{Nl{c}}{Cb{Af}}}{{Nl{c}}}Hh}0{{{Nl{c}}{Cb{e}}}{{Nl{c}}}Hh{{Gn{An}}}}2{{{Nl{c}}Hj}{{Nl{c}}}Hh}{{{Nl{c}}{b{Dd}}}{{Nl{c}}}Hh}{{Nb{Cb{Ob}}}Nb}{{{b{Nb}}{Cb{Ob}}}{{Ab{Nd}}}}``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{On}}}On}{{{b{c}}{b{he}}}f{}{}}{{{b{On}}Af}A@`}``{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{{{b{Nj}}{b{A@b}}}{{Ah{A@dOl}}}}`{Aff}0{{{b{A@d}}{b{A@d}}}Al}{{{b{A@d}}{b{hBf}}}{{Ah{fDb}}}}{{{b{On}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{A@fA@d}1{{}Af}0{ce{}{}}0{OnA@h}{{{b{On}}}{{b{{Cb{{Dh{A@j}}}}}}}}``````{{{b{On}}}{{b{A@l}}}}`{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{A@h{{Ah{OnA@n}}}}11{{{b{c}}}Cf{}}0`77`````````{{{b{c}}d}f{}}0{{{AA`{c}}Af}{{Bd{AAb}}}Hh}{{AAdAf}{{Bd{AAb}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{AAf}}}AAf}{{{b{AAh}}}AAh}{{{b{c}}{b{he}}}f{}{}}0{{}AAh}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{AAf}}}Aj}{c{{Ah{AAh}}}Aj}{Aff}0000{{{b{AAf}}{b{AAf}}}Al}{{{b{AAh}}{b{AAh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{AA`{c}}}{{Bd{Bb}}}Hh}{AAd{{Bd{Bb}}}}{{{b{AAb}}Af}Al}{{{b{AAf}}{b{hBf}}}Bh}{{{b{AAh}}{b{hBf}}}Bh}{cc{}}0000{{{b{Dj}}{Cb{{b{Dl}}}}{Cb{Mb}}{Cb{AAj}}}{{Bd{AAd}}}}{{{b{h{AA`{c}}}}}{{Bd{{b{AAj}}}}}Hh}{{{b{hAAd}}}{{Bd{{b{AAj}}}}}}{{{b{AAf}}{b{hc}}}fBj}{{{b{AAh}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000{{{b{AAb}}}Al}`0`{{{Cb{{b{{Fh{Af}}}}}}{b{Cj}}{Cb{{b{{Fh{AAl}}}}}}{Cb{{b{j}}}}}Bb}`{c{{AA`{c}}}Hh}{{{b{hAAb}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{h{AA`{c}}}}}{{Bd{Af}}}Hh}{{{b{hAAd}}}{{Bd{Af}}}}`{{{AA`{c}}AAh}{{AA`{c}}}Hh}{{AAdAAh}AAd}{{{b{AAb}}}{{b{Mb}}}}{{{b{h{AA`{c}}}}}{{Bd{Mb}}}Hh}{{{b{hAAd}}}{{Bd{Mb}}}}{{{b{AAf}}c}AhCd}{{{b{AAh}}c}AhCd}{{{AA`{c}}Al}{{AA`{c}}}Hh}0{{AAdAl}AAd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000043`{ce{}{}}0000{{{AA`{c}}{Cb{{Dh{Df}}}}}{{AA`{c}}}Hh}{{{AA`{c}}{Cb{{Dh{AAl}}}}}{{AA`{c}}}Hh}{{AAd{Cb{{Dh{AAl}}}}}AAd}{{{AA`{c}}{Cb{Af}}}{{AA`{c}}}Hh}{{AAd{Cb{Af}}}AAd}{{{AA`{c}}{Cb{{Eb{Hf}}}}}{{AA`{c}}}Hh}{{AAd{Cb{{Eb{Hf}}}}}AAd}{{{AA`{c}}{Cb{{Dh{Af}}}}}{{AA`{c}}}Hh}{{AAd{Cb{{Dh{Af}}}}}AAd}{{{AA`{c}}{Cb{j}}}{{AA`{c}}}Hh}{{AAd{Cb{j}}}AAd}{{{AA`{c}}{Cb{Mb}}}{{AA`{c}}}Hh}```````````````{{{b{c}}d}f{}}0000{{{AAn{c}}{b{Dd}}}{{Bd{{AB`{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}000000{{{b{hc}}}{{b{he}}}{}{}}000000{{{b{ABb}}}ABb}{{{b{ABd}}}ABd}{{{b{ABf}}}ABf}{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{{b{c}}{b{he}}}f{}{}}0000``{{}ABb}{{}ABd}{Af{{b{c}}}{}}000000{Af{{b{hc}}}{}}000000{c{{Ah{ABb}}}Aj}{c{{Ah{ABd}}}Aj}{c{{Ah{ABf}}}Aj}{c{{Ah{ABh}}}Aj}{c{{Ah{ABj}}}Aj}{Aff}000000{{{b{{AB`{c}}}}{b{Bb}}}{{`{{ABn{}{{H`{{Bd{{ABl{Ol}}}}}}}}}}}Ad}{{{b{ABb}}{b{ABb}}}Al}{{{b{ABd}}{b{ABd}}}Al}{{{b{ABf}}{b{ABf}}}Al}{{{b{ABh}}{b{ABh}}}Al}{{{b{ABj}}{b{ABj}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{b{{AB`{c}}}}}{{Bd{AC`}}}Ad}{{{AAn{c}}{b{hBb}}}{{Bd{AC`}}}Ad}{{{b{ABb}}{b{hBf}}}Bh}{{{b{ABd}}{b{hBf}}}Bh}{{{b{ABf}}{b{hBf}}}Bh}{{{b{ABh}}{b{hBf}}}Bh}{{{b{ABj}}{b{hBf}}}Bh}{cc{}}000000{{{b{{AB`{c}}}}}{{b{{ACd{{ACb{c}}}}}}}Ad}{{{b{ABb}}{b{hc}}}fBj}{{{b{ABd}}{b{hc}}}fBj}{{{b{ABf}}{b{hc}}}fBj}{{{b{ABh}}{b{hc}}}fBj}{{{b{ABj}}{b{hc}}}fBj}{{}Af}000000{ce{}{}}000000`{c{{AAn{c}}}{AdAd}}`{{{b{ABb}}c}AhCd}{{{b{ABd}}c}AhCd}{{{b{ABf}}c}AhCd}{{{b{ABh}}c}AhCd}{{{b{ABj}}c}AhCd}{{{AAn{c}}Al}{{AAn{c}}}Ad}`{{{b{c}}}e{}{}}0000{c{{Ah{e}}}{}{}}0000000000000{G`{{Bd{ABf}}}}{ACf{{Bd{ABh}}}}{ACh{{Bd{ABj}}}}{{{b{c}}}Cf{}}000000======={{{AAn{c}}ABd}{{AAn{c}}}Ad}{{{AAn{c}}{Cb{Af}}}{{AAn{c}}}Ad}08{{{b{h{AB`{c}}}}{b{Bb}}}{{Bd{f}}}Ad}{{{b{{AB`{c}}}}{Dh{{ABl{Ol}}}}}{{Bd{f}}}Ad}`{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{ACj{c}}{b{Bb}}}{{Bd{f}}}{nKjACl}}{cc{}}{{}Af}{ce{}{}}{{cei}{{ACj{c}}}{nKjACl}{{Gn{An}}}{{Gl{Dj}}}{{Hb{}{{H`{g}}}}}}{c{{Ah{e}}}{}{}}0?2{{{ACj{c}}Al}{{ACj{c}}}{nKjACl}}``{{{b{ACn}}c}{}AD`}{{{b{ACn}}c}{}{AD`Kj}}=<;:97{{}{{b{ACn}}}}76{{{b{ADb}}}AC`}{{{b{ACn}}c}ADd{AD`Kj}}66{{ACfe}{}AD`{{Fn{}{{Fl{c}}}}}}{{{b{c}}}Cf{}}:1````{{{b{hBb}}{Cb{{b{Hf}}}}Al}{{Bd{f}}}}{{{b{Hf}}}{{Cb{{b{ADf}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{ADh}}}{{b{{Fh{ADj}}}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{ADj}}}Aj}{c{{Ah{ADh}}}Aj}{Aff}0{{{b{ADj}}}{{b{J`}}}}{{{b{Hf}}{b{Bb}}}{{Bd{AAl}}}}{{{b{ADj}}{b{hBf}}}Bh}{{{b{ADh}}{b{hBf}}}Bh}{cc{}}0{AAlADj}{ADlADj}{{{b{ADj}}}{{Cb{{b{AAl}}}}}}00{{{b{ADh}}{b{Dj}}}{{Bd{{b{ADj}}}}}}{{}Af}0{ce{}{}}0{{ADl{Cb{AAl}}{Cb{AAl}}{Cb{AAl}}}ADj}{{Hj{Dh{ADj}}{Cb{Af}}}ADh}{{{b{ADj}}}{{Cb{Af}}}}{{{b{ADh}}}{{Cb{Af}}}}{{{b{ADh}}}{{b{Hj}}}}{{{b{ADj}}c}AhCd}{{{b{ADh}}c}AhCd}{{{b{ADf}}{b{ADh}}}{{Bd{Al}}}};;{{{b{ADj}}}{{Cb{AAl}}}}{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0;;```{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{cB`Bl}{cA`Ad}{{B`Al}B`}00````{{{b{Cj}}{b{Cj}}{Cb{{b{{Fh{Df}}}}}}{b{Dj}}}{{Bd{f}}}}{{{b{Dd}}{b{Dd}}{Cb{{b{{Fh{Df}}}}}}{b{Dj}}}{{Bd{f}}}}0{{{b{hc}}}{{Bd{Jb}}}{BlHhADn}}{{cAf}{{Dh{{Ed{AfAf}}}}}{{ABn{}{{H`{Af}}}}}}{cAl{{Gl{Mn}}}}{{{Cb{{b{{Fh{Df}}}}}}{b{Dd}}{Cb{{b{{Fh{AAl}}}}}}Al}{{Cb{{Dh{Af}}}}}}{{{b{Mn}}}An}","D":"CJn","p":[[1,"reference"],[5,"Private",1754],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1755],[5,"HiveOptions",0,1755],[10,"WriterFactory",0,1756],[10,"SerWriter",1732,1756],[5,"Box",1757],[10,"Write",1758],[1,"usize"],[6,"Result",1759],[10,"Deserializer",1760],[1,"bool"],[5,"PathBuf",1761],[10,"SerReader",1732,1756],[5,"DataFrame",1762],[8,"PolarsResult",1763],[5,"Formatter",1764],[8,"Result",1764],[10,"Hasher",1765],[10,"Read",1758],[10,"ArrowReader",0,1756],[8,"RecordBatch",1766],[6,"Option",1767],[10,"Serializer",1768],[5,"TypeId",1769],[5,"AvroReader",80,1770],[5,"ArrowSchema",1771],[10,"Seek",1758],[6,"AvroCompression",80],[5,"AvroWriter",80,1772],[5,"Error",1764],[5,"Schema",1773],[5,"String",1774],[5,"Vec",1775],[1,"str"],[5,"CloudOptions",216],[5,"CloudLocation",146,1776],[10,"ObjectStore",1777],[5,"Arc",1778],[1,"tuple"],[5,"PolarsObjectStore",146,1779],[5,"CloudWriter",146,1780],[5,"Error",1781],[10,"Command",1782],[8,"Result",1781],[5,"Url",1783],[5,"Path",1784],[5,"Bytes",1785],[5,"Range",1786],[1,"slice"],[5,"ObjectMeta",1777],[17,"Output"],[10,"FnOnce",1787],[1,"u8"],[10,"VarInt",1788],[6,"AmazonS3ConfigKey",216,1789],[6,"AzureConfigKey",216,1790],[6,"GoogleConfigKey",216,1791],[6,"CloudType",216],[10,"AsRef",1792],[10,"Into",1792],[17,"Item"],[10,"IntoIterator",1793],[5,"CsvReader",397,1794],[10,"PhysicalIoExpr",1678],[10,"MmapBytesReader",1164],[8,"SchemaRef",1773],[5,"OwnedBatchedCsvReader",397,1795],[5,"BatchedCsvReader",397,1795],[5,"CsvReadOptions",397,1796],[5,"CsvParseOptions",397,1796],[6,"CsvEncoding",397,1796],[6,"CommentPrefix",397,1796],[6,"NullValues",397,1796],[10,"Fn",1787],[5,"File",1797],[5,"SchemaInferenceResult",651],[6,"DataType",1798],[6,"ReaderBytes",1164],[5,"CsvWriter",675,1799],[5,"BatchedWriter",675,1799],[5,"CsvWriterOptions",675,1800],[5,"SerializeOptions",675,1800],[6,"QuoteStyle",675,1800],[8,"NonZeroUsize",1801],[5,"IpcStreamReader",815,1802],[5,"IpcWriter",815,1803],[5,"BatchedWriter",815,1803],[10,"AsyncWrite",1804],[10,"Unpin",1805],[10,"Send",1805],[5,"IpcScanOptions",815,1806],[5,"IpcReadOptions",815,1807],[5,"IpcWriterOptions",815,1803],[6,"IpcCompression",815,1803],[5,"IpcReaderAsync",815,1807],[5,"FileMetadata",1808],[1,"i64"],[5,"IpcStreamWriterOption",815,1802],[5,"IpcWriterOption",815,1803],[5,"IpcReader",815,1806],[5,"IpcStreamWriter",815,1802],[8,"ArrowSchemaRef",1771],[5,"JsonWriterOptions",1068],[5,"JsonWriter",1068],[5,"JsonReader",1068],[5,"BatchedWriter",1068],[6,"JsonFormat",1068],[5,"Path",1761],[10,"BufRead",1758],[5,"StructArray",1188,1809],[10,"Array",1810],[10,"Any",1769],[6,"ArrowDataType",1811],[5,"Field",1812],[5,"JsonLineReader",1188],[5,"MutableStructArray",1813],[5,"GrowableStruct",1814],[5,"Bitmap",1815],[10,"Scalar",1816],[5,"StructValueIter",1817],[5,"BitmapIter",1818],[6,"ZipValidity",1819],[6,"PolarsError",1763],[5,"FileMetaData",1271,1820],[6,"ColumnOrder",1821],[5,"RowGroupMetaData",1822],[5,"ParquetStatistics",1271],[5,"MutableStatistics",1823],[5,"FileMetaData",1824],[5,"KeyValue",1824],[5,"SchemaDescriptor",1825],[6,"Error",1826],[5,"ParquetReader",1323,1827],[5,"BatchedParquetReader",1323,1828],[5,"ParquetAsyncReader",1323,1827],[5,"ParquetOptions",1323,1829],[6,"ParallelStrategy",1323,1829],[8,"FileMetaDataRef",1271],[5,"Series",1830],[5,"ParquetWriter",1459,1831],[5,"BatchedWriter",1459,1832],[5,"ParquetWriteOptions",1459,1833],[6,"ParquetCompression",1459,1833],[5,"GzipLevel",1459,1833],[5,"BrotliLevel",1459,1833],[5,"ZstdLevel",1459,1833],[8,"RowGroupIterColumns",1459,1834],[10,"Iterator",1835],[1,"u64"],[5,"FileWriter",1836],[5,"Mutex",1837],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1641],[10,"Sync",1805],[5,"RuntimeManager",1657],[10,"Future",1838],[10,"GetSize",1657],[5,"JoinHandle",1839],[10,"StatsEvaluator",1678],[5,"BatchStats",1678],[5,"ColumnStats",1678],[5,"Field",1840],[10,"Sized",1805]],"r":[[0,1756],[1,1755],[2,1755],[3,1756],[4,1756],[5,1756],[81,1770],[82,1772],[83,1841],[146,1776],[147,1780],[148,1779],[157,1842],[184,1776],[219,1789],[224,1790],[248,1791],[399,1795],[400,1796],[401,1796],[402,1796],[403,1796],[404,1794],[408,1796],[409,1795],[449,1843],[529,651],[548,1844],[676,1799],[677,1799],[678,1800],[682,1800],[683,1800],[815,1803],[816,1803],[817,1807],[818,1806],[819,1807],[820,1806],[821,1802],[822,1802],[823,1802],[824,1803],[825,1803],[826,1803],[1189,1809],[1271,1820],[1288,1823],[1324,1828],[1327,1829],[1328,1827],[1329,1829],[1330,1827],[1405,1845],[1459,1832],[1461,1833],[1463,1833],[1466,1833],[1467,1833],[1468,1831],[1469,1834],[1473,1833],[1732,1756],[1733,1756],[1734,0]],"b":[[1208,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1209,"impl-PartialEq-for-StructArray"],[1214,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1215,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1234,"impl-StructArray"],[1235,"impl-Array-for-StructArray"],[1238,"impl-Array-for-StructArray"],[1239,"impl-StructArray"],[1252,"impl-Array-for-StructArray"],[1253,"impl-StructArray"],[1266,"impl-StructArray"],[1267,"impl-Array-for-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAMFoAAAAAEAAwAPABQAAAAWABIAKgACAC8AAwA1AAAANwACADsAAgBAABAAWQAAAFsAFwB2AAMAfQABAIAADQCRAAAAlgAGAJ8ADQCvAAIAtQADALsAAgDDAAAAxQAAAMoADgDfAAEA6wAAAPcAAQD6AAAADwEQACMBMABZAQMAXgEIAGwBHACQAQQAmQEBAJ0BJADDATcA/AEEAAcCAAAKAhEAJgIAACgCAgAvAisAXAIIAGYCBwB+AgAAjAIKAJgCAQCbAgAAnQIGAKUCAACtAhQAxAIhAOgCAgDwAgIA9AIAAPYCBQACAwIACQMDAA4DFgAwAwAAMgMAADUDAAA4AwAAOgMBAD4DAwBDAyEAZgM+AKYDAwC2Aw8A0wMAANUDBwDfAzgAIgQCACcEAAAqBAEALQQAADMEIwBYBAAAXgQAAGAEBABsBBgAhwQBAI0EAQCQBAgAmgQAAJwEAQCfBAYApwQAAKkEBQCwBAoAvAQBAL8EAQDEBAIAygQAAMwEAADUBAMA3AQFAOMEAgDpBAEA7QQFAPQEAAD5BAAA+wQGAAUFAwALBQQAEQUAABMFAQAhBQIAJQUDACoFAQAtBQAAMAUAADIFAAA1BTAAawUJAHoFAAB8BQMAgQUAAIMFAQCGBQEAiQUCAI0FEgCiBQUAqQUBAKwFAgCwBQAAsgUAALQFAQC3BQAAuQUBALwFAAC+BQMAwwUdAOMFMAAWBgQAIgYMADkGBABABiMAaQYAAGsGBQByBgAAdAYEAHoGAgB+BgQAhAYBAIcGAACJBgUAkQYCAJUGAwCaBgcApAYBAK4GAQC3BgIAvQYKAMkGAADLBgAAzwYDANUGAQDZBgEA"}],\
["polars_lazy",{"t":"CQCCCCPPGPPPPPPPPPPPPPFPPPPPPPKPGPPPGFPPFFPPPPPPPPPPPPPPPPPPFPPPPPPFPPPPPPPPPGPPPPGKFPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPKPPPPPPPPPPPPPFPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPGPPPPPGPPPPPPPPPGPPPPPPPPPKPPPPPPPFPPPPPPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPFPPPPPPFPPPPPPPPKPPPPFPPFPPGGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPGPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOOOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNOONNNNNNNMNNNNNNNNNNNNNNNNNNNNNNONNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNONNMNNOOOONNNNNNNNOMNNMNNCOONOONMNNOONNNNOOMNNOOONNNNNNNNONNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNHHCCFKNNNNNMNNNNNNNNHKFFPPPPPPPFPPPPPGFPFPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNOOOONONNNONNNNNOOOONONOOOOMOMNONNNNNNNNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","utils","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","DatetimeArgs","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Implode","IndexColumn","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","Join","JoinOptions","JsonDecode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Min","MinHorizontal","Minus","Mode","Modulus","Multiply","NUnique","Name","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","Operator","Or","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","QCut","Quantile","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","RoundSF","SearchSorted","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","Tail","TemporalExpr","Ternary","Then","Titlecase","ToDecimal","ToInteger","ToPhysical","TopK","TopKBy","Trigonometry","TrueDivide","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","When","Wildcard","Window","WindowMapping","WindowType","Xor","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BinaryExpr","Boolean","BooleanFunction","Business","Categorical","CategoricalFunction","Cbrt","Ceil","Clip","Coalesce","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","Diff","DropNans","DropNulls","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","Explode","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","JsonDecode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","MinHorizontal","Mode","Negate","Not","NullCount","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","QCut","RLE","RLEID","Random","Range","Rank","Reinterpret","RepeatBy","Replace","Replace","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","RoundSF","SearchSorted","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","Titlecase","ToDecimal","ToInteger","ToPhysical","TopK","TopKBy","Trigonometry","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","concat","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","explode","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","allow_parallel","allows_projection_pushdown","anonymous_scan","anti_join","apply","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloud_options","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nulls","eager","eager","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","iter_paths","iter_paths","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","melt","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","null_count","on","optimize","parallel","path","path","path","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema","select","select_seq","semi_join","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_null_values","with_optimizations","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","executors","planner","Dummy","Executor","borrow","borrow_mut","deref","deref_mut","drop","execute","execute","from","init","into","try_from","try_into","type_id","vzip","create_physical_plan","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_sorted","check_sorted","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","aggs","apply","args","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","data_type","high","low"],"q":[[0,"polars_lazy"],[6,"polars_lazy::dsl"],[1399,"polars_lazy::dsl::AggExpr"],[1406,"polars_lazy::dsl::BooleanFunction"],[1409,"polars_lazy::dsl::Expr"],[1443,"polars_lazy::dsl::FunctionExpr"],[1487,"polars_lazy::dsl::StringFunction"],[1507,"polars_lazy::dsl::binary"],[1527,"polars_lazy::dsl::cat"],[1528,"polars_lazy::dsl::dt"],[1584,"polars_lazy::dsl::function_expr"],[1749,"polars_lazy::dsl::function_expr::BooleanFunction"],[1752,"polars_lazy::dsl::function_expr::FunctionExpr"],[1796,"polars_lazy::dsl::function_expr::StringFunction"],[1816,"polars_lazy::dsl::function_expr::cat"],[1818,"polars_lazy::dsl::function_expr::pow"],[1822,"polars_lazy::dsl::function_expr::rolling"],[1854,"polars_lazy::dsl::function_expr::rolling_by"],[1885,"polars_lazy::dsl::function_expr::trigonometry"],[1927,"polars_lazy::dsl::functions"],[2002,"polars_lazy::dsl::python_udf"],[2047,"polars_lazy::dsl::string"],[2109,"polars_lazy::dsl::udf"],[2115,"polars_lazy::frame"],[2551,"polars_lazy::frame::pivot"],[2553,"polars_lazy::physical_plan"],[2555,"polars_lazy::physical_plan::executors"],[2571,"polars_lazy::physical_plan::planner"],[2572,"polars_lazy::prelude"],[3161,"polars_lazy::prelude::DslPlan"],[3213,"polars_lazy::prelude::LiteralValue"],[3216,"dyn_clone::sealed"],[3217,"polars_plan::dsl::meta"],[3218,"polars_plan::dsl::expr"],[3219,"polars_error"],[3220,"core::result"],[3221,"polars_plan::dsl::array"],[3222,"polars_plan::dsl::list"],[3223,"core::convert"],[3224,"polars_plan::dsl::expr_dyn_fn"],[3225,"alloc::sync"],[3226,"polars_core::series"],[3227,"core::option"],[3228,"core::ops::function"],[3229,"core::marker"],[3230,"polars_plan::logical_plan::visitor"],[3231,"polars_plan::dsl::function_expr"],[3232,"polars_core::datatypes::dtype"],[3233,"polars_core::chunked_array::ops::sort::options"],[3234,"polars_plan::dsl::function_expr::schema"],[3235,"polars_core::datatypes::field"],[3236,"core::any"],[3237,"alloc::vec"],[3238,"polars_plan::dsl::binary"],[3239,"core::clone"],[3240,"alloc::string"],[3241,"polars_plan::dsl::udf"],[3242,"polars_plan::dsl::cat"],[3243,"polars_plan::dsl::arity"],[3244,"polars_plan::dsl::function_expr::boolean"],[3245,"polars_plan::dsl::function_expr::cat"],[3246,"polars_plan::dsl::function_expr::pow"],[3247,"polars_plan::dsl::function_expr::strings"],[3248,"polars_plan::dsl::functions::temporal"],[3249,"polars_plan::dsl::options"],[3250,"polars_core::utils"],[3251,"polars_lazy::dsl::eval"],[3252,"polars_time::windows::duration"],[3253,"polars_time::windows::group_by"],[3254,"polars_core::datatypes::time_unit"],[3255,"serde::de"],[3256,"polars_plan::logical_plan"],[3257,"polars_core::series::ops"],[3258,"polars_plan::dsl::dt"],[3259,"polars_lazy::dsl::list"],[3260,"polars_arrow::legacy::kernels::ewm"],[3261,"polars_plan::dsl::struct_"],[3262,"polars_core::chunked_array::ops"],[3263,"core::fmt"],[3264,"polars_plan::logical_plan::apply"],[3265,"polars_plan::dsl::function_expr::array"],[3266,"polars_plan::dsl::function_expr::business"],[3267,"polars_plan::dsl::function_expr::binary"],[3268,"polars_plan::dsl::function_expr::datetime"],[3269,"polars_plan::dsl::function_expr::list"],[3270,"polars_plan::dsl::function_expr::range"],[3271,"polars_plan::dsl::function_expr::struct_"],[3272,"polars_plan::logical_plan::options"],[3273,"polars_core::schema"],[3274,"core::hash"],[3275,"polars_ops::series::ops::interpolation::interpolate"],[3276,"polars_ops::series::ops::is_between"],[3277,"polars_plan::dsl::name"],[3278,"polars_plan::logical_plan::lit"],[3279,"polars_plan::dsl::python_udf"],[3280,"polars_utils::idx_vec"],[3281,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3282,"polars_ops::series::ops::rank"],[3283,"polars_time::group_by::dynamic"],[3284,"polars_core::chunked_array::ops::rolling_window"],[3285,"polars_core::datatypes"],[3286,"polars_core::chunked_array"],[3287,"polars_time::chunkedarray::rolling_window"],[3288,"polars_core::chunked_array::ops::search_sorted"],[3289,"serde::ser"],[3290,"polars_core::series::series_trait"],[3291,"polars_plan::dsl::string"],[3292,"polars_ops::chunked_array::list::to_struct"],[3293,"polars_ops::series::ops::business"],[3294,"polars_arrow::legacy::kernels::time"],[3295,"polars_plan::dsl::function_expr::rolling"],[3296,"polars_plan::dsl::function_expr::rolling_by"],[3297,"polars_plan::dsl::function_expr::trigonometry"],[3298,"polars_core::frame"],[3299,"rayon::iter"],[3300,"pyo3::types::any"],[3301,"pyo3::instance"],[3302,"polars_utils::arena"],[3303,"polars_plan::logical_plan::alp"],[3304,"polars_plan::logical_plan::aexpr"],[3305,"polars_lazy::scan::ndjson"],[3306,"polars_plan::logical_plan::anonymous_scan"],[3307,"polars_lazy::scan::anonymous_scan"],[3308,"polars_utils::index"],[3309,"polars_lazy::frame::exitable"],[3310,"polars_utils::aliases"],[3311,"polars_lazy::scan::csv"],[3312,"polars_lazy::scan::ipc"],[3313,"polars_lazy::scan::parquet"],[3314,"polars_plan::frame::opt_state"],[3315,"polars_lazy::scan::file_list_reader"],[3316,"polars_io::cloud::options"],[3317,"polars_ops::frame::join::args"],[3318,"core::iter::traits::collect"],[3319,"polars_core::frame::explode"],[3320,"std::path"],[3321,"polars_io::options"],[3322,"polars_io::csv::write::options"],[3323,"polars_io::ipc::write"],[3324,"polars_io::json"],[3325,"polars_io::parquet::write::options"],[3326,"smartstring::alias"],[3327,"core::num::nonzero"],[3328,"polars_io::csv::read::options"],[3329,"polars_lazy::physical_plan::executors::executor"],[3330,"polars_expr::state::execution_state"],[3331,"alloc::boxed"],[3332,"chrono_tz::timezones"],[3333,"core::cmp"],[3334,"polars_core::frame::group_by::proxy"],[3335,"polars_core::datatypes::any_value"],[3336,"chrono::naive::datetime"],[3337,"polars_plan::dsl::functions::selectors"],[3338,"polars_plan::dsl::functions::horizontal"],[3339,"polars_plan::dsl::functions::arity"],[3340,"polars_plan::dsl"],[3341,"polars_plan::dsl::functions::range"],[3342,"polars_plan::dsl::functions::index"],[3343,"polars_plan::dsl::functions::coerce"],[3344,"polars_plan::dsl::functions::syntactic_sugar"],[3345,"polars_plan::dsl::functions::business"],[3346,"polars_plan::dsl::functions::concat"],[3347,"polars_plan::dsl::functions::correlation"],[3348,"polars_plan::dsl::functions::repeat"],[3349,"polars_lazy::physical_plan::planner::lp"]],"i":[0,0,0,0,0,0,27,5,0,36,5,54,54,40,5,54,54,27,27,27,65,27,0,27,27,27,57,57,5,27,0,27,0,27,5,27,0,0,56,27,0,0,27,27,5,5,27,57,57,57,27,36,57,27,27,27,27,27,27,27,0,27,40,27,27,53,5,0,57,27,40,40,27,27,27,27,5,0,27,5,57,64,0,0,0,27,57,57,57,5,0,0,27,27,5,57,36,27,40,27,5,0,0,27,5,27,56,55,0,64,40,40,27,57,57,57,27,36,5,27,27,0,54,54,54,54,54,54,54,54,54,54,54,54,64,0,57,57,5,27,36,5,57,57,65,27,0,0,5,27,27,40,40,27,57,40,40,36,27,36,27,36,0,36,27,40,27,40,40,36,53,27,0,54,40,40,5,27,0,40,63,57,57,27,27,27,40,27,0,27,36,27,27,27,27,27,27,5,0,27,57,27,27,57,27,63,0,27,27,27,27,27,5,0,0,27,27,27,27,27,27,5,57,5,5,0,57,57,57,56,57,36,27,0,57,57,57,57,57,57,0,27,0,5,36,27,57,27,5,0,57,57,57,27,27,27,27,40,0,27,27,27,57,0,27,36,0,5,5,0,0,40,57,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,4,4,4,4,5,5,5,5,0,9,10,5,0,62,58,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,32,62,5,34,36,0,0,5,0,5,0,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,5,5,0,61,44,46,34,47,46,0,5,0,5,5,5,5,5,5,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,68,68,5,0,0,0,0,58,59,60,5,17,17,17,58,59,61,62,63,64,5,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,36,5,53,40,17,17,17,54,55,56,57,27,60,61,62,63,64,65,10,5,5,5,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,5,10,5,0,5,0,0,0,5,36,5,5,53,40,17,17,54,55,56,57,27,60,61,62,63,64,65,5,5,5,5,53,53,53,40,40,40,54,54,54,55,55,55,56,56,56,57,57,57,60,60,60,61,61,61,62,62,62,63,63,63,64,64,64,65,65,65,80,80,5,5,5,5,61,5,5,5,5,5,82,82,82,5,5,5,5,0,10,5,5,17,5,5,34,47,44,86,5,5,53,40,40,17,54,54,55,55,56,56,57,57,27,27,58,59,60,61,62,63,64,65,46,0,62,61,0,5,48,9,32,10,4,107,82,49,50,51,52,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,53,40,17,17,17,17,17,17,17,17,17,17,17,17,54,55,56,57,27,27,27,27,27,58,59,60,61,62,63,63,64,65,46,17,46,0,5,0,10,5,10,5,9,10,5,48,74,15,32,34,86,5,5,4,36,5,5,53,40,54,55,56,57,27,60,61,62,63,64,65,10,5,5,58,59,5,0,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,46,0,0,5,5,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,5,104,10,4,5,4,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,82,107,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,107,5,0,5,32,32,17,17,5,17,107,17,5,0,5,5,0,32,5,32,32,32,32,0,9,10,5,0,0,10,5,0,0,9,10,5,5,58,59,59,0,9,10,5,0,60,58,59,5,58,5,9,10,5,5,46,5,5,59,5,5,5,32,32,17,58,59,46,5,5,0,5,0,5,46,5,50,52,4,5,5,5,5,5,0,5,4,5,107,107,5,0,5,5,0,5,5,5,0,5,5,82,0,5,5,32,5,46,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,62,62,17,5,10,10,5,5,58,59,36,5,53,40,17,17,17,54,55,56,57,27,60,61,62,63,64,65,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,61,5,0,5,5,107,107,0,9,10,5,0,17,10,5,5,5,0,49,51,0,58,59,58,10,5,9,107,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,5,32,5,40,54,55,56,57,27,9,10,107,5,5,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,32,32,5,32,34,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,48,9,32,10,4,107,82,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,65,46,59,0,50,52,60,58,58,59,32,82,59,58,59,58,59,58,59,59,58,59,58,59,32,32,58,59,58,58,59,58,5,58,200,201,202,200,201,202,200,203,204,205,206,207,208,208,209,210,206,211,212,213,214,215,211,210,213,207,216,215,217,216,216,217,209,213,214,215,215,214,212,210,217,206,208,212,218,219,220,221,222,223,224,225,226,227,227,221,222,218,221,222,218,222,218,228,229,223,230,231,232,219,231,233,234,235,236,232,218,237,238,239,240,241,242,233,230,232,243,244,245,246,247,248,249,250,245,246,251,248,249,250,252,253,254,254,251,247,252,253,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,27,54,54,54,54,27,27,27,27,27,27,27,57,57,27,27,0,27,27,0,56,27,27,27,27,57,57,57,27,57,27,27,27,27,27,27,27,27,27,27,57,27,27,27,27,27,27,57,27,57,57,57,27,27,57,27,27,0,27,27,56,55,27,57,57,57,27,27,27,54,54,54,54,54,54,54,54,54,54,54,54,57,57,27,57,57,27,27,27,27,57,27,27,27,27,27,54,27,57,57,27,27,27,27,0,27,27,27,27,27,27,27,27,57,27,27,57,27,27,27,27,27,27,27,27,27,27,27,27,57,57,57,57,56,57,27,0,57,57,57,57,57,57,27,27,57,27,57,57,57,27,27,27,27,27,27,27,57,27,57,0,0,0,0,0,203,204,205,218,219,220,221,222,223,224,225,226,227,227,221,222,218,221,222,218,222,218,228,229,223,230,231,232,219,231,233,234,235,236,232,218,237,238,239,240,241,242,233,230,232,243,244,245,246,247,248,249,250,245,246,251,248,249,250,252,253,254,254,251,247,252,253,0,55,56,56,0,56,128,128,128,128,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,129,129,129,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,59,0,0,0,0,0,58,59,0,0,0,0,0,0,0,0,0,58,59,59,0,58,59,58,59,0,0,0,0,0,0,0,58,59,0,0,0,0,58,59,58,59,58,0,0,0,0,137,110,137,110,137,110,137,137,137,110,137,110,137,137,110,137,137,137,137,137,137,110,137,137,110,110,137,110,137,110,137,137,110,137,110,137,110,110,137,110,137,0,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,0,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,134,145,149,154,155,147,156,157,134,134,145,146,147,134,134,145,147,146,152,134,145,149,154,155,147,156,157,146,152,134,145,149,154,155,147,156,157,134,134,155,156,152,134,134,152,134,145,149,154,155,147,156,157,152,134,145,149,154,155,147,156,157,158,158,155,156,167,157,146,134,134,167,157,167,157,158,158,154,134,134,134,149,155,156,157,146,152,134,145,149,154,155,147,156,157,146,152,134,145,149,154,155,147,156,157,134,134,134,134,146,152,152,134,134,145,149,154,155,147,156,157,134,167,157,134,134,167,157,152,134,152,167,157,134,134,134,146,158,158,154,158,154,147,134,157,146,146,152,134,134,134,145,149,154,155,147,156,157,134,134,158,158,154,156,134,134,134,145,156,146,149,146,152,134,145,149,154,155,147,156,157,134,146,152,134,145,149,154,155,147,156,157,158,158,134,134,146,134,166,134,134,146,134,134,145,147,156,134,134,134,134,134,134,155,134,134,158,154,147,149,155,156,149,146,154,147,154,147,134,146,134,156,158,154,147,158,154,147,0,167,157,134,167,157,134,158,154,147,155,156,134,134,146,134,167,157,158,154,147,149,155,156,147,134,134,134,134,134,134,147,149,134,134,134,134,134,167,157,134,134,134,134,134,134,149,134,167,157,134,134,134,167,157,146,134,134,145,134,134,134,152,134,145,149,154,155,147,156,157,134,146,152,134,145,149,154,155,147,156,157,146,152,134,145,149,154,155,147,156,157,167,157,146,152,134,145,149,154,155,147,156,157,134,134,134,156,146,134,146,152,134,145,149,154,155,147,156,157,146,147,154,134,134,134,134,134,134,154,134,154,154,154,154,154,154,154,147,154,147,154,154,158,154,154,147,147,154,134,158,154,147,158,154,147,134,134,154,154,158,154,147,134,158,134,154,154,147,147,154,147,154,154,134,154,154,134,134,154,154,134,134,0,0,0,0,0,0,188,188,188,188,188,186,188,188,188,188,188,188,188,188,0,0,0,0,163,163,191,192,192,76,163,0,76,192,192,191,76,0,0,192,0,76,76,192,192,192,163,76,76,76,163,192,192,192,192,192,0,76,0,0,0,0,163,0,0,182,182,76,191,191,0,0,192,182,182,191,0,0,76,192,0,0,0,76,76,163,192,76,76,76,192,192,192,192,192,192,192,76,0,162,114,71,175,176,177,165,163,182,178,191,113,192,193,136,76,71,71,71,148,148,148,148,175,162,114,71,175,173,176,177,165,163,182,197,178,191,113,192,193,136,76,162,114,71,175,173,176,177,165,163,182,197,178,191,113,192,193,136,76,162,114,162,114,71,175,176,177,165,163,182,178,191,113,192,193,136,76,162,114,71,175,176,177,165,163,182,178,191,113,192,193,136,76,162,114,71,165,71,176,178,76,178,71,71,162,114,175,176,177,165,182,178,113,193,136,76,162,114,71,175,173,176,177,165,163,182,197,178,191,113,192,193,136,76,162,114,71,175,173,176,177,165,163,182,197,178,191,113,192,193,136,76,113,76,76,162,114,71,175,176,177,165,163,182,178,191,113,192,193,136,76,136,76,162,114,71,175,173,176,177,165,163,182,197,178,191,113,192,193,136,76,162,114,71,175,176,177,165,163,182,178,191,113,192,193,136,162,162,162,114,114,114,71,71,71,175,175,175,176,176,176,177,177,177,165,165,165,163,163,163,182,182,182,178,178,178,193,193,193,136,136,136,162,162,114,71,71,175,148,176,177,165,163,163,182,182,178,191,113,192,193,136,193,162,114,71,175,173,176,177,165,165,163,182,197,178,191,113,192,193,136,76,136,192,195,162,114,71,175,176,177,165,163,182,178,191,113,192,193,136,165,175,162,175,162,114,162,114,71,175,173,176,177,165,163,182,197,178,191,113,192,193,136,76,162,114,71,175,173,176,177,165,163,182,197,178,191,113,192,193,136,76,163,71,71,182,71,165,162,108,197,192,175,176,177,178,192,113,71,71,71,173,71,182,71,71,165,162,114,173,136,71,71,71,162,114,173,136,195,178,148,148,173,162,114,71,175,176,177,165,163,182,178,191,113,192,193,136,76,175,193,165,162,178,165,165,76,192,162,114,71,175,176,177,165,163,182,178,191,113,192,193,136,76,71,163,182,136,71,71,71,71,162,114,71,175,173,176,177,165,163,182,197,178,191,113,192,192,193,136,76,162,114,71,175,173,176,177,165,163,182,197,178,191,113,192,193,136,76,162,114,71,175,173,176,177,165,163,182,197,178,191,113,192,193,136,76,165,162,114,71,175,173,176,177,165,163,182,197,178,191,113,192,193,136,76,71,71,165,173,255,255,256,257,258,259,260,261,262,263,263,264,258,265,258,261,255,262,266,257,267,264,259,268,269,269,256,270,255,269,267,255,267,271,261,255,269,262,266,270,260,263,268,265,263,260,269,263,260,260,257,257,272,272,272],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}0000000000000000000000{hj}{{hj}{{n{jl}}}}00{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}{{{b{D`}}}{{b{{Ah{Db}}}}}}`{jAb}{{{b{Dd}}}{{b{Df}}}}{{{b{Dh}}}{{b{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{j{Bh{Dl}}}j}`{jDn}{{jE`j}j}{{{b{c}}}{{b{e}}}{}{}}00000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000000000000000{{jjCl}j}{{jcgCn}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{{jj{Ed{Af}}{Dj{Ef}}}j}`{{{b{Eh}}{b{A`}}}{{n{Ejl}}}}{{El{Dj{j}}}{{n{jl}}}}{{{b{Dd}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{En}}BdBd}{{n{Bdl}}}}{{El{Dj{j}}}j}{{jCj}j}0`{jF`}{jj}0{{jjj}j}{{jj}j}0{{{b{Fb}}}Fb}{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Dh}}}Dh}{{{b{j}}}j}{{{b{Fj}}}Fj}{{{b{E`}}}E`}{{{b{{Bb{c}}}}}{{Bb{c}}}Eb}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Cf}}}Cf}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{El}}}El}{{{b{c}}{b{C`e}}}f{}{}}0000000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Hd{Ej}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjHf}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}2{{HhjHjAf}j}0{{j{Dj{Hl}}{Bh{{Dj{Ej}}}}AfAf}j}{{jjHnI`{Bh{Ib}}{Bh{Ej}}}j}{Gdj}11```{{}j}{{}{{Bb{{B`{An}}}}}}{{}{{Bb{{B`{En}}}}}}{{}{{Bb{{B`{Id}}}}}}{{}Gd}{{}Gf}{{}Gj}{{}Gl}{{}Gn}{{}H`}{jj}{Hj{{b{c}}}{}}000000000000000{{{b{{Bb{c}}}}}b{}}11111111111111{Hj{{b{C`c}}}{}}00000000000000000000000000000{c{{n{Dh}}}If}{c{{n{j}}}If}{c{{n{Fj}}}If}{c{{n{E`}}}If}{c{{n{{Bb{{B`{Dd}}}}}}}If}{c{{n{{Bb{Bd}}}}}If}{c{{n{{Bb{{B`{Ih}}}}}}}If}{c{{n{Fl}}}If}{c{{n{Fn}}}If}{c{{n{G`}}}If}{c{{n{Gb}}}If}{c{{n{Cf}}}If}{c{{n{Gh}}}If}{c{{n{Gj}}}If}{c{{n{Gl}}}If}{c{{n{Gn}}}If}{c{{n{H`}}}If}{c{{n{Hb}}}If}{{AdChIj}j}{{jChIj}j}{{jj}}{{jc}j{{Al{j}}}}{Hjf}00000000000000000000000000000{jj}{Adj}1`{jIl}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gfj}{{jHlAf}j}{{{b{Dh}}{b{Dh}}}Af}{{{b{j}}{b{j}}}Af}:{{{b{Fj}}{b{Fj}}}Af}{{{b{E`}}{b{E`}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfIn}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{Fl}}{b{Fl}}}Af}{{{b{Fn}}{b{Fn}}}Af}{{{b{G`}}{b{G`}}}Af}{{{b{Gb}}{b{Gb}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gh}}{b{Gh}}}Af}{{{b{Gj}}{b{Gj}}}Af}{{{b{Gl}}{b{Gl}}}Af}{{{b{Gn}}{b{Gn}}}Af}{{{b{H`}}{b{H`}}}Af}{{{b{Hb}}{b{Hb}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000000{{J`jAf}j}0{{jJb}j}{{jjHn}j}11`{{jc}j{{Hd{Ej}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{JdCh}j}{{Jd{b{A`}}}j}{{Jd{b{{Ah{c}}}}}j{{Aj{A`}}}};;{{jJf}j}<{{}j}{Adj}77{{}{{Bb{{B`{An}}}}}}8{{jj}j}{{{b{Dd}}{b{C`Jh}}}{{n{fJj}}}}{{{b{En}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Eh}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Jl}}{b{C`Jh}}}{{n{fJj}}}}{{{b{j}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{Fj}}{b{C`Jh}}}{{n{fJj}}}}{{{b{E`}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{{Bb{c}}}}{b{C`Jh}}}{{n{fJj}}}{}}{{{b{Fl}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{Fn}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{G`}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{Gb}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{Cf}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{Gd}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Gf}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Gh}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Gj}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Gl}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Gn}}{b{C`Jh}}}{{n{fJj}}}}{{{b{H`}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Hb}}{b{C`Jh}}}{{n{fJj}}}}{{{b{El}}{b{C`Jh}}}{{n{fJj}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dl}}}j}{cc{}}00000000000{Jnj}1{Chj}{Dlj}{Dhj}{K`j}{Kbj}{Hlj}{Hfj}{{{b{A`}}}j}{Kdj}{Efj}{Afj}{Kfj}=={Fn{{Bb{{B`{Dd}}}}}}>{Kh{{Bb{{B`{Dd}}}}}}{Cf{{Bb{{B`{Dd}}}}}}{Kj{{Bb{{B`{Dd}}}}}}{Gb{{Bb{{B`{Dd}}}}}}{Kl{{Bb{{B`{Dd}}}}}}{Kn{{Bb{{B`{Dd}}}}}}{L`{{Bb{{B`{Dd}}}}}}{Lb{{Bb{{B`{Dd}}}}}}{Fl{{Bb{{B`{Dd}}}}}}{Ld{{Bb{{B`{Dd}}}}}}{cc{}}000{GbCf}{FnCf}2{KlCf}{FlCf}44444{H`Gn}5555{Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}Lf}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jHjHj}j}{{AbjAf}j}43{F`j}{{{b{Id}}{b{Lh}}Lj{b{Db}}{b{Db}}}{{Bh{Db}}}}{{{b{An}}{b{Lh}}Lj{b{{Ah{Db}}}}}Db}{{{b{D`}}}Hj}{{{b{Dd}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{Jl}}{b{Lh}}}{{n{{B`{Lh}}l}}}}99{{{b{h}}}Af}{{{b{Dh}}{b{C`c}}}fLl}{{jDlDlDlDl}j}{{{b{j}}{b{C`c}}}fLl}{{{b{Fj}}{b{C`c}}}fLl}{{{b{E`}}{b{C`c}}}fLl}{{{b{Fl}}{b{C`c}}}fLl}{{{b{Fn}}{b{C`c}}}fLl}{{{b{G`}}{b{C`c}}}fLl}{{{b{Gb}}{b{C`c}}}fLl}{{{b{Cf}}{b{C`c}}}fLl}{{{b{Gh}}{b{C`c}}}fLl}{{{b{Gj}}{b{C`c}}}fLl}{{{b{Gl}}{b{C`c}}}fLl}{{{b{Gn}}{b{C`c}}}fLl}{{{b{H`}}{b{C`c}}}fLl}{{{b{Hb}}{b{C`c}}}fLl}{{Adj}j}{{j{Bh{Hj}}}j}{{j{Bh{j}}{Bh{Hj}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}Hj}00000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jLn}j}{{jj}j}{ce{}{}}00000000000000000000000000000{{{b{j}}}}{M`Ad}{AdAd}{h{{n{{`{Mb}}l}}}}{{jccMd}j{{Al{j}}}}{{{b{h}}}Af}{{{b{h}}Af}Af}>>>{{jc}j{{Al{j}}}}????????22?{{AbjAf}j}{{AdjAf}j}{Jdj}{Mfj}{{jAfAf}j}{{}j}{Adj}{jj}210{jAd}{cjMh}{{jHl}j}3;;3;;{{Mfc}j{{Bj{{b{A`}}}{{Bf{{n{Ejl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{D`}}{Bh{{b{Ej}}}}}{{n{Dbl}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{Cj}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{Cj}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Db}}}{{Bf{Db}}}}BlBn}}{{Mf{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Db}}}}}{{Bf{Db}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{D`}}}{{n{Dbl}}}}{{jMlAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMf}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Db}}}}}D`}{c{{Bb{c}}}{}}{{jjj}Gd}{{}Gf}{{{b{A`}}{Dj{Db}}{Bb{{B`{An}}}}c}ElDd}{{{b{j}}{b{C`{Mn{{b{j}}}}}}}f}{{j{b{C`{Mn{j}}}}}f}=={Chj}>`8{{Fdc}j{{Al{j}}}}{{Fhc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jeH`}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjHf}j}{{}j}{h{{Dj{j}}}}{{jc}j{{Al{j}}}}{{Mf{b{A`}}}j}05`{{j{Dj{Hl}}{Bh{{Dj{Ej}}}}AfAfAf}j}{{jHj{Bh{{Dj{Ej}}}}AfAfAf}j}{{{b{A`}}jN`}j}{{jjN`}j}9{{jNb{Bh{Dl}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{Jd{Dj{Ej}}}j}{{cj}j{{Al{j}}}};{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{j{b{{Ah{Ch}}}}Hb}j}`{Abj}{Adj}{jj}00{{jNd}j}{{jjGh}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nf}j}{{jHjc}j{{Cd{{b{C`{Nj{Nh}}}}}{{Bf{{Bh{Hl}}}}}}BlBnNl}}{{jNf}j}{{jjNn}j}101010{{jN`HlNf}j}{{jjN`HlNn}j}{{jHjAf}j}434343{{{b{h}}}{{Dj{{B`{A`}}}}}}{{jJn}j}{{jEf}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dl}}}j}{{AdjAfAf{Bh{Dl}}}j}01{{jcO`}j{{Al{j}}}}``{{{b{Dh}}c}nOb}{{{b{j}}c}nOb}{{{b{Fj}}c}nOb}{{{b{E`}}c}nOb}{{{b{{Bb{Bd}}}}c}nOb}{{{b{{Bb{{B`{Dd}}}}}}c}nOb}{{{b{{Bb{{B`{Ih}}}}}}c}nOb}{{{b{Fl}}c}nOb}{{{b{Fn}}c}nOb}{{{b{G`}}c}nOb}{{{b{Gb}}c}nOb}{{{b{Cf}}c}nOb}{{{b{Gh}}c}nOb}{{{b{Gj}}c}nOb}{{{b{Gl}}c}nOb}{{{b{Gn}}c}nOb}{{{b{H`}}c}nOb}{{{b{Hb}}c}nOb}{{Adc}j{{Al{j}}}}0{{jOd}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dl}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jjHfAf}j}8{{AbHf}j}{{AdHf}j}{{jHf}j}{jOf}`{{jCj}j}`{jJd}{{jj}}{{Mf{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{Hj}}}j}44{{jjj}j}{{Fbc}Fd{{Al{j}}}}{{Ffc}Fh{{Al{j}}}}{{jjHnI`}j}```{{AdHj}j}{{{b{j}}{b{Lh}}Lj}{{n{Dbl}}}}<{Mfj}{{{b{c}}}e{}{}}0000000000000000000000<{{{b{D`}}}{{n{Dbl}}}}{{{b{c}}}Ej{}}000000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOh{Bh{{B`{Bj}}}}Hj}j}5{{jjCl}j}{{jcgCn}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{Db}}}{{Bf{{n{Dbl}}}}}}}}{{{b{Dd}}{b{C`{Dj{Hf}}}}}{{n{fl}}}}{{{b{c}}}Oj{}}00000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAfEj}j}{{AbHf}j}{{AdHf}j}{{jHf}j}{ce{}{}}00000000000000000000000000000`{cFb{{Al{j}}}}{{Fdc}Ff{{Al{j}}}}{{Fhc}Ff{{Al{j}}}}`{{Gdj}Gd}0{{Gfj}Gf}{{{b{D`}}Cj}{{n{Dbl}}}}{{Jd{Dj{j}}}j}{{Gfjjj}Gf}{{Gdjjj}Gd}1545445454{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{{b{D`}}}{{n{Dbl}}}}76{{GdIb}Gd}{{Gd{Bh{Ej}}}Gd}89{{jc}j{{Al{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````{{DnAf}j}{Dnj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Dnj}j}{Hj{{b{c}}}{}}{Hj{{b{C`c}}}{}}{Hjf}3{cc{}}87{{}Hj}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}2``{{Ilj{Ed{Af}}{Dj{Ef}}Ol}j}{Ilj}<;{{IlIb}j}1{{IljIb}j}{{IlEj}j}333<;:393873333333333{{Ilj}j}44{{Il{Bh{Ej}}jOn}j}{{Iljc}j{{Aj{A`}}}}6{{Il{b{A`}}}j}7607777777{{IljEj}j};;:<8878```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@`}}}A@`}{{{b{c}}{b{C`e}}}f{}{}}{Hj{{b{c}}}{}}{Hj{{b{C`c}}}{}}{c{{n{A@`}}}If}{Hjf}{{{b{A@`}}{b{A@`}}}Af}{{{b{A@`}}{b{C`Jh}}}{{n{fJj}}}}0{cc{}}{{{b{A@`}}{b{C`c}}}fLl}{{}Hj}{ce{}{}}{{{b{A@`}}c}nOb}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@b}}}A@b}{{{b{c}}{b{C`e}}}f{}{}}{Hj{{b{c}}}{}}{Hj{{b{C`c}}}{}}{c{{n{A@b}}}If}{Hjf}{{{b{A@b}}{b{A@b}}}Af}{{{b{A@b}}{b{C`Jh}}}{{n{fJj}}}}0{cc{}}{{{b{A@b}}{b{C`c}}}fLl}{{}Hj}{ce{}{}}{{{b{A@b}}c}nOb}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@d}}}A@d}{{{b{c}}{b{C`e}}}f{}{}}{Hj{{b{c}}}{}}{Hj{{b{C`c}}}{}}{c{{n{A@d}}}If}{Hjf}{{{b{A@d}}{b{A@d}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@d}}{b{C`Jh}}}{{n{fJj}}}}0{cc{}}{{{b{A@d}}{b{C`c}}}fLl}{{}Hj}{ce{}{}}{{{b{A@d}}c}nOb}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@h{{Dj{A@f}}}}}{{A@n{}{{A@j{A@l}}}}}}{cj{{Hd{Ej}}}}{{cAA`}{{A@h{A@l}}}{{Aj{{Ah{A@l}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjHf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jjHnI`{Bh{Ib}}{Bh{Ej}}}j}0{Gdj}11``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gfj}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2?{{{b{A`}}jN`}j}>{{cj}j{{Al{j}}}}{{jjGh}j}0``{{jjHfAf}j}4{{jjHnI`}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Ml}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AAb}}A@f}{{n{A@fl}}}}{{{b{AAb}}}AAb}{{{b{c}}{b{C`e}}}f{}{}}{Hj{{b{c}}}{}}0{Hj{{b{C`c}}}{}}0{c{{n{AAb}}}If}{Hjf}0{{{b{AAb}}{b{AAb}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AAb}}{b{C`Jh}}}{{n{fJj}}}}{cc{}}0{{{AAf{AAd}}}AAb}{{{b{Ml}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}Hj}0{ce{}{}}0{{{AAf{AAd}}{Bh{Cj}}Af}Ml}{{{b{AAb}}c}nOb}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Ml}}{b{C`{Dj{Hf}}}}}{{n{fl}}}}{{{b{c}}}Oj{}}066`{{OfAf}j}{Ofj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Of{b{A`}}Af}j}{{OfjAf}j}{{Ofj}j}1{Hj{{b{c}}}{}}{Hj{{b{C`c}}}{}}{Hjf}38{{OfjHj}j}4{{Of{b{A`}}}{{n{jl}}}}65{cc{}}6<;{{}Hj}{ce{}{}}{{Of{Bh{Cj}}{Bh{Hj}}}j}9>>{{OfHjAAh}j}0{{OfjjAf}j}0{{OfjjAfCh}j}{Ofj}{{Ofjj}j}>::>:>>>>>>{{OfCjGjj}j}?{{OfGj}j}{{Of{Bh{Ib}}{Bh{Ej}}Gjj}j}{{OfHj}j}{{OfjAf}j}6366{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}={{Ofj}j}````````````````````{{{b{c}}d}f{}}00000000{{A@lc}{{A@h{A@f}}}{{Bj{AAj{b{C`{AAn{AAl}}}}{b{C`{AAn{AB`}}}}}{{Bf{{A@h{f}}}}}}}}{{A@lAf}A@l}{{ABbc}A@l{{Aj{{Ah{j}}}}}}{{ABdAf}ABd}{{{b{ABf}}}Af}{{{B`{ABh}}ABj}{{A@h{A@l}}}}{{A@lA@lcc}A@l{{Al{j}}}}{{ABbcABl}A@l{{Bj{A@f}{{Bf{{A@h{A@f}}}}}}BlBn}}{{{b{ABf}}}{{b{Df}}}}{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{A@lABncCn}A@l{{Aj{{Ah{j}}}}}}{A@lA@l}``{{{b{AC`}}}f}{{A@l{ACb{{b{A`}}Cj}}Af}A@l}{{A@lCjAf}A@l}{{{b{AC`}}}AC`}{{{b{A@l}}}A@l}{{{b{ABb}}}ABb}{{{b{ABj}}}ABj}{{{b{ACd}}}ACd}{{{b{ACf}}}ACf}{{{b{ABf}}}ABf}{{{b{ACh}}}ACh}{{{b{ACj}}}ACj}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{ACl}}}{{Bh{{b{ACn}}}}}}0````{{ABdAD`}ABd}{A@l{{A@h{A@f}}}}{A@l{{A@h{AC`}}}}````{{{b{ACl}}{Dj{A@l}}}{{A@h{A@l}}}}0{{{b{ACd}}{Dj{A@l}}}{{A@h{A@l}}}}{A@lA@l}{{A@lA@l}A@l}{{}A@l}{{}ABj}{{}ACf}{{}ACh}{{}ACj}{Hj{{b{c}}}{}}000000000{Hj{{b{C`c}}}{}}000000000{{{b{A@l}}}{{A@h{Ej}}}}000{Hjf}{{{b{C`AC`}}}f}1{{A@le}A@l{{Aj{A`}}}{{ADb{}{{A@j{c}}}}}}22222222{{A@l{Bh{{Dj{j}}}}}A@l}``{{{b{A@l}}Af}{{A@h{Ej}}}}{{A@le}A@l{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}``{{{b{AC`}}}{{Bh{{A@h{A@f}}}}}}{{A@lHj}{{A@h{A@f}}}}{{{b{AC`}}}{{A@h{A@f}}}}``{{A@lc}A@l{{Al{j}}}}0{{A@lj}A@l}{ABdA@l}{ACl{{A@h{A@l}}}}0{ACd{{A@h{A@l}}}}10{ABf{{A@h{A@l}}}}{A@lA@l}{{{b{ACj}}{b{C`Jh}}}{{n{fJj}}}}{{ABdAf}ABd}{cc{}}00{ABbA@l}{IhA@l}2222222{{A@lA@lcc}A@l{{Al{j}}}}{{{b{A@l}}}ACj}{{{b{ACl}}}Af}0{{{b{ACd}}}Af}`{{A@le}ABb{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{A@ljcADd}ABb{{Aj{{Ah{j}}}}}}1{{ABb{Bh{Hj}}}A@l}`{{ABdADf}ABd}`{{}Hj}0000000008{ce{}{}}000000000{{{b{ACl}}}{{A@h{{Bh{ADh}}}}}}0{{A@lA@lccADj}A@l{{Aj{{Ah{j}}}}}}{A@lABd}{{ABdAf}ABd}{A@lA@l}{ADlA@l}1?{{ABdc}ABd{{Aj{{Ah{j}}}}}}{{A@lABn}A@l}``{{ABfAf}ABf}`{{A@lcADn{Bh{{B`{Jl}}}}{Bh{{b{A`}}}}}A@l{{Bj{A@f}{{Bf{{A@h{A@f}}}}}}BlBn}}{{A@lAAbADn{Bh{ABl}}Af}A@l}666{{A@lAE`}A@l}`{{A@lA@l{b{A`}}}{{A@h{A@l}}}}8{{{b{ACl}}}{{Bh{Hj}}}}{{{b{ACd}}}{{Bh{Hj}}}}{{{b{ABf}}}{{Bh{Hj}}}}````={cACd{{Aj{AEb}}}}{cABf{{Aj{AEb}}}}{{{B`{{Ah{AEd}}}}}ACd}{{{B`{{Ah{AEd}}}}}ABf}?={{A@l{b{C`{AAn{AAl}}}}{b{C`{AAn{AB`}}}}}{{A@h{AAj}}}}`{{{b{ACl}}}{{b{AEb}}}}{{{b{ACd}}}{{b{AEb}}}}{{{b{ABf}}}{{b{AEb}}}}{{{b{ACl}}}{{b{{Ah{AEd}}}}}}{{{b{ACd}}}{{b{{Ah{AEd}}}}}}{{{b{ABf}}}{{b{{Ah{AEd}}}}}}```{A@l{{A@h{{AEf{A@fA@f}}}}}}``{{A@ljN`}A@l}{{{b{ACl}}}Af}{{{b{ACd}}}Af}{{{b{ABf}}}Af}``{{A@lei}A@l{{Aj{A`}}}{{ADb{}{{A@j{c}}}}}{{Aj{A`}}}{{ADb{}{{A@j{g}}}}}}{A@lA@l}{{ABdc}ABd{{Aj{{Ah{j}}}}}}{{A@ljcNd}ABb{{Aj{{Ah{j}}}}}}``{{{b{ACl}}}{{Bh{{b{AEh}}}}}}{{{b{ACd}}}{{Bh{{b{AEh}}}}}}{{{b{ABf}}}{{Bh{{b{AEh}}}}}}```{{{b{ABf}}AEj}{{A@h{A@f}}}}{{LhAElAf}A@l}{{cACf}{{A@h{A@l}}}{{Aj{AEb}}}}{{{B`{{Ah{AEd}}}}ACf}{{A@h{A@l}}}}{{cACh}{{A@h{A@l}}}{{Aj{AEb}}}}{{{B`{{Ah{AEd}}}}ACh}{{A@h{A@l}}}}{{{b{A@l}}}{{A@h{ABl}}}}{{{b{ABf}}{Bh{Hj}}}{{A@h{ABl}}}}`{{A@lc}A@l{{Aj{{Ah{j}}}}}}0{{A@lA@lcc}A@l{{Al{j}}}}{{A@lc}A@l{{Al{j}}}}{{A@lce}A@l{{Al{j}}}{{Al{j}}}}``{{A@lAEdAEn}{{A@h{f}}}}{{A@lAEdAF`}{{A@h{f}}}}{{A@lEj{Bh{ACn}}AF`}{{A@h{f}}}}{{A@lAEdAFb}{{A@h{f}}}}{{A@lAEdAFd}{{A@h{f}}}}{{A@lEj{Bh{ACn}}AFd}{{A@h{f}}}}`{{A@lChABn}A@l}``{{A@lcCn}A@l{{Hd{AFf}}}}{{A@lcCn}A@l{{Aj{{Ah{j}}}}}}{{A@lHf}A@l}``{{ABdc}ABd{{Aj{A`}}}}{A@lA@l}{{A@lABn}A@l}{{ABb{Bh{Hj}}}A@l}{A@l{{A@h{AFh}}}}0{{{b{A@l}}Af}{{A@h{Ej}}}}{{{b{c}}}e{}{}}00000000{{A@lABncCn}A@l{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000``{{{b{c}}}Oj{}}000000000{{A@l{Bh{{Dj{Ej}}}}AFj}A@l}0{{A@le}A@l{{Aj{A`}}}{{ADb{}{{A@j{c}}}}}}`{{ABdAFl}ABd}={ce{}{}}000000000{{ABdA@l}ABd}{{ABf{Bh{AFn}}}ABf}{{ACdAf}ACd}{{A@lAf}A@l}{{A@lj}A@l}{{A@lc}A@l{{Aj{{Ah{j}}}}}}022{{ACd{Bh{{b{A`}}}}}ACd}{{A@lc}A@l{{Aj{{Ah{A@l}}}}}}5{{ACd{Bh{ABl}}}ACd}{{ACdAG`}ACd}{{ACdHf}ACd}888{{ABfAf}ABf}{{ACd{Bh{Hj}}}ACd}{{ABf{Bh{Hj}}}ABf};;{{AClc}ACl{{Al{{Bh{Hj}}}}}}{{ACdc}ACd{{Al{{Bh{Hj}}}}}}32{{ABfc}ABf{{Al{{Bh{Hj}}}}}}{{ACd{Bh{AGb}}}ACd}{{A@lACj}A@l}{{AClAEd}ACl}{{ACdAEd}ACd}{{ABfAEd}ABf}{{ACl{B`{{Ah{AEd}}}}}ACl}{{ACd{B`{{Ah{AEd}}}}}ACd}{{ABf{B`{{Ah{AEd}}}}}ABf}{{A@lAf}A@l}0{{ACd{Bh{Hf}}}ACd}{{ACdAf}ACd}{{AClAf}ACl}1{{ABfAf}ABf}4{{AClc}ACl{{Al{{Bh{AEh}}}}}}{{A@l{b{A`}}{Bh{ABn}}}A@l}{{ACdc}ACd{{Al{{Bh{AEh}}}}}}{{ACd{Bh{AEh}}}ACd}{{ABf{Bh{AEh}}}ABf}{{ABfc}ABf{{Al{{Bh{AEh}}}}}}{{ACd{Bh{ABl}}}ACd}{{ABf{Bh{ABl}}}ABf}{{ACdc}{{A@h{ACd}}}{{Bj{Lh}{{Bf{{A@h{Lh}}}}}}}}{{ACdHf}ACd}>{{ACdHj}ACd}0??==?{A@lA@l}{{{b{A@f}}ei{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@h{A@f}}}{{Aj{A`}}}{{ADb{}{{A@j{c}}}}}{{Aj{A`}}}{{ADb{}{{A@j{g}}}}}{{Aj{A`}}}{{ADb{}{{A@j{k}}}}}}0````{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{Hj{{b{c}}}{}}{Hj{{b{C`c}}}{}}{Hjf}{{{b{C`AGd}}{b{C`AGf}}}{{A@h{A@f}}}}{{{b{C`AGh}}{b{C`AGf}}}{{A@h{A@f}}}}{cc{}}{{}Hj}{ce{}{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}2{{AAj{b{C`{AAn{AAl}}}}{b{C`{AAn{AB`}}}}}{{A@h{{AGj{AGd}}}}}}``````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{Hn}}Ch{Bh{{b{AGl}}}}}{{n{Chl}}}}00{{{b{ABh}}}Af}00{{{b{ABh}}}{{b{Df}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000``{{{b{ADd}}}ADd}{{{b{Nd}}}Nd}{{{b{Hn}}}Hn}{{{b{AEn}}}AEn}{{{b{AF`}}}AF`}{{{b{AFb}}}AFb}{{{b{ADj}}}ADj}{{{b{ADf}}}ADf}{{{b{AFl}}}AFl}{{{b{AFd}}}AFd}{{{b{AGn}}}AGn}{{{b{Nb}}}Nb}{{{b{AH`}}}AH`}{{{b{AHb}}}AHb}{{{b{AA`}}}AA`}{{{b{Ih}}}Ih}{{{b{c}}{b{C`e}}}f{}{}}000000000000000``{{{b{Hn}}{b{Hn}}}AHd}`{{{b{c}}{b{e}}}AHd{}{}}``{{{b{Ih}}}{{n{{B`{Lh}}l}}}}`{{{b{Hn}}}Ch}{{{b{Hn}}}Af}{{}ADd}{{}Nd}{{}AEn}{{}AF`}{{}AFb}{{}ADj}{{}AFl}{{}AFd}{{}Nb}{{}AHb}{{}AA`}{{}Ih}{Hj{{b{c}}}{}}00000000000000000{Hj{{b{C`c}}}{}}00000000000000000`{{{b{Ih}}}{{n{Ejl}}}}0{c{{n{ADd}}}If}{c{{n{Nd}}}If}{c{{n{Hn}}}If}{c{{n{AEn}}}If}{c{{n{AF`}}}If}{c{{n{AFb}}}If}{c{{n{ADj}}}If}{c{{n{ADf}}}If}{c{{n{AFl}}}If}{c{{n{AFd}}}If}{c{{n{AGn}}}If}{c{{n{Nb}}}If}{c{{n{AH`}}}If}{c{{n{AHb}}}If}{c{{n{AA`}}}If}{c{{n{Ih}}}If}`{{{b{Ih}}}{{n{{`{Mb}}l}}}}{Hjf}00000000000000000{{{b{ADd}}{b{ADd}}}Af}{{{b{Nd}}{b{Nd}}}Af}{{{b{Hn}}{b{Hn}}}Af}{{{b{AEn}}{b{AEn}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{AFb}}{b{AFb}}}Af}{{{b{ADj}}{b{ADj}}}Af}{{{b{ADf}}{b{ADf}}}Af}{{{b{AFl}}{b{AFl}}}Af}{{{b{AFd}}{b{AFd}}}Af}{{{b{AGn}}{b{AGn}}}Af}{{{b{Nb}}{b{Nb}}}Af}{{{b{AH`}}{b{AH`}}}Af}{{{b{AHb}}{b{AHb}}}Af}{{{b{AA`}}{b{AA`}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADd}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Nd}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Hn}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{AEn}}{b{C`Jh}}}{{n{fJj}}}}{{{b{ABh}}{b{C`Jh}}}{{n{fJj}}}}{{{b{AF`}}{b{C`Jh}}}{{n{fJj}}}}{{{b{AFb}}{b{C`Jh}}}{{n{fJj}}}}{{{b{ADj}}{b{C`Jh}}}{{n{fJj}}}}{{{b{ADf}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{AFl}}{b{C`Jh}}}{{n{fJj}}}}0{{{b{AFd}}{b{C`Jh}}}{{n{fJj}}}}{{{b{AGn}}{b{C`Jh}}}{{n{fJj}}}}{{{b{Nb}}{b{C`Jh}}}{{n{fJj}}}}{{{b{AH`}}{b{C`Jh}}}{{n{fJj}}}}{{{b{AHb}}{b{C`Jh}}}{{n{fJj}}}}{{{b{AA`}}{b{C`Jh}}}{{n{fJj}}}}`{cc{}}0000000{ADfADj}1111111111`{{{b{AH`}}}Cj}{{{b{AHf}}{Dj{Bd}}{b{ADd}}}{{n{{AEf{Bd{Dj{Bd}}AHh}}l}}}}{{{b{ADd}}{b{C`c}}}fLl}{{{b{Nd}}{b{C`c}}}fLl}{{{b{Hn}}{b{C`c}}}fLl}{{{b{AEn}}{b{C`c}}}fLl}{{{b{AF`}}{b{C`c}}}fLl}{{{b{AFb}}{b{C`c}}}fLl}{{{b{ADj}}{b{C`c}}}fLl}{{{b{ADf}}{b{C`c}}}fLl}{{{b{AFl}}{b{C`c}}}fLl}{{{b{AFd}}{b{C`c}}}fLl}{{{b{AGn}}{b{C`c}}}fLl}{{{b{Nb}}{b{C`c}}}fLl}{{{b{AH`}}{b{C`c}}}fLl}{{{b{AHb}}{b{C`c}}}fLl}{{{b{AA`}}{b{C`c}}}fLl}``````{{}Hj}00000000000000000{ce{}{}}00000000000000000{{{b{ADf}}}Af}{{{b{Hn}}{Bh{{b{A`}}}}}Af}{{{b{Hn}}}Af}{{{b{AFl}}{b{ADf}}}{{n{fl}}}}1``{Mhj}{AHjj}{AH`j}````{AH`AH`}`{{{b{Hn}}}Ch}6{{HnCh}Hn}`1{{{b{AFl}}}Af}8{ChHn}{ADfADj}````{{{b{A`}}}Hn}`{{{b{Hn}}{b{Hn}}}{{Bh{AHd}}}}````{{{b{AHf}}{Dj{Bd}}{b{Nd}}}{{n{{AEf{Bd{Dj{Bd}}AHh}}l}}}}`{{{b{ABh}}AEj}{{n{A@fl}}}}{{{b{ABh}}{Bh{Hj}}}{{n{{B`{Lh}}l}}}}`{{{b{ADd}}c}nOb}{{{b{Nd}}c}nOb}{{{b{Hn}}c}nOb}{{{b{AEn}}c}nOb}{{{b{AF`}}c}nOb}{{{b{AFb}}c}nOb}{{{b{ADj}}c}nOb}{{{b{ADf}}c}nOb}{{{b{AFl}}c}nOb}{{{b{AFd}}c}nOb}{{{b{AGn}}c}nOb}{{{b{Nb}}c}nOb}{{{b{AH`}}c}nOb}{{{b{AHb}}c}nOb}{{{b{AA`}}c}nOb}{{{b{Ih}}c}nOb}`````{{{b{ADj}}}{{b{A`}}}}`{Ih{{n{AFhl}}}}{{{b{AH`}}}{{Bh{AHl}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ej{}}00`{{{b{Hn}}Ch{Bh{{b{AGl}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AHn}}}}}{{Bj{AHn}{{Bf{Ch}}}}}}{{{b{Hn}}Ch{Bh{{b{AGl}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}00000000000000{AHl{{n{AH`l}}}}111111111111111111111{{{b{c}}}Oj{}}00000000000000000`{ce{}{}}00000000000000000{{{b{Hn}}}Ch}{{{b{Hn}}}Af}{{ADjAD`}ADj}````````````````````````````````````````````````````````","D":"GEh","p":[[1,"reference"],[5,"Private",3216],[1,"unit"],[5,"MetaNameSpace",6,3217],[6,"Expr",6,3218],[6,"PolarsError",3219],[6,"Result",3220],[1,"str"],[5,"ArrayNameSpace",6,3221],[5,"ListNameSpace",6,3222],[1,"bool"],[1,"slice"],[10,"AsRef",3223],[10,"Into",3223],[10,"FunctionOutputField",6,3224],[5,"Arc",3225],[5,"SpecialEq",6,3224],[5,"Series",3226],[17,"Output"],[6,"Option",3227],[10,"Fn",3228],[10,"Send",3229],[10,"Sync",3229],[0,"mut"],[6,"VisitRecursion",3230],[10,"FnMut",3228],[6,"FunctionExpr",6,3231],[1,"i64"],[6,"DataType",3232],[5,"SortOptions",3233],[5,"SortMultipleOptions",3233],[5,"FieldsMapper",6,3234],[5,"Field",3235],[10,"SeriesUdf",6,3224],[10,"Any",3236],[6,"AggExpr",6,3218],[5,"Vec",3237],[1,"u64"],[5,"BinaryNameSpace",1507,3238],[6,"Operator",6,3218],[10,"Clone",3239],[1,"array"],[1,"i32"],[10,"RenameAliasFn",6,3224],[5,"String",3240],[5,"UserDefinedFunction",6,3241],[10,"SeriesBinaryUdf",6,3224],[5,"CategoricalNameSpace",6,3242],[5,"When",6,3243],[5,"Then",6,3243],[5,"ChainedWhen",6,3243],[5,"ChainedThen",6,3243],[6,"Excluded",6,3218],[6,"BooleanFunction",6,3244],[6,"CategoricalFunction",6,3245],[6,"PowFunction",6,3246],[6,"StringFunction",6,3247],[5,"DatetimeArgs",6,3248],[5,"DurationArgs",6,3248],[5,"RollingCovOptions",6,3249],[5,"StrptimeOptions",6,3249],[5,"JoinOptions",6,3249],[6,"WindowType",6,3249],[6,"WindowMapping",6,3249],[6,"NestedType",6,3249],[10,"IntoVec",3250],[1,"u8"],[10,"ExprEvalExtension",6,3251],[1,"usize"],[1,"f64"],[5,"Duration",2572,3252],[6,"ClosedWindow",3253],[6,"TimeUnit",3254],[10,"BinaryUdfOutputField",6,3224],[10,"Deserializer",3255],[6,"DslPlan",2572,3256],[6,"NullBehavior",3257],[5,"DateLikeNameSpace",1528,3258],[10,"Sized",3229],[10,"ListNameSpaceExtension",6,3259],[5,"EWMOptions",3260],[5,"StructNameSpace",6,3261],[6,"FillNullStrategy",3262],[5,"Formatter",3263],[5,"Error",3263],[10,"UdfSchema",6,3264],[1,"u32"],[1,"i8"],[1,"i16"],[1,"u16"],[1,"f32"],[6,"ArrayFunction",3265],[6,"BusinessFunction",3266],[6,"BinaryFunction",3267],[6,"TemporalFunction",3268],[6,"ListFunction",3269],[6,"RangeFunction",3270],[6,"StructFunction",3271],[5,"FunctionOptions",3272],[5,"Schema",3273],[6,"Context",3256],[10,"Hasher",3274],[6,"InterpolationMethod",3275],[10,"IntoListNameSpace",6,3259],[10,"Display",3263],[6,"ClosedInterval",3276],[5,"ExprNameNameSpace",6,3277],[10,"Literal",2572,3278],[10,"FnOnce",3228],[5,"PythonUdfExpression",2002,3279],[5,"UnitVec",3280],[6,"QuantileInterpolOptions",3281],[5,"RankOptions",2572,3282],[5,"RollingGroupOptions",2572,3283],[5,"RollingOptionsFixedWindow",3284],[5,"Float64Type",3285],[5,"ChunkedArray",3286],[10,"Copy",3229],[5,"RollingOptionsDynamicWindow",3287],[6,"SearchSortedSide",3288],[10,"Serializer",3289],[6,"IsSorted",3290],[5,"StringNameSpace",2047,3291],[6,"ListToStructWidthStrategy",3292],[5,"TypeId",3236],[6,"Roll",3293],[6,"NonExistent",3294],[6,"RollingFunction",1822,3295],[6,"RollingFunctionBy",1854,3296],[6,"TrigonometricFunction",1885,3297],[5,"DataFrame",3298],[8,"PolarsResult",3219],[17,"Item"],[5,"LazyFrame",2115],[10,"IntoParallelIterator",3299],[5,"UnionArgs",2572,3272],[5,"PythonFunction",2002,3279],[5,"PyAny",3300],[5,"Py",3301],[1,"char"],[5,"Node",3302],[6,"IR",3303],[5,"Arena",3302],[6,"AExpr",3304],[5,"LazyGroupBy",2115],[5,"JoinBuilder",2115],[5,"LazyJsonLineReader",2115,3305],[10,"AnonymousScan",2572,3306],[5,"ScanArgsAnonymous",2115,3307],[8,"SchemaRef",3273],[8,"IdxSize",3308],[5,"InProcessQuery",2115,3309],[8,"PlHashMap",3310],[5,"LazyCsvReader",2115,3311],[5,"ScanArgsIpc",2115,3312],[5,"ScanArgsParquet",2115,3313],[5,"OptState",2115,3314],[10,"LazyFileListReader",2115,3315],[5,"CloudOptions",3316],[6,"JoinCoalesce",3317],[10,"IntoIterator",3318],[5,"DynamicGroupOptions",2572,3283],[6,"JoinType",2572,3317],[8,"PathIterator",2115,3315],[5,"JoinArgs",2572,3317],[10,"IntoLazy",2115],[8,"AllowedOptimizations",2115,3314],[5,"MeltArgs",3319],[5,"Path",3320],[5,"PathBuf",3320],[1,"tuple"],[5,"RowIndex",3321],[5,"AnonymousScanArgs",2572,3306],[8,"PyObject",3301],[5,"CsvWriterOptions",2572,3322],[5,"IpcWriterOptions",2572,3323],[5,"JsonWriterOptions",2572,3324],[5,"ParquetWriteOptions",2572,3325],[8,"String",3326],[5,"IRPlan",3303],[6,"UniqueKeepStrategy",3298],[6,"JoinValidation",2572,3317],[8,"NonZeroUsize",3327],[6,"CsvEncoding",3328],[6,"NullValues",3328],[10,"Executor",2555,3329],[5,"ExecutionState",3330],[5,"Dummy",2555,3329],[5,"Box",3331],[6,"Tz",3332],[6,"RankMethod",2572,3282],[6,"LiteralValue",2572,3278],[5,"AnonymousScanOptions",2572,3272],[6,"Ordering",3333],[10,"PolarsTemporalGroupby",2572,3283],[6,"GroupsProxy",3334],[5,"Null",2572,3278],[6,"AnyValue",3335],[5,"NaiveDateTime",3336],[15,"Quantile",1399],[15,"Min",1399],[15,"Max",1399],[15,"IsBetween",1749],[15,"Any",1749],[15,"All",1749],[15,"SortBy",1409],[15,"Filter",1409],[15,"Cast",1409],[15,"Sort",1409],[15,"Gather",1409],[15,"RenameAlias",1409],[15,"Ternary",1409],[15,"Function",1409],[15,"Window",1409],[15,"AnonymousFunction",1409],[15,"Slice",1409],[15,"BinaryExpr",1409],[15,"QCut",1752],[15,"Entropy",1752],[15,"Log",1752],[15,"Hist",1752],[15,"Cut",1752],[15,"Correlation",1752],[15,"Round",1752],[15,"RoundSF",1752],[15,"EwmMeanBy",1752],[15,"Clip",1752],[15,"BackwardFill",1752],[15,"ForwardFill",1752],[15,"Random",1752],[15,"GatherEvery",1752],[15,"ValueCounts",1752],[15,"Rank",1752],[15,"EwmMean",1752],[15,"EwmStd",1752],[15,"EwmVar",1752],[15,"Replace",1752],[15,"CumCount",1752],[15,"CumSum",1752],[15,"CumProd",1752],[15,"CumMin",1752],[15,"CumMax",1752],[15,"TopK",1752],[15,"TopKBy",1752],[15,"ConcatHorizontal",1796],[15,"ConcatVertical",1796],[15,"ExtractGroups",1796],[15,"JsonDecode",1796],[15,"PadStart",1796],[15,"PadEnd",1796],[15,"SplitExact",1796],[15,"Contains",1796],[15,"Find",1796],[15,"Replace",1796],[15,"GroupBy",3161],[15,"Union",3161],[15,"Sort",3161],[15,"Cache",3161],[15,"ExtContext",3161],[15,"DataFrameScan",3161],[15,"Select",3161],[15,"HStack",3161],[15,"Scan",3161],[15,"MapFunction",3161],[15,"Filter",3161],[15,"Distinct",3161],[15,"Slice",3161],[15,"Sink",3161],[15,"Join",3161],[15,"HConcat",3161],[15,"PythonScan",3161],[15,"Range",3213]],"r":[[8,3218],[22,3221],[30,3224],[32,3244],[36,3245],[37,3242],[40,3243],[41,3243],[60,3248],[67,3248],[77,3218],[82,3218],[83,3251],[84,3277],[90,3234],[91,3277],[101,3231],[102,3224],[108,3224],[121,3259],[135,3249],[146,3222],[147,3259],[162,3217],[172,3249],[178,3218],[188,3246],[198,3224],[206,3249],[213,3224],[214,3224],[225,3224],[233,3247],[240,3249],[242,3261],[249,3243],[258,3264],[263,3241],[266,3243],[269,3249],[270,3249],[304,3337],[308,3338],[315,3338],[318,3339],[322,3340],[324,3341],[339,3342],[341,3342],[347,3343],[348,3344],[350,3340],[352,3243],[415,3345],[422,3344],[424,3340],[477,3338],[478,3337],[479,3337],[480,3346],[481,3346],[482,3346],[491,3347],[493,3338],[497,3338],[502,3341],[503,3248],[504,3341],[505,3341],[636,3340],[638,3337],[639,3337],[640,3248],[719,3340],[755,3338],[758,3346],[821,3340],[862,3337],[894,3341],[895,3341],[943,3344],[945,3344],[955,3340],[958,3340],[962,3278],[972,3339],[983,3340],[986,3340],[993,3344],[997,3338],[998,3344],[1001,3338],[1002,3344],[1010,3344],[1014,3338],[1040,3344],[1042,3340],[1054,3347],[1061,3340],[1064,3344],[1068,3338],[1072,3348],[1084,3347],[1085,3347],[1156,3347],[1164,3340],[1169,3344],[1173,3338],[1179,3243],[1182,3341],[1322,3340],[1368,3243],[1507,3238],[1527,3242],[1528,3258],[1600,3244],[1603,3245],[1641,3231],[1688,3246],[1720,3247],[1744,3231],[1745,3231],[1746,3231],[1747,3231],[1748,3231],[1816,3245],[1820,3246],[1826,3295],[1858,3296],[1900,3297],[1927,3248],[1928,3248],[1929,3337],[1930,3338],[1932,3338],[1933,3339],[1934,3341],[1935,3342],[1936,3342],[1937,3343],[1938,3344],[1939,3344],[1940,3338],[1941,3337],[1943,3337],[1945,3346],[1948,3346],[1949,3346],[1950,3347],[1951,3338],[1952,3338],[1953,3341],[1954,3341],[1955,3248],[1956,3341],[1957,3341],[1960,3337],[1961,3337],[1962,3248],[1963,3338],[1964,3346],[1967,3337],[1968,3341],[1969,3341],[1970,3344],[1971,3344],[1972,3339],[1973,3344],[1974,3344],[1975,3344],[1979,3344],[1984,3344],[1985,3347],[1986,3344],[1987,3338],[1988,3348],[1989,3347],[1990,3347],[1993,3347],[1994,3344],[1995,3341],[1996,3341],[2002,3279],[2003,3279],[2004,3279],[2005,3279],[2047,3291],[2109,3241],[2115,3314],[2116,3309],[2119,3311],[2120,3315],[2123,3305],[2124,3314],[2125,3315],[2126,3307],[2127,3312],[2128,3313],[2555,3329],[2556,3329],[2571,3349],[2572,3306],[2573,3306],[2574,3272],[2582,3322],[2588,3256],[2589,3252],[2591,3283],[2607,3323],[2609,3317],[2610,3317],[2611,3317],[2612,3324],[2614,3278],[2615,3278],[2621,3278],[2622,3278],[2627,3325],[2628,3283],[2631,3282],[2632,3282],[2633,3283],[2649,3272]],"b":[[510,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[511,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[512,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[585,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[586,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[587,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[643,"impl-PartialEq-for-Expr"],[644,"impl-Expr"],[647,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[648,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[730,"impl-Display-for-Expr"],[731,"impl-Debug-for-Expr"],[733,"impl-Debug-for-Operator"],[734,"impl-Display-for-Operator"],[736,"impl-Debug-for-BooleanFunction"],[737,"impl-Display-for-BooleanFunction"],[738,"impl-Display-for-CategoricalFunction"],[739,"impl-Debug-for-CategoricalFunction"],[740,"impl-Display-for-PowFunction"],[741,"impl-Debug-for-PowFunction"],[742,"impl-Debug-for-StringFunction"],[743,"impl-Display-for-StringFunction"],[744,"impl-Debug-for-FunctionExpr"],[745,"impl-Display-for-FunctionExpr"],[772,"impl-From%3Cu32%3E-for-Expr"],[774,"impl-From%3Ci64%3E-for-Expr"],[775,"impl-From%3Cu64%3E-for-Expr"],[776,"impl-From%3CAggExpr%3E-for-Expr"],[777,"impl-From%3Ci8%3E-for-Expr"],[778,"impl-From%3Ci16%3E-for-Expr"],[779,"impl-From%3Cf64%3E-for-Expr"],[780,"impl-From%3Cu8%3E-for-Expr"],[781,"impl-From%3C%26str%3E-for-Expr"],[782,"impl-From%3Cu16%3E-for-Expr"],[783,"impl-From%3Ci32%3E-for-Expr"],[784,"impl-From%3Cbool%3E-for-Expr"],[785,"impl-From%3Cf32%3E-for-Expr"],[788,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[790,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[791,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[792,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[793,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[794,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[795,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[796,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[797,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[798,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[799,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[804,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[805,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[807,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[808,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[841,"impl-Expr"],[842,"impl-Hash-for-Expr"],[1122,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1123,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1124,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1841,"impl-Display-for-RollingFunction"],[1842,"impl-Debug-for-RollingFunction"],[1872,"impl-Debug-for-RollingFunctionBy"],[1873,"impl-Display-for-RollingFunctionBy"],[1914,"impl-Debug-for-TrigonometricFunction"],[1915,"impl-Display-for-TrigonometricFunction"],[2279,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2280,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2512,"impl-LazyFileListReader-for-LazyCsvReader"],[2513,"impl-LazyCsvReader"],[2514,"impl-LazyJsonLineReader"],[2515,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2534,"impl-LazyFileListReader-for-LazyCsvReader"],[2535,"impl-LazyCsvReader"],[2536,"impl-LazyJsonLineReader"],[2537,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2896,"impl-Display-for-Duration"],[2897,"impl-Debug-for-Duration"],[2903,"impl-Debug-for-JoinType"],[2904,"impl-Display-for-JoinType"],[2905,"impl-Display-for-JoinValidation"],[2906,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOQI9AAEABIAGAANACcAAQArABEAPgAFAEUABwBOAAMAVAAAAFYAFwBvABcAiAACAIwABgCUAA4ApAAMALIAAgC2AB4A2AAJAOMADwD0AAQA+wAMAAkBAQAMAQAADgEeAC4BAAAzAQAANgEBADoBAABAAQAAQgEAAE0BAABQAQAAVwEBAFoBAQBfAQAAYgE7AKABAACiAQAApAEBAKkBAACwAS0A4QEAAPsBDAAJAk4AWgIAAFwCHQB7AgAAfQIAAIMCAQCGAg4AlgImAMUCAADIAgEAzgIAANQCAADXAhwA9QIAAAUDAAAHAwsAFQMAABcDCQAlAwEAKAMBAC8DAAA0AwAANgMAADsDAQBAAwUASQMAAEsDDQBcAwEAYAMdAKEDAgClAwAAuQMAAMEDAADOAwAA0QMFANoDAADdAwAA7QMAAPADAgD4AwIA/AMDAAUEAQAJBAIADwQBABsEAAAdBAEAJAQAACYEAAAuBAEANAQBADcEAAA8BAIAVgQFAF0EEwB6BAAAgQQAAIgEAACNBAAAjwQAAJEEAACXBAAAnAQAAJ4EAACgBAIApwQXAMAEBwDMBDsACgUAAAwFHwA4BQAAOgUeAFwFAQBhBQAAbgUAAHIFAQB3BRMAjgUBAJEFAQCUBQEAlwUEAJ0FRgDlBQMA6gUCAO8FAgD0BQMA/AUBAAUGAgALBgAADQYAABoGAAApBgMAMQYCATUHAQA4BxoAVAcBAFcHJQB+BwEAgQcGAIwHAACaBwAApwcBAK4HAQC5BwIAvQcDAMYHAwDOBx0A7gcDAPQHCwABCAMACQgCAA0IAAAQCAAAFQgCABkIAQA5CAMARQgDAEwIAABOCA0AXwgBAGMIFQB6CAEAfwgRAJMIAQCZCAAAoAgAAKMIGADACAIAxAgHAOAIAQDjCAAA6AgBAPMIAgD7CAAA/QgKABkJAQAeCQEAIQkAACMJAAAoCQEALgkDADMJAwA5CQEAPAkEAEkJAwBWCQQAXAkAAGAJAQBjCQAAbwkAAHwJAQB/CR0AnwkJAKwJAQCvCQkAugkAAMMJAQDRCQAA1AkAANgJAQDbCQEA5wkAAOoJAAD4CQQA/gkGAAYKAAAICgoAFgoAABkKAgAdCgMAIwoAACYKAAAqCgEAMAoAADIKBgA8CgIAQAoAAEMKCABNCgIAUgoAAFQKAABaChMAcQolAJkKJADCCosATwsTAGsLAAB2CwAAeAsRAIsLAACOCxEAsgsBALULAAC3CwAAugsCAMALBQDHCwAAygsAAMwLAgDQCwEA1AsCANoLFADwC6AA"}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPKNNNNHNNENNNNHNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHONONNNNNNNNNNNNNNNNNNONEEPKPPGKKKNMMMNNHHHNNHHNNNNNNNNNNNNNNNNNHNNHHHHHHNNHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","_left_join_from_series","_left_join_from_series","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesReshape","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","get_leaf_array","get_leaf_array","hash","implode","implode","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","reshape_list","reshape_list","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[231,"polars_ops::prelude"],[233,"polars_ops::series"],[289,"polars_ops::chunked_array::binary"],[290,"polars_core::datatypes"],[291,"polars_ops::chunked_array::binary::namespace"],[292,"polars_ops::chunked_array::scatter"],[293,"polars_utils::index"],[294,"polars_core::series"],[295,"polars_error"],[296,"core::marker"],[297,"core::option"],[298,"core::iter::traits::collect"],[299,"polars_ops::chunked_array::list::namespace"],[300,"polars_core::datatypes::aliases"],[301,"polars_core::chunked_array::ops::sort::options"],[302,"polars_core::frame"],[303,"dyn_clone::sealed"],[304,"polars_ops::frame::join::hash_join"],[305,"polars_ops::frame::join::args"],[306,"alloc::string"],[307,"polars_ops::frame::join::cross_join"],[308,"core::fmt"],[309,"core::convert"],[310,"core::hash"],[311,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[312,"polars_arrow::array::primitive"],[313,"core::result"],[314,"core::any"],[315,"polars_ops::series::ops::arg_min_max"],[316,"polars_ops::series::ops"],[317,"polars_core::chunked_array::ops::search_sorted"],[318,"polars_ops::series::ops::reshape"],[319,"polars_ops::series::ops::various"],[320,"polars_ops::frame::join::general"],[321,"polars_ops::series::ops::clip"],[322,"polars_ops::series::ops::horizontal"],[323,"polars_ops::series::ops::index"],[324,"polars_ops::series::ops::negate"],[325,"polars_ops::series::ops::not"],[326,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,36,37,0,0,37,37,0,0,0,0,36,0,0,36,37,0,38,38,38,38,0,33,36,37,38,0,31,31,0,31,31,31,31,0,31,31,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,36,33,39,39,39,39,33,36,38,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,36,36,36,37,37,37,38,38,38,33,36,37,37,38,38,33,33,36,37,38,44,33,36,37,38,47,47,47,47,33,33,36,37,38,44,33,36,37,38,37,38,44,33,44,38,33,0,33,33,33,33,36,37,38,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,0,0,54,0,54,54,0,0,0,0,54,52,52,53,54,54,0,0,0,54,54,0,0,54,54,54,54,54,54,54,54,54,54,56,56,54,56,56,54,54,0,57,57,0,0,0,0,0,0,56,56,0,54,54,54,54,57,57],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}```````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}D`{d{Ch}}Db}{{Af{Ch}}}}0{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}Db}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Dd}{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}DbBh{Al{{d{{l{{d{Bf}}}}}}}}}{{Af{Ch}}}}0{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Db}}}Db}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{c}}{d{Dfe}}}Cl{}{}}000{{{d{Dh}}{d{Dj}}}Bh}`{{{d{Dn}}{d{Ch}}{Al{{d{Bf}}}}{Al{{E`{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dn}}{d{Ch}}{Al{{E`{BnC`}}}}Bh}{{Af{{E`{ChCh}}}}}}0{{}Db}{{}Dh}{{}Dl}{{}Eb}{C`{{d{c}}}{}}000{C`{{d{Dfc}}}{}}000{C`Cl}000{{{d{Db}}{d{Db}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{Dl}}{d{Dl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{Db}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{cc{}}{DjDb}111{{{d{Eh}}{d{Ch}}ee}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}{{{d{Db}}{d{Dfc}}}ClEl}{{{d{Dh}}{d{Dfc}}}ClEl}{{{d{Dj}}{d{Dfc}}}ClEl}{{{d{Dl}}{d{Dfc}}}ClEl}{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{F`Bh}}}}}}0{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{{Fb{Ab}}{Fb{Ab}}}}}}}}0`{{}C`}0007{ce{}{}}000{{{d{Dj}}}Bh}{{{d{Dl}}{d{Dj}}}{{Af{Cl}}}}{{{d{Eh}}{d{Ch}}eeDb}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dl}}}Bh}={{{d{Ch}}{d{Ch}}Bh}{{Af{D`}}}}`{{{d{Db}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Dd{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{DbDh}Db}``````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dfe}}}Cl{}{}}{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Dfc}}}{}}{C`Cl}{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DfEd}}}{{Fd{ClFn}}}}{cc{}}{{{d{G`}}}Ad}0{{{d{Fl}}{d{Dfc}}}ClEl}{{{d{G`}}}{{Af{Bb}}}}0{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{Gb}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}{{{d{G`}}{d{{l{Bn}}}}}{{Af{Ad}}}}03{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{Gb}}BhBhDd}{{Af{Ch}}}}0","D":"En","p":[[10,"AsBinary",4,289],[1,"reference"],[8,"BinaryChunked",290],[10,"BinaryNameSpaceImpl",4,291],[1,"u8"],[1,"slice"],[8,"BooleanChunked",290],[10,"ChunkedSet",4,292],[8,"IdxSize",293],[5,"Series",294],[8,"PolarsResult",295],[10,"Copy",296],[17,"Item"],[6,"Option",297],[10,"IntoIterator",298],[10,"AsList",23],[8,"ListChunked",290],[10,"ListNameSpaceImpl",23,299],[1,"str"],[1,"bool"],[8,"StringChunked",290],[8,"IdxCa",300],[1,"i64"],[1,"usize"],[5,"SortOptions",301],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",302],[5,"Private",303],[1,"unit"],[10,"JoinDispatch",78,304],[8,"LeftJoinIds",78,305],[5,"JoinArgs",78,305],[5,"String",306],[0,"mut"],[6,"JoinCoalesce",78,305],[6,"JoinType",78,305],[6,"JoinValidation",78,305],[10,"CrossJoin",78,307],[1,"tuple"],[8,"ChunkJoinOptIds",78,305],[5,"Formatter",308],[8,"Result",308],[10,"DataFrameJoinOps",78],[10,"AsRef",309],[10,"Hasher",310],[10,"SeriesJoin",78,311],[8,"InnerJoinIds",78,305],[5,"PrimitiveArray",312],[6,"Result",313],[5,"TypeId",314],[10,"ArgAgg",233,315],[10,"SeriesSealed",233,316],[6,"SearchSortedSide",233,317],[5,"Error",308],[10,"SeriesReshape",233,318],[10,"SeriesMethods",233,319]],"r":[[4,289],[5,291],[6,292],[24,299],[78,305],[79,305],[82,307],[86,305],[87,305],[88,305],[89,304],[91,305],[92,305],[95,305],[100,311],[105,320],[108,320],[113,320],[141,304],[231,78],[232,74],[234,315],[237,317],[238,319],[239,318],[240,316],[247,321],[248,321],[249,321],[252,322],[253,323],[271,323],[274,322],[275,322],[276,322],[277,324],[278,325],[279,326],[282,322]],"b":[[172,"impl-Display-for-JoinType"],[173,"impl-Debug-for-JoinType"],[174,"impl-Display-for-JoinValidation"],[175,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPIAEwAAAAgACwABAA8AAwAVAA8AKQA3AGUABQBtABkAiQAnALIAAAC3AAwAyQABAMwAAADOABwA7AAGAPUAAgD7AAwACwEAAA4BAAATAQwA"}],\
["polars_sql",{"t":"FNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[31,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::logical_plan::options"],[122,"polars_plan::logical_plan"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,19,19,22,19,21,22,19,21,19,19,19,19,19,21,19,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,19,22,19,21,19,19,13,22,19,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00``{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00`{ce{}{}}00{{{b{Bf}}}Bh}`{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}`{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dh","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",31],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",31,121],[1,"bool"],[6,"Context",31,122],[5,"DefaultFunctionRegistry",31],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[23,127],[32,122],[35,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkADAACAAgAEAAAABkAAwAeAAAAIQAAACQAAAAmABEAOgARAFAABABaAAAAXAAAAF4ADQA="}],\
["polars_time",{"t":"PGFPPKKKKKPFCHHMMOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsMonthEnd","PolarsMonthStart","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","month_end","month_start","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[26,"polars_time::chunkedarray"],[28,"polars_time::chunkedarray::string"],[60,"polars_time::chunkedarray::string::infer"],[85,"polars_time::prelude"],[285,"polars_time::series"],[306,"chrono::naive::datetime"],[307,"polars_time::windows::duration"],[308,"polars_time::windows::group_by"],[309,"polars_core::datatypes::time_unit"],[310,"polars_arrow::legacy::time_zone"],[311,"core::option"],[312,"polars_core::chunked_array::logical::datetime"],[313,"polars_error"],[314,"polars_time::month_end"],[315,"polars_time::month_start"],[316,"polars_time::round"],[317,"polars_core::datatypes"],[318,"chrono::naive::time"],[319,"polars_core::chunked_array::logical::time"],[320,"polars_time::truncate"],[321,"polars_time::upsample"],[322,"polars_core::frame"],[323,"alloc::string"],[324,"polars_core::utils"],[325,"dyn_clone::sealed"],[326,"polars_time::chunkedarray::string::patterns"],[327,"core::fmt"],[328,"core::hash"],[329,"core::result"],[330,"core::any"],[331,"core::clone"],[332,"polars_time::windows::bounds"],[333,"polars_time::windows::window"],[334,"core::cmp"],[335,"polars_core::datatypes::dtype"],[336,"polars_core::frame::group_by::proxy"],[337,"alloc::vec"],[338,"core::ops::function"],[339,"polars_core::series"],[340,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,0,0,5,0,0,0,0,12,13,46,4,0,14,0,0,18,19,19,0,0,0,27,27,27,27,27,0,0,27,25,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,0,41,0,0,34,34,34,34,34,34,34,34,34,0,34,34,34,34,37,34,34,34,41,34,34,5,0,0,0,44,45,0,45,0,5,44,45,5,5,44,45,0,45,0,45,45,45,0,45,43,4,5,44,45,46,4,4,4,49,43,4,5,44,45,46,49,43,4,5,44,45,46,43,4,5,44,45,46,43,4,5,44,45,46,4,4,4,4,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,0,0,4,5,44,45,4,4,4,5,5,5,44,44,44,45,45,45,43,4,4,5,44,45,49,43,4,5,44,45,46,46,46,46,46,0,0,4,5,44,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,4,4,4,4,4,4,4,4,4,46,49,46,4,4,4,46,46,46,43,4,5,44,45,46,4,4,4,46,46,46,46,4,46,4,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,45,4,4,0,0,57,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59],"f":"`````````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}{{{d{Ah}}{A`{{d{n}}}}}{{Ad{Ah}}}}{{{d{Aj}}{A`{{d{n}}}}}{{Ad{Aj}}}}```{{{d{Al}}{d{An}}h{A`{{d{n}}}}}{{Ad{Al}}}}`{{{d{b}}B`B`hj}{{Ad{Bb}}}}{{{d{Bd}}{A`{{d{n}}}}{d{An}}{d{b}}}{{Ad{Bd}}}}{{{d{Bf}}c{d{b}}hh}{{Ad{Bh}}}{{Bl{Bj}}}}0``````````{{{d{c}}Bn}C`{}}{{{d{Cb}}}{{d{An}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{Cf}}}Cf}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}{{{d{Cf}}{d{Cf}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cf}}{d{CdCj}}}Cl}{cc{}}{{{d{Cf}}{d{Cdc}}}C`Cn}`{{}Ch}{ce{}{}}{{{d{Cf}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{D`{e}}}{}{}}0{{{d{c}}}Db{}}````{{{d{c}}Bn}C`{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{{Dd{c}}}}}{{Dd{c}}}{DfDh}}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}?{{{d{b}}}{{A`{Cf}}}}>=`{{{d{Cd{Dd{c}}}}{d{b}}}A`Dh}{{{d{CdDj}}{d{{Dn{Dl}}}}{A`{l}}}{{A`{c}}}{}}`=<{{c{A`{l}}}{{Ad{{Eb{}{{E`{e}}}}}}}{}{}}=<````````````````````````;;;;;;{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00;;;;;;;:::::::{{{d{Ef}}}Ef}{{{d{h}}}h}{{{d{j}}}j}{{{d{Eh}}}Eh}{{{d{Ej}}}Ej}{{{d{El}}}El}>>>>>>{{{d{h}}{d{h}}}En}{{{d{c}}{d{e}}}En{}{}}{{{d{h}}}Ed}{{{d{h}}}Af}{{}Ej}{Ch{{d{c}}}{}}000000{Ch{{d{Cdc}}}{}}000000{ChC`}000000{{h{d{F`}}{d{b}}}{{Ad{C`}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{C`}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Eh}}{d{Eh}}}Af}{{{d{Ej}}{d{Ej}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Ef}}{d{CdCj}}}Cl}{{{d{h}}{d{CdCj}}}Cl}0{{{d{j}}{d{CdCj}}}Cl}{{{d{Eh}}{d{CdCj}}}Cl}{{{d{Ej}}{d{CdCj}}}Cl}{cc{}}000000{{{d{El}}Edj{A`{{d{n}}}}}{{Ad{Ef}}}}00{{{d{El}}Efjl{A`{{d{n}}}}Ej}{{Ad{Fb}}}}{{hh{d{{Dn{Ed}}}}jl{A`{n}}}{{Ad{Fd}}}}{{El{d{{Dn{Ed}}}}jl{d{{A`{Ff}}}}AfAfEj}{{Fj{Fd{Fh{Ed}}{Fh{Ed}}}}}}{{{d{h}}{d{Cdc}}}C`Cn}{{{d{j}}{d{Cdc}}}C`Cn}{{{d{Eh}}{d{Cdc}}}C`Cn}{{{d{Ej}}{d{Cdc}}}C`Cn}{{}Ch}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}Ed}1{{hEd}h}12{Edh}{{hhh}El}{{{d{CdFb}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{En}}}}{{{d{El}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bj{}}{{{d{h}}Ed{A`{{d{n}}}}ceg}{{Ad{Ed}}}{{Fn{Ed}{{Fl{Ed}}}}}{{Fn{Ed}{{Fl{f}}}}}{{Fn{f}{{Fl{Ed}}}}}}{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}44440404{c{{D`{e}}}{}{}}0000000000000{{{d{c}}}Db{}}000000{{{d{Ej}}}{{A`{G`}}}}>?``{{{d{Gb}}}{{d{Gd}}}}{{{d{Gf}}}{{Ad{Gh}}}}{{{d{Gf}}}{{Ad{Gj}}}}0{{{d{Gf}}}{{Ad{Gl}}}}22112{{{d{Gf}}}{{Ad{Gn}}}}322{{{d{Gf}}{d{b}}}{{Ad{Gd}}}}0334","D":"Gb","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",306],[5,"Duration",85,307],[6,"ClosedWindow",85,308],[6,"TimeUnit",309],[6,"Tz",310],[6,"Option",311],[8,"DatetimeChunked",312],[8,"PolarsResult",313],[1,"bool"],[10,"PolarsMonthEnd",0,314],[10,"PolarsMonthStart",0,315],[10,"PolarsRound",0,316],[8,"StringChunked",317],[5,"NaiveTime",318],[8,"TimeChunked",319],[10,"PolarsTruncate",0,320],[10,"PolarsUpsample",0,321],[5,"DataFrame",322],[5,"String",323],[10,"IntoVec",324],[5,"Private",325],[1,"unit"],[10,"AsString",28],[0,"mut"],[6,"Pattern",28,326],[1,"usize"],[5,"Formatter",327],[8,"Result",327],[10,"Hasher",328],[6,"Result",329],[5,"TypeId",330],[5,"DatetimeInfer",60],[10,"Clone",331],[10,"PolarsNumericType",317],[10,"StrpTimeParser",60],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",60],[1,"i64"],[5,"Bounds",85,332],[6,"Label",85,308],[6,"StartBy",85,308],[5,"Window",85,333],[6,"Ordering",334],[6,"DataType",335],[5,"BoundsIter",85,333],[8,"GroupsSlice",336],[8,"TimeZone",335],[5,"Vec",337],[1,"tuple"],[17,"Output"],[10,"Fn",338],[1,"u32"],[10,"AsSeries",285],[5,"Series",339],[10,"TemporalMethods",285],[8,"Int32Chunked",317],[8,"Int8Chunked",317],[8,"BooleanChunked",317],[8,"Int16Chunked",317]],"r":[[1,308],[2,307],[5,314],[6,315],[7,316],[8,320],[9,321],[11,333],[13,340],[14,340],[22,340],[26,28],[34,326],[86,332],[87,333],[88,308],[91,307],[93,308],[101,308],[103,285],[107,333],[170,307],[171,307],[205,308],[206,308]],"b":[[189,"impl-Debug-for-Duration"],[190,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPkAFQAAAAsADwAHABgAAAAbABcANAACADgAEABKAAEATQATAGIACQBtAFUAygAAAMwAAQDQAAoA4gABAOYAAgDsAAIA8AABAPUADQAEAQAABgEaACUBAAA="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCQQQQCCCCCCCQCCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHKNNNNNKMHHHHFKNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","float","floor_divmod","fmt","format_list","format_list_container","format_smartstring","format_tuple","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[41,"polars_utils::abs_diff"],[45,"polars_utils::aliases"],[61,"polars_utils::arena"],[120,"polars_utils::atomic"],[140,"polars_utils::binary_search"],[142,"polars_utils::cache"],[178,"polars_utils::cell"],[198,"polars_utils::clmul"],[202,"polars_utils::contention_pool"],[217,"polars_utils::cpuid"],[219,"polars_utils::float"],[225,"polars_utils::floor_divmod"],[227,"polars_utils::functions"],[231,"polars_utils::hashing"],[263,"polars_utils::idx_vec"],[307,"polars_utils::index"],[369,"polars_utils::io"],[371,"polars_utils::iter"],[384,"polars_utils::mem"],[385,"polars_utils::min_max"],[392,"polars_utils::nulls"],[397,"polars_utils::ord"],[399,"polars_utils::partitioned"],[418,"polars_utils::slice"],[432,"polars_utils::sort"],[434,"polars_utils::sync"],[457,"polars_utils::sys"],[471,"polars_utils::total_ord"],[521,"polars_utils::unwrap"],[523,"polars_utils::vec"],[536,"num_traits"],[537,"core::cmp"],[538,"core::marker"],[539,"core::fmt"],[540,"core::clone"],[541,"core::option"],[542,"core::hash"],[543,"core::default"],[544,"core::ops::function"],[545,"core::result"],[546,"core::any"],[547,"core::borrow"],[548,"alloc::sync"],[549,"alloc::vec"],[550,"core::convert"],[551,"core::ops::range"],[552,"core::iter::traits::collect"],[553,"polars_utils::iter::fallible"],[554,"core::slice::iter"],[555,"polars_error"],[556,"std::fs"],[557,"std::path"],[558,"polars_utils::iter::enumerate_idx"],[559,"core::error"],[560,"core::iter::traits::iterator"],[561,"hashbrown::map"],[562,"core::mem::maybe_uninit"],[563,"core::slice::index"],[564,"num_traits::cast"],[565,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,113,0,0,0,0,0,113,10,11,114,115,113,10,11,114,115,0,0,13,15,13,15,13,13,15,13,15,13,15,15,15,13,15,13,15,13,15,13,13,15,15,15,15,15,15,13,13,13,13,13,13,15,15,13,15,13,13,13,13,15,13,13,13,13,13,15,13,15,13,15,13,13,15,13,13,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,37,34,37,34,34,34,34,37,34,37,34,37,34,37,37,34,34,34,34,37,34,34,37,34,37,34,34,37,34,34,37,34,37,34,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,0,44,44,44,44,44,0,45,0,0,0,0,0,0,51,51,51,51,51,51,52,51,51,51,51,51,51,51,51,51,0,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,0,0,65,0,0,0,0,63,64,63,64,0,63,64,63,64,63,64,63,64,63,64,63,63,63,63,64,63,64,63,63,64,65,65,63,63,64,63,64,63,64,67,64,63,63,67,63,64,68,64,69,63,63,64,63,64,63,64,63,64,0,0,0,0,0,78,0,78,72,72,72,72,74,58,78,0,0,80,80,80,80,80,80,66,66,0,66,66,0,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,0,0,0,86,88,88,90,0,91,91,92,92,0,0,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,0,97,97,97,97,97,97,97,97,97,97,97,97,105,0,0,0,0,105,0,100,100,0,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,105,100,105,93,101,93,93,102,102,93,93,101,100,100,100,100,0,106,0,0,0,108,0,0,108,108,109,110,111,110,112],"f":"```````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{Cn}}}Cn}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}Cn}{Ab{{Al{c}}}{}}{{{Al{Cn}}}{{Al{c}}}{}}{{{Al{AhCn}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhCn}}}B`}{AbCn}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{D`{c}}}}c}AbDb}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Dd{ce}}}}}{{Dd{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Dd{ce}}}{DfDh}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dj{ceg}}}}cBf}e{DfDhBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Dd{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DfDhDl}{{Dn{c}}DfDh}{}}{{{Al{Ah{Dd{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DfDhDl}{{Dn{c}}DfDh}{}}{{{Al{Ah{Dd{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{Dn{c}}DfDh}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Dd{ce}}}}ce}{{Al{Ahe}}}{DfDh}{}}{ce{}{}}0{{gAb}{{Dj{ceg}}}{DfDhBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Dd{ce}}}{DfDh}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Dd{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{Dn{c}}DfDh}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{E`{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{c{{E`{c}}}{}}{cc{}}{Ebc{}}{{{Al{{E`{c}}}}}{}Dl}{{{Al{Ah{E`{c}}}}}{{Al{Ahc}}}Dl}{{}Ab}{ce{}{}}{{{E`{c}}}c{}}7{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EdEd}Ed}0{EdEd}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Ef{c}}}}}cCb}>={Ab{{Ef{c}}}Cb}{{{Al{{Ef{c}}}}c}B`Cb}<<;{{}Bf}0`00{{{Al{Eh}}}Bf}10`{{EjEj}{{El{EjEj}}}}{{{En{c}}e}{{En{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{D`{e}}}}{Bn{Ab}}}{{F`{c}}}Bb{{Fb{{D`{c}}}}}}{{AbAb{Fd{Ab}}}{{Fd{Ab}}}}{{{En{c}}g}{{Ch{{En{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``?>{{{Al{Ff}}}Ff}{{{Al{c}}{Al{Ahe}}}B`{}{}}?>{{{Al{Fh}}}Ed}{{{Al{Ff}}}Ed}?{{{Al{Ff}}{Al{Ff}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ff}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Ff}}{Al{Ahc}}}B`C`}{{EdAb}Ab}{{}Ab}{ce{}{}}{{{Al{Ff}}}Bf}{{{Bn{{Al{{D`{Fj}}}}}}Ed}Ff}2{{{Al{c}}}e{}{}}{{{Al{Ff}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ffc{}}``{{{Al{Ah{Fl{c}}}}}{{Al{Ah{D`{c}}}}}{}}0{{{Al{{Fl{c}}}}}{{Al{{D`{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Fl{c}}}}}Ab{}}{{{Al{{Fl{c}}}}}{{Fl{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Fl{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{{Fl{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{Fl{c}}}}}B`{}}{AbB`}{{{Al{{Fl{c}}}}{Al{{Fl{c}}}}}BfFn}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{Fl{c}}}}e}B`{}{{Gb{}{{G`{c}}}}}}{{{Al{{Fl{c}}}}{Al{AhBh}}}Bjl}{{{Al{{D`{c}}}}}{{Fl{c}}}Bb}{cc{}}{{{F`{c}}}{{Fl{c}}}{}}{g{{Ch{ic}}}{}{}{{Gd{c}{{G`{e}}}}}{}}{e{{Fl{c}}}{}{{Gb{}{{G`{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{Fl{c}}}}}Bf{}}{{{Al{{Fl{c}}}}}{{Gf{c}}}{}}{{{Al{Ah{Fl{c}}}}}{{Gh{c}}}{}}{{{Al{{Fl{c}}}}}Ab{}}{{}{{Fl{c}}}{}}{{{Al{Ah{Fl{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Fl{c}}}}c}B`{}}0{{{Al{Ah{Fl{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{Fl{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{D`{Gj}}}}Gj}{{Gl{B`}}}}{{{Al{Gn}}}Gn}{{{Al{H`}}}H`}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Gn}}{Al{Gn}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{H`{{El{GjGj}}}}{{{Al{Gn}}{Al{AhBh}}}Bj}{{{Al{H`}}{Al{AhBh}}}Bj}{GjGn}{cc{}}0{{{Al{{Hb{}{{G`{c}}}}}}Ab}cHd}0{{{Al{Gn}}}Gj}{{}Ab}0`{{{Al{AhH`}}}{{Al{AhEd}}}}{ce{}{}}0{{{Al{Hf}}}Bf}{{{Al{H`}}}Bf}{{{Al{Gn}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hf}}}Ab}{{}Gn}{{}H`}{{{Al{Hh}}}Ab}{{GjGj}H`}{{HjEd}Gj}{{{Al{Gn}}}{{Bn{Gj}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{c{{Gl{Hl}}}{{Fb{Hn}}}}0``````{I`{{`{I`Gj}}}}0{I`{{`{I`Ib}}}}0{g{{Ch{Idc}}}If{}{{Gd{c}{{G`{e}}}}}}{{{Al{AhGd}}}{{Ch{B`c}}}If}{{{Il{}{{Ih{c}}{Ij{e}}}}}e{}{{In{}{{G`{c}}}}}}{{{Al{{D`{c}}}}}{{Al{Ah{D`{c}}}}}j}`{{J`J`}J`}000{{{Al{J`}}{Al{J`}}}Bf}0```{{{Al{{Hd{}{{Jb{c}}}}}}}Bf{}}{{{Hd{}{{Jb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEh}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Jd{ceg}}}}}{{Al{{D`{{Jf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}}{{Al{Ah{F`{{Jf{ceg}}}}}}}{}{}{}}{ce{}{}}{{{F`{{Jf{ceg}}}}}{{Jd{ceg}}}{}{}{}}{{{Al{{Jd{ceg}}}}Ed}{{Jh{ceg}}}{}{}{}}{{{Al{{Jd{ceg}}}}Ed}{{El{{Jh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}Ed}{{El{{Jj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}Ed}{{Jj{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{Jl}}}{{Al{{D`{{Jn{c}}}}}}}{}}{{{Al{K`}}e}Al{}{{Kb{{D`{c}}}}}}{{{Al{AhK`}}e}{{Al{Ah}}}{}{{Kb{{D`{c}}}}}}{{{Al{Kd}}}Bf}{{{Al{{D`{Fj}}}}}Ed}{{{Al{Kf}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Kh}}{Fd{Ab}}}Kh}0{{e{Al{Ah{F`{Fj}}}}Ab}{{Al{Ah{D`{g}}}}}{Kjj}{{Gb{}{{G`{c}}}}}{Klj}}{{{Al{Kn}}{Al{{D`{{El{GjGj}}}}}}{Al{Ah{F`{Gj}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{L`{c}}}}}{{L`{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{L`{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{L`{c}}}}{Al{AhBh}}}Bjl}{cc{}}{{}{{L`{c}}}{}}0{{{Al{{L`{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{L`{c}}}}}Bf{}}44{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Lb}}}Ed};87443```````21{LdLd}{LfLf}{{{Al{{Lh{c}}}}}{{Lh{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BdKj}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Lh{c}}}}}EdFh}{AbB`}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BfLj}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BfKj}0{{{Al{{Lh{c}}}}{Al{Ahe}}}B`LlC`}{{}Ab}{ce{}{}}{{{Al{{Lh{c}}}}}BfHd}447{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}{{Bn{Bd}}}Kj}2{{{Al{c}}}e{}{}}{{{Al{{Mb{}{{Ln{c}}{M`{e}}}}}}}c{}{}}{{{Al{Kj}}{Al{Kj}}}Bd}{{{Al{Lj}}{Al{Lj}}}Bf}{{{Al{Kj}}{Al{Kj}}}Bf}0{{{Al{Ll}}{Al{Ahc}}}B`C`}{{{Al{{D`{Ll}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Lh{c}}}eHd{}}`{Mdc{}}``````{{{Al{{Mh{}{{Mf{c}}}}}}g}{{F`{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Mh{}{{Mf{c}}}}g}{{F`{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhMj}}Abc}B`j}{Ml{{El{AbAb}}}}{{{Al{AhMn}}c}B`{}}{{{Al{Ml}}}{{El{AbAb}}}}{{AbLf}N`}","D":"Id","p":[[17,"Abs"],[10,"AbsDiff",41],[10,"Num",536],[10,"PartialOrd",537],[10,"Copy",538],[10,"Debug",539],[10,"Send",538],[10,"Sync",538],[1,"usize"],[8,"PlHashMap",45],[8,"PlHashSet",45],[0,"mut"],[5,"Arena",61],[1,"reference"],[5,"Node",61],[1,"unit"],[10,"Clone",540],[6,"Ordering",537],[1,"bool"],[5,"Formatter",539],[8,"Result",539],[1,"array"],[6,"Option",541],[10,"Hasher",542],[10,"Default",543],[17,"Output"],[10,"FnOnce",544],[6,"Result",545],[10,"FnMut",544],[5,"TypeId",546],[5,"SyncCounter",120],[1,"slice"],[10,"Ord",537],[5,"FastFixedCache",142],[10,"Hash",542],[10,"Eq",537],[5,"FastCachedFunc",142],[10,"Sized",538],[10,"Borrow",547],[5,"SyncUnsafeCell",178],[1,"never"],[1,"u64"],[5,"LowContentionPool",202],[10,"IsFloat",219],[10,"FloorDivMod",225],[1,"tuple"],[5,"Arc",548],[5,"Vec",549],[10,"AsRef",550],[5,"Range",551],[5,"BytesHash",231],[10,"DirtyHash",231],[1,"u8"],[5,"UnitVec",263],[10,"PartialEq",537],[17,"Item"],[10,"IntoIterator",552],[10,"FallibleIterator",371,553],[5,"Iter",554],[5,"IterMut",554],[8,"IdxSize",307],[8,"PolarsResult",555],[5,"NullableIdxSize",307],[5,"ChunkId",307],[10,"Indexable",307],[10,"IsNull",392],[10,"Bounded",307],[10,"NullCount",307],[10,"ToIdx",307],[5,"File",556],[5,"Path",557],[10,"EnumerateIdxTrait",371,558],[1,"u32"],[10,"FromFallibleIterator",371,553],[10,"Error",559],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",371],[10,"Iterator",560],[10,"MinMax",385],[17,"Inner"],[5,"PartitionedHashMap",399],[5,"HashMap",561],[5,"RawEntryBuilder",561],[5,"RawEntryBuilderMut",561],[10,"Slice2Uninit",418],[20,"MaybeUninit",562],[10,"GetSaferUnchecked",418],[10,"SliceIndex",563],[10,"SortedSlice",418],[10,"Extrema",418],[10,"SliceAble",418],[10,"TotalOrd",471],[10,"FromPrimitive",564],[5,"ThreadPool",565],[5,"SyncPtr",434],[5,"MemInfo",457],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",471],[10,"TotalEq",471],[10,"TotalHash",471],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",471],[10,"UnwrapUncheckedRelease",521],[17,"ItemIn"],[10,"ConvertVec",523],[10,"ResizeFaster",523],[10,"IntoRawParts",523],[10,"PushUnchecked",523],[10,"CapacityByFactor",523],[10,"InitHashMaps",45],[8,"PlIndexMap",45],[8,"PlIndexSet",45]],"r":[[0,307],[1,307],[371,558],[372,553],[373,553]],"b":[[286,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[288,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAM4BNQAAAAgACgBPAFwAAABeAAEAYQACAGYAEgB6AAkAhQAAAIgABACQAA4AoQAFAKkACQC0AAEAtwACALwAAAC/AAAAxAAMANIAAQDVAAYA3QAKAOkADgD5AAIA/QALAAoBFQAhAQMAJgEGAC4BJQBWAQAAWAEEAF8BFwB4AQAAegEGAIIBCwCQAQUAlwECAJsBDQCrAQQAsQEAALQBBQC7AQEAvgEDAMMBAADFAQUAzAEEANMBAADVAQMA3QEDAOMBCwDwAQMA9QEVAAwCBAASAgMAFwIBAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
